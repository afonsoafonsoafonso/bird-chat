{
    "DataRevision": -90259641,
    "Event": "programming-2019",
    "Name": "‹Programming› 2019",
    "Description": "Thank you for attending ‹Programming› 2020! We hope to see you next year in March at ‹Programming› 2020 in Porto, Portugal!",
    "Sponsors": "ACM, SIGPLAN, SIGSOFT, DIBRIS - Dipartimento di Informatica, Bioingegneria, Robotica e Ingegneria dei SIstemi, Università degli studi di Genova, AOSA, Italian Chapter of the European Association for Theoretical Computer Science (EATCS), Gruppo Nazionale per il Calcolo Scientifico, Istituto Nazionale di Alta Matematica Francesco Severi",
    "URL": "https://2019.programming-conference.org",
    "Items": [
      {
        "Title": "SmaCC",
        "Type": "Talk",
        "Key": "cocodo-2019-smacc",
        "URL": "https://2019.programming-conference.org/details/cocodo-2019/1/SmaCC",
        "PersonsString": "Jason Lecerf",
        "Authors": [
          "jasonlecerf"
        ],
        "Affiliations": [
          "CEA LIST, France"
        ],
        "AffiliationsString": "CEA LIST, France",
        "Abstract": "SmaCC (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen’s limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens."
      },
      {
        "Title": "PetitParser",
        "Type": "Talk",
        "Key": "cocodo-2019-petitparser",
        "URL": "https://2019.programming-conference.org/details/cocodo-2019/3/PetitParser",
        "PersonsString": "Andrei Chiş",
        "Authors": [
          "andreichis"
        ],
        "Affiliations": [
          "feenk, Switzerland"
        ],
        "AffiliationsString": "feenk, Switzerland",
        "Abstract": "PetitParser combines ideas from scannerless parsing, parser combinators, parsing expression grammars and packrat parsers to model grammars and parsers as objects that can be reconfigured dynamically."
      },
      {
        "Title": "Scrap your DSL Boilerplate with a Universe of Syntaxes, their Programs and Proofs",
        "Type": "Talk",
        "Key": "cocodo-2019-building-a-compiler-fully-in-agda",
        "URL": "https://2019.programming-conference.org/details/cocodo-2019/2/Scrap-your-DSL-Boilerplate-with-a-Universe-of-Syntaxes-their-Programs-and-Proofs",
        "PersonsString": "Guillaume Allais",
        "Authors": [
          "guillaumeallais"
        ],
        "Affiliations": [
          "University of Strathclyde"
        ],
        "AffiliationsString": "University of Strathclyde",
        "Abstract": "Almost every programming language’s syntax includes a notion of binder and corresponding bound occurrences, along with the accompanying notions of alpha-equivalence, capture avoiding substitution, typing contexts, runtime environments, and so on. In the past, implementing and reasoning about programming languages required careful handling to maintain the correct behaviour of bound variables. Modern programming languages include features that enable constraints like scope safety to be expressed in types. Nevertheless, the programmer is still forced to write the same boilerplate over again for each new implementation of a scope safe operation (e.g., renaming, substitution, desugaring, printing, etc.), and then again for correctness proofs. We present an expressive universe of syntaxes with binding and demonstrate how to (1) implement scope safe traversals once and for all by generic programming; and (2) how to derive properties of these traversals by generic proving."
      },
      {
        "Title": "Language Engineering with Rascal",
        "Type": "Tutorial",
        "Key": "cocodo-2019-language-engineering-with-rascal",
        "URL": "https://2019.programming-conference.org/details/cocodo-2019/4/Language-Engineering-with-Rascal",
        "PersonsString": "Tijs van der Storm",
        "Authors": [
          "tijsvanderstorm"
        ],
        "Affiliations": [
          "CWI, Netherlands"
        ],
        "AffiliationsString": "CWI, Netherlands",
        "Abstract": "Software Language Engineering (SLE) is concerned with the principled techniques and concepts for the construction of software languages. In this tutorial we will explore how the Rascal metaprogramming environment and language workbench addresses aspects of implementing software languages. We will work on a simple DSL for defining questionnaires, called QL, touching upon syntax definition, static analysis, transformation, language extension, and code generation."
      },
      {
        "Title": "Web Security Training [at] UniGe: an Experience",
        "Type": "Research paper",
        "Key": "proweb-2019-papers-web-security-training-at-unige-an-experience",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/5/Web-Security-Training-at-UniGe-an-Experience",
        "PersonsString": "Andrea Valenza",
        "Authors": [
          "andreavalenza"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": "Although cybersecurity is becoming more and more central in every software development lifecycle, nowadays, developers often lack a precise understanding of the risk and impact of attacks. Discovering vulnerabilities in production environments is hard, but making developers aware of common vulnerabilities leads to more reliable software and an easier and more effective vulnerability assessment process. \nIn this work, we present an experience at the University of Genova aimed at spreading cybersecurity awareness among Computer Science and Computer Engineering students. During this experience, we found that practical, non-formal training had a substantial impact on cybersecurity awareness of the students that will become developers in the future."
      },
      {
        "Title": "Civic Participation Powered by Ethereum: a Proposal",
        "Type": "Research paper",
        "Key": "proweb-2019-papers-civic-participation-powered-by-ethereum-a-proposal",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/6/Civic-Participation-Powered-by-Ethereum-a-Proposal",
        "PersonsString": "Maura Cerioli and Marina Ribaudo",
        "Authors": [
          "mauracerioli",
          "marinaribaudo1"
        ],
        "Affiliations": [
          "",
          ""
        ],
        "AffiliationsString": "",
        "Abstract": "In the last decade, ICT infrastructures for smart cities have become a reality and the number of projects affecting citizens’ lives is growing. In particular, the technology supporting civic participation is mature, although many systems do not reach the needed critical mass, as they are not able to capture the interest of their intended target. To overcome this difficulty, we describe a proposal for encouraging citizens’ participation by a reward mechanism based on a civic currency, powered by blockchain tokens, used to recognize civic engagement. This paper briefly sketches the main features of the system and discusses the development of its proof-of-concept in the context of a university course following an agile process."
      },
      {
        "Title": "TryLinks: An interactive tutorial system for a cross-tier Web programming language\t",
        "Type": "Talk",
        "Key": "proweb-2019-papers-trylinks-an-interactive-tutorial-system-for-a-cross-tier-web-programming-language",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/2/TryLinks-An-interactive-tutorial-system-for-a-cross-tier-Web-programming-language-",
        "PersonsString": "Junao Wu, Arek Mikolajczak and James Cheney",
        "Authors": [
          "junaowu",
          "arekmikolajczak",
          "jamescheney"
        ],
        "Affiliations": [
          "",
          "",
          "University of Edinburgh, UK"
        ],
        "AffiliationsString": ", University of Edinburgh, UK",
        "Abstract": "Links is a web programming language under development in Edinburgh aimed at simplifying web development. Conventional multi-tier applications involve programming in several languages for different layers, and the mismatches between these layers and abstractions need to be handled by the programmer, which can lead to costly errors or security vulnerabilities. In Links, programs combine all of the code of a web application in a single program, and the implementation generates appropriate JavaScript and HTML for the client, and SQL queries for the database. \nLinks is freely available for anyone to use. However, installing and using Links is non-trivial, making it difficult for new programmers to get started and learn about Links. This paper reports on a Web-based ``TryLinks\" system, allowing anyone to experiment with Links without going through the installation process. TryLinks was designed with two major functionalities: an interactive Links shell that teaches the basic syntax of Links and acts as a playground, as well as a short tutorial series on how Links is used in practical web development. Tutorials can also be created or modified by administrators. \nWe present the design and implementation of TryLinks, and conclude with discussion of lessons learned from this project and remaining challenges for Web-based tutorials for Web programmin languages."
      },
      {
        "Title": "GUI Testing in Production: Challenges and Opportunities",
        "Type": "Research paper",
        "Key": "proweb-2019-papers-gui-testing-in-production-challenges-and-opportunities",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/1/GUI-Testing-in-Production-Challenges-and-Opportunities",
        "PersonsString": "Giovanni Denaro, Luca Guglielmo, Leonardo Mariani and Oliviero Riganelli",
        "Authors": [
          "giovannidenaro",
          "lucaguglielmo",
          "leonardomariani",
          "olivieroriganelli"
        ],
        "Affiliations": [
          "University of Milano-Bicocca, Italy",
          "",
          "University of Milano Bicocca",
          ""
        ],
        "AffiliationsString": "University of Milano-Bicocca, Italy, , University of Milano Bicocca",
        "Abstract": "Automatic system testing of commercial software applications is extremely challenging and requires facing many issues, including the integration of test generators with the software process of the organization that is in charge for the verification and validation activities. In this paper, we discuss the main challenges that we faced in the early stages of a technology transfer project aimed to introduce a test generator in a software house that develops Web-based ERP solutions. We discuss the insights gained during the project that are now driving us to address the identified challenges."
      },
      {
        "Title": "How Artificial Intelligence Can Improve Web Development and Testing",
        "Type": "Talk",
        "Key": "proweb-2019-papers-how-artificial-intelligence-can-improve-web-development-and-testing",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/3/How-Artificial-Intelligence-Can-Improve-Web-Development-and-Testing",
        "PersonsString": "Andrea Stocco",
        "Authors": [
          "andreastocco"
        ],
        "Affiliations": [
          "Università della Svizzera italiana (USI)"
        ],
        "AffiliationsString": "Università della Svizzera italiana (USI)",
        "Abstract": "The Artificial Intelligence (AI) revolution in software development is just around the corner. With the rise of AI, developers are expected to play a different role from the traditional role of programmers, as they will need to adapt their know-how and skillsets to complement and apply AI-based tools and techniques into their traditional web development workflow. In this keynote, I will discuss some of the current trends on how AI is being leveraged to enhance web development and testing, along with some of the main opportunities and challenges that we are going to face next."
      },
      {
        "Title": "Orchestrated Crowdsourced Testing of a Mobile Web Application: A Case Study\t",
        "Type": "Research paper",
        "Key": "proweb-2019-papers-orchestrated-crowdsourced-testing-of-a-mobile-web-application-a-case-study",
        "URL": "https://2019.programming-conference.org/details/proweb-2019-papers/4/Orchestrated-Crowdsourced-Testing-of-a-Mobile-Web-Application-A-Case-Study-",
        "PersonsString": "Maurizio Leotta, Vincenzo Petito, Luca Gelati, Giorgio Delzanno, Giovanna Guerrini and Viviana Mascardi",
        "Authors": [
          "maurizioleotta",
          "vincenzopetito",
          "lucagelati",
          "giorgiodelzanno",
          "giovannaguerrini",
          "vivianamascardi"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova, Italy",
          "",
          "",
          "DIBRIS, University of Genova",
          "",
          "DIBRIS, University of Genova, Italy"
        ],
        "AffiliationsString": "DIBRIS, University of Genova, Italy, , DIBRIS, University of Genova",
        "Abstract": "Responsive mobile web applications are quite challenging to test, especially if they require heavy interaction with the environment (e.g., through GPS-based location tracking and camera-based QR code acquisition and recognition) and among different users, as in the case of collaborative games support, where the app needs to support the real-time interaction of a large number of users. In this paper, we propose a case study of orchestrated crowdsourced testing of such a mobile web app, as an approach to face such challenges."
      },
      {
        "Title": "IDVE: an Integrated Development and Verification Environment for JavaScript",
        "Type": "Talk",
        "Key": "px-2019-papers-idve-an-integrated-development-and-verification-environment-for-javascript",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/9/IDVE-an-Integrated-Development-and-Verification-Environment-for-JavaScript",
        "PersonsString": "Christopher Schuster and Cormac Flanagan",
        "Authors": [
          "christopherschuster",
          "cormacflanagan"
        ],
        "Affiliations": [
          "University of California, Santa Cruz",
          "University of California, Santa Cruz"
        ],
        "AffiliationsString": "University of California, Santa Cruz",
        "Abstract": ""
      },
      {
        "Title": "Time Series Analysis of Programmer’s EEG for Debug State Classifcation",
        "Type": "Talk",
        "Key": "px-2019-papers-time-series-analysis-of-programmer-s-eeg-for-debug-state-classifcation",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/2/Time-Series-Analysis-of-Programmer-s-EEG-for-Debug-State-Classifcation",
        "PersonsString": "Toyomi Ishida and Hidetake Uwano",
        "Authors": [
          "toyomiishida",
          "hidetakeuwano"
        ],
        "Affiliations": [
          "",
          "National Institute of Technology, Nara College, Japan"
        ],
        "AffiliationsString": ", National Institute of Technology, Nara College, Japan",
        "Abstract": "Appropriate support for debugging contributes to efficient software development. Several previous studies used bio-information such as brain activity to classify the inner-state of programmer without interruption. In this paper, we measure programmer’s brain waves while they comprehend the source code. In the experiment, we analyze difference of time-series brain wave features between success/failure for tasks that source code comprehension and bug judgement. The result of the experiment showed the participants who success source code understanding significantly increased power spectrum of α and β wave with the time passage."
      },
      {
        "Title": "Projectional DSLs from the ground up",
        "Type": "Talk",
        "Key": "px-2019-papers-projectional-dsls-from-the-ground-up",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/7/Projectional-DSLs-from-the-ground-up",
        "PersonsString": "Meinte Boersma",
        "Authors": [
          "meinteboersma"
        ],
        "Affiliations": [
          "Dutch Tax and Customs Agency"
        ],
        "AffiliationsString": "Dutch Tax and Customs Agency",
        "Abstract": "A lot of developer work can be categorized as “more of the same”: tediously implementing almost-homogeneous, yet not-entirely-right functional specs, handed over by a veritable army of domain experts, in last year’s “favorite” enterprise platform. What if you could offload that work to those same domain experts, allowing them to write down actually-correct specs that can be run directly, now and in the future? After all, the best way to become a 10X programmer is to empower as many other people as possible. \nModel-driven software development and domain-specific languages (DSLs) can achieve exactly that. While low-code platforms force users to transmogrify their specifications into the language of that platform, DSLs are molded to fit the domain’s existing parlance and exact needs, at the same time giving your domain knowledge and assets a lifespan that exceeds that of the target platform du jour. \nTraditionally, implementing a DSL has been a complex task: you needed to know about parsing, integrating into an existing IDE, etc., even when using a language workbench. By now, the browser has become the most important client technology for applications, and it has become both desirable as well as feasible to implement DSLs with structured or projectional editing efficiently in the browser. This also does neatly away with the need to learn about parser technology. \nIn this talk, we’ll walk the listener through an implementation of a projectional, business-oriented DSL that’s small and simple, but plausibly real-life. We’ll use a stack consisting of JavaScript, React, and MobX to leverage Transparent Functional Reactive Programming (TFRP) as an architectural principle to be able to program more bang with fewer bits. \nAfter the talk, listeners will hopefully be convinced of the advantages of projectional DSLs, and of the feasibility of implementing one themselves in a limited amount of time."
      },
      {
        "Title": "The Meager Validation of Live Programming",
        "Type": "Talk",
        "Key": "px-2019-papers-the-meager-validation-of-live-programming",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/5/The-Meager-Validation-of-Live-Programming",
        "PersonsString": "Johan Fabry",
        "Authors": [
          "johanfabry"
        ],
        "Affiliations": [
          "Raincode Labs, Belgium"
        ],
        "AffiliationsString": "Raincode Labs, Belgium",
        "Abstract": ""
      },
      {
        "Title": "PolyJuS: A Squeak/Smalltalk-based Polyglot Notebook System for the GraalVM",
        "Type": "Talk",
        "Key": "px-2019-papers-polyjus-a-squeak-smalltalk-based-polyglot-notebook-system-for-the-graalvm",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/3/PolyJuS-A-Squeak-Smalltalk-based-Polyglot-Notebook-System-for-the-GraalVM",
        "PersonsString": "Fabio Niephaus, Eva Krebs, Christian Flach, Robert Hirschfeld and Jens Lincke",
        "Authors": [
          "fabioniephaus",
          "evakrebs",
          "christianflach",
          "roberthirschfeld",
          "jenslincke"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, University of Potsdam",
          "",
          "Hasso Plattner Institute, University of Potsdam, Germany",
          "Hasso-Plattner-Institut (HPI), Germany",
          "Hasso Plattner Institute, University of Potsdam, Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, University of Potsdam, , Hasso Plattner Institute, University of Potsdam, Germany, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": "Jupyter notebooks are used by data scientists to publish their research in an executable format. These notebooks are usually limited to a single programming language. Current polyglot notebooks extend this concept by allowing multiple languages per notebook, but this comes at the cost of having to externalize and to import data across languages. Our approach for polyglot notebooks is able to provide a more direct programming experience by executing notebooks on top of a polyglot execution environment, allowing each code cell to directly access foreign data structures and to call foreign functions and methods. We implemented this approach using GraalSqueak, a Squeak/Smalltalk implementation for the GraalVM. To prototype the programming experience and experiment with further polyglot tool support, we build a Squeak/Smalltalk-based notebook UI that is compatible with the Jupyter notebook file format. We evaluate PolyJuS by demonstrating an example polyglot notebook and discuss advantages and limitations of our approach."
      },
      {
        "Title": "Live Software Development --- Tightening the feedback loops",
        "Type": "Talk",
        "Key": "px-2019-papers-live-software-development-tightening-the-feedback-loops",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/8/Live-Software-Development-Tightening-the-feedback-loops",
        "PersonsString": "Ademar Aguiar, André Restivo, Filipe Figueiredo Correia, Hugo Sereno Ferreira and João Pedro Dias",
        "Authors": [
          "ademaraguiar",
          "andrerestivo",
          "filipecorreia",
          "hugoserenoferreira",
          "joaopedrodias"
        ],
        "Affiliations": [
          "FEUP, Universidade do Porto",
          "LIACC, Universidade do Porto, Porto, Portugal",
          "University of Porto",
          "FEUP, Universidade do Porto",
          "INESC TEC, Porto"
        ],
        "AffiliationsString": "FEUP, Universidade do Porto, LIACC, Universidade do Porto, Porto, Portugal, University of Porto, INESC TEC, Porto",
        "Abstract": ""
      },
      {
        "Title": "Draw This Object: A Study of Debugging Representations",
        "Type": "Talk",
        "Key": "px-2019-papers-draw-this-object-a-study-of-debugging-representations",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/1/Draw-This-Object-A-Study-of-Debugging-Representations",
        "PersonsString": "Matúš Sulír and Ján Juhár",
        "Authors": [
          "matussulir",
          "janjuhar"
        ],
        "Affiliations": [
          "Technical University of Košice",
          ""
        ],
        "AffiliationsString": "Technical University of Košice, ",
        "Abstract": "Domain-specific debugging visualizations try to provide a view of a runtime object tailored to a specific domain and highlighting its important properties. The research in this area has focused mainly on the technical aspects of the creation of such views so far. However, we still lack answers to questions such as what properties of objects are considered important for these visualizations, whether all objects have an appropriate domain-specific view, or what clues could help us to construct these views fully automatically. In this paper, we describe an exploratory study where the participants were asked to inspect runtime states of objects displayed in a traditional debugger and draw ideal domain-specific views of these objects on paper. We describe interesting observations and findings obtained during this study and a preliminary taxonomy of these visualizations."
      },
      {
        "Title": "Faster Feedback through Lexical Test Prioritization",
        "Type": "Talk",
        "Key": "px-2019-papers-faster-feedback-through-lexical-test-prioritization",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/6/Faster-Feedback-through-Lexical-Test-Prioritization",
        "PersonsString": "Toni Mattis, Falco Dürsch and Robert Hirschfeld",
        "Authors": [
          "tonimattis",
          "falcodursch",
          "roberthirschfeld"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, University of Potsdam",
          "",
          "Hasso-Plattner-Institut (HPI), Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, University of Potsdam, , Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": ""
      },
      {
        "Title": "What can we learn from systems?",
        "Type": "Talk",
        "Key": "px-2019-papers-what-can-we-learn-from-systems-",
        "URL": "https://2019.programming-conference.org/details/px-2019-papers/4/What-can-we-learn-from-systems-",
        "PersonsString": "Luke Church and Mariana Marasoiu",
        "Authors": [
          "lukechurch",
          "marianamarasoiu"
        ],
        "Affiliations": [
          "",
          "University of Cambridge"
        ],
        "AffiliationsString": ", University of Cambridge",
        "Abstract": ""
      },
      {
        "Title": "Gluing Internet of Things Together",
        "Type": "Short-paper",
        "Key": "icw-2019-papers-glueing-the-internet-of-things-together",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/4/Gluing-Internet-of-Things-Together",
        "PersonsString": "Alfred Åkesson, Mattias Nordahl, Gorel Hedin and Boris Magnusson",
        "Authors": [
          "alfredakesson",
          "mattiasnordahl",
          "gorelhedin",
          "borismagnusson"
        ],
        "Affiliations": [
          "Lund University, Sweden",
          "Lund University",
          "Lund University",
          "Lund University, Sweden"
        ],
        "AffiliationsString": "Lund University, Sweden, Lund University",
        "Abstract": "We believe that enabling services to collaborate, even if they were not designed to work together, will be important for the success of the Internet of Things (IoT). To support this, we have designed a domain specific language (DSL), called ComPOS, for gluing IoT services together. In this talk, we demonstrate ComPOS by building a system that helps spy on birds in gardens."
      },
      {
        "Title": "Welcome",
        "Type": "Day opening",
        "Key": "vpt-2019-papers-welcome",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/8/Welcome",
        "PersonsString": "Alexei Lisitsa and Andrei Nemytykh",
        "Authors": [
          "alexeilisitsa",
          "andreinemytykh"
        ],
        "Affiliations": [
          "University of Liverpool ",
          "Program Systems Institute of RAS, Russia"
        ],
        "AffiliationsString": "University of Liverpool , Program Systems Institute of RAS, Russia",
        "Abstract": ""
      },
      {
        "Title": "Static Program Analysis for String Manipulation Languages",
        "Type": "Talk",
        "Key": "vpt-2019-papers-static-program-analysis-for-string-manipulation-languages",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/11/Static-Program-Analysis-for-String-Manipulation-Languages",
        "PersonsString": "Vincenzo Arceri and Isabella Mastroeni",
        "Authors": [
          "vincenzoarceri",
          "isabellamastroeni"
        ],
        "Affiliations": [
          "University of Verona, Italy",
          "University of Verona, Italy"
        ],
        "AffiliationsString": "University of Verona, Italy",
        "Abstract": ""
      },
      {
        "Title": "Modelling and verifying Bitcoin contracts.",
        "Type": "Talk",
        "Key": "vpt-2019-papers-modelling-and-verifying-bitcoin-contracts-",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/3/Modelling-and-verifying-Bitcoin-contracts-",
        "PersonsString": "Massimo Bartoletti",
        "Authors": [
          "massimobartoletti"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Lemma Generation for Horn Clause Satisfiability: A Preliminary Study",
        "Type": "Talk",
        "Key": "vpt-2019-papers-lemma-generation-for-horn-clause-satisfiability-a-preliminary-study",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/7/Lemma-Generation-for-Horn-Clause-Satisfiability-A-Preliminary-Study",
        "PersonsString": "Emanuele De Angelis, Fabio Fioravanti, Alberto Pettorossi and Maurizio Proietti",
        "Authors": [
          "emanueldeangelis",
          "fabiofioravanti",
          "albertopettorossi",
          "maurizioproietti"
        ],
        "Affiliations": [
          "University of Chieti-Pescara",
          "University of Chieti-Pescara",
          "University of Rome Tor Vergata, Italy",
          "CNR-IASI"
        ],
        "AffiliationsString": "University of Chieti-Pescara, University of Rome Tor Vergata, Italy, CNR-IASI",
        "Abstract": ""
      },
      {
        "Title": "ELS 2019 Keynote Slot",
        "Type": "Other",
        "Key": "icw-2019-papers-els-2019-keynote-slot",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/9/ELS-2019-Keynote-Slot",
        "PersonsString": "Oleks Shturmov",
        "Authors": [
          "oleksshturmov"
        ],
        "Affiliations": [
          "University of Oslo"
        ],
        "AffiliationsString": "University of Oslo",
        "Abstract": "Due to a healthy interest in the ELS Keynote, we leave the first slot of the day uncharted. Go write you a Lisp!"
      },
      {
        "Title": "VM Support for Live Typing",
        "Type": "Talk",
        "Key": "morevms-2019-vm-support-for-live-typing",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/11/VM-Support-for-Live-Typing",
        "PersonsString": "Hernan Wilkinson",
        "Authors": [
          "hernanwilkinson"
        ],
        "Affiliations": [
          "10Pines"
        ],
        "AffiliationsString": "10Pines",
        "Abstract": "Live Typing automatically annotates variable types based on the objects assigned to them, and method return types based on the returned objects. IDEs can exploit this information to greatly improve the development tools and the programming experience, bringing some of the benefits of Static Typing tools to Dynamically Typed Languages. Live Typing benefits are boosted in Live Development Environments because the same VM is used to run the system under development and the IDE. Type information can be obtained from the running code no matter if that code is part of the language’s core, the development tools, or the system under development. The more code is run the more type info it will provide. For Live Typing to be usable, the VM has to collect the information as fast as possible, in objects that have to be accessed and configured from the development environment. This paper presents how the OpenSmalltalk-VM was modified to accomplish this task and the challenges we have for future versions."
      },
      {
        "Title": "To expose, or not to expose, hardware heterogeneity to runtimes!",
        "Type": "Talk",
        "Key": "morevms-2019-to-expose-or-not-to-expose-hardware-heterogeneity-to-runtimes-",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/2/To-expose-or-not-to-expose-hardware-heterogeneity-to-runtimes-",
        "PersonsString": "Shoaib Akram",
        "Authors": [
          "shoaibakram"
        ],
        "Affiliations": [
          "Ghent University"
        ],
        "AffiliationsString": "Ghent University",
        "Abstract": "The emphasis on energy efficient computing is steering hardware towards greater heterogeneity. Software must take advantage of emerging heterogeneous hardware to optimize for performance and efficiency. A question that arises is what is the right software layer to abstract the complexity of heterogeneous hardware? \nHistorically, the operating system (OS) is the first choice to abstract new hardware features. This benefits programmers, virtual machine developers, and language implementers, who do not need to worry about hardware details. On the other hand, the upper layers of the software stack, especially the language runtimes contain rich semantic information about user applications, unavailable to the OS. This information can be useful in better managing hardware. The drawback is that it requires changes to the runtime which makes hardware vendors depend on runtime developers. This paper discusses two case studies that show exposing hardware details to the Java runtime improves key evaluation metrics for popular Java applications. We further discuss implications for implementation complexity, programming model, and the necessary hardware and OS support."
      },
      {
        "Title": "Validation of Internet of Things Frameworks",
        "Type": "Talk",
        "Key": "vpt-2019-papers-validation-of-internet-of-things-frameworks",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/2/Validation-of-Internet-of-Things-Frameworks",
        "PersonsString": "Giorgio Delzanno",
        "Authors": [
          "giorgiodelzanno"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova"
        ],
        "AffiliationsString": "DIBRIS, University of Genova",
        "Abstract": ""
      },
      {
        "Title": "Polyvariant Program Specialisation with Property-Based Abstraction",
        "Type": "Talk",
        "Key": "vpt-2019-papers-polyvariant-program-specialisation-with-property-based-abstraction",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/9/Polyvariant-Program-Specialisation-with-Property-Based-Abstraction",
        "PersonsString": "John P. Gallagher",
        "Authors": [
          "johnpgallagher"
        ],
        "Affiliations": [
          "Roskilde University"
        ],
        "AffiliationsString": "Roskilde University",
        "Abstract": ""
      },
      {
        "Title": "Introduction to the Workshop",
        "Type": "Day opening",
        "Key": "icw-2019-papers-introduction-to-the-workshop",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/6/Introduction-to-the-Workshop",
        "PersonsString": "Eric Jul",
        "Authors": [
          "ericjul"
        ],
        "Affiliations": [
          "University of Oslo"
        ],
        "AffiliationsString": "University of Oslo",
        "Abstract": ""
      },
      {
        "Title": "The Issue Of Source Code Repository Management In Large Enterprises",
        "Type": "Short-paper",
        "Key": "icw-2019-papers-the-issue-of-source-code-repository-management-in-large-enterprises",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/5/The-Issue-Of-Source-Code-Repository-Management-In-Large-Enterprises",
        "PersonsString": "Nicolas Brousse",
        "Authors": [
          "nicolasbrousse"
        ],
        "Affiliations": [
          "Adobe"
        ],
        "AffiliationsString": "Adobe",
        "Abstract": "Product and engineering teams’ speed of producing high-quality results is critical to ensuring enterprise competitiveness. Additionally, one can observe an increase in IT systems complexity driven by the adoption of service-oriented architecture, micro-services, and serverless. Therefore, many large enterprises benefit from a mono-repository for source code management because of the improved team cognition that results from eroding barriers between teams and from influencing enhanced teamwork quality. This paper, first, reviews the characteristics of a multi-repositories structure, a monorepository structure, and a hybrid model. Second, it discusses why some manage source code in a multi-repositories structure, either by choice or because of the organic evolution of large enterprises. Third, it reviews how mono-repositories in large teams, beyond the technical arguments, can drive high efficiency and enhanced product quality through improved team cognition."
      },
      {
        "Title": "Live GUI Development for Service-Based Systems",
        "Type": "Short-paper",
        "Key": "icw-2019-papers-live-gui-development-for-service-based-systems",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/1/Live-GUI-Development-for-Service-Based-Systems",
        "PersonsString": "Boris Magnusson and Björn Johnsson",
        "Authors": [
          "borismagnusson",
          "bjornjohnsson"
        ],
        "Affiliations": [
          "Lund University, Sweden",
          "Lund University"
        ],
        "AffiliationsString": "Lund University, Sweden, Lund University",
        "Abstract": "In an increasingly connected world where all manner of devices can communicate over the Internet, conventional methods for developing GUIs (Graphical User Interfaces) are insufficient. For systems of such devices, it must be possible to develop the system itself independently from its GUI(s). In this paper, we present an approach for developing GUIs towards already deployed, or “live”, service-based distributed systems without the need to write any additional program code (“glue code”). The results include development tools, and an implementation for the middleware framework PalCom and the mobile platform Android; they have been tested in several research projects and have been used for developing commercial products."
      },
      {
        "Title": "VM design in an Ideal World vs. VM design in the Real World",
        "Type": "Talk",
        "Key": "morevms-2019-vm-design-in-an-ideal-world-vs-vm-design-in-the-real-world",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/3/VM-design-in-an-Ideal-World-vs-VM-design-in-the-Real-World",
        "PersonsString": "Lukas Stadler",
        "Authors": [
          "lukasstadler"
        ],
        "Affiliations": [
          "Oracle Labs, Austria"
        ],
        "AffiliationsString": "Oracle Labs, Austria",
        "Abstract": "Implementing language runtimes is simple in the ideal world: language specifications are combined with well-abstracted APIs and various approaches to code generation and optimization to form functional and efficient VMs, and multiple such VMs are in healthy competition to perform best in various well-defined scenarios. In the real world, things tend to be more interesting: languages lack specification (or don’t adhere to it), APIs expose implementation details in obvious and non-obvious ways, vast ecosystems need to be supported, and users have unexpected expectations on overall system behavior. This talk will show the experience gained from the language implementations that are part of the GraalVM multilingual runtime, in terms of how the understanding of the languages evolved over time (and what to look out for) and how some of the resulting technical challenges were solved by applying generic and GraalVM-specific solutions."
      },
      {
        "Title": "Closing",
        "Type": "Day closing",
        "Key": "vpt-2019-papers-closing",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/6/Closing",
        "PersonsString": "Alexei Lisitsa and Andrei Nemytykh",
        "Authors": [
          "alexeilisitsa",
          "andreinemytykh"
        ],
        "Affiliations": [
          "University of Liverpool ",
          "Program Systems Institute of RAS, Russia"
        ],
        "AffiliationsString": "University of Liverpool , Program Systems Institute of RAS, Russia",
        "Abstract": ""
      },
      {
        "Title": "Panel Discussion \u0026 Wrap Up",
        "Type": "Other",
        "Key": "icw-2019-papers-panel-discussion",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/2/Panel-Discussion-Wrap-Up",
        "PersonsString": "Eric Jul and Oleks Shturmov",
        "Authors": [
          "ericjul",
          "oleksshturmov"
        ],
        "Affiliations": [
          "University of Oslo",
          "University of Oslo"
        ],
        "AffiliationsString": "University of Oslo",
        "Abstract": ""
      },
      {
        "Title": "Study of Recursion Elimination for a Class of Semi-interpreted Recursive Program Schemata",
        "Type": "Talk",
        "Key": "vpt-2019-papers-study-of-recursion-elimination-for-a-class-of-semi-interpreted-recursive-program-schemata",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/4/Study-of-Recursion-Elimination-for-a-Class-of-Semi-interpreted-Recursive-Program-Sche",
        "PersonsString": "Nikolay Shilov",
        "Authors": [
          "nikolayshilov"
        ],
        "Affiliations": [
          "Innopolis University"
        ],
        "AffiliationsString": "Innopolis University",
        "Abstract": ""
      },
      {
        "Title": "Factoring out Glue-code in Systems of IoT devices",
        "Type": "Short-paper",
        "Key": "icw-2019-papers-factoring-out-glue-code-in-systems-of-iot-devices",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/8/Factoring-out-Glue-code-in-Systems-of-IoT-devices",
        "PersonsString": "Boris Magnusson, Görel Hedin and Björn Johnsson",
        "Authors": [
          "borismagnusson",
          "gorelhedin1",
          "bjornjohnsson"
        ],
        "Affiliations": [
          "Lund University, Sweden",
          "",
          "Lund University"
        ],
        "AffiliationsString": "Lund University, Sweden, , Lund University",
        "Abstract": "We present an architecture for distributed, heterogeneous systems where there is a clear separation of the concerns for Computation, Coordination, Configuration respectively, motivated by the different needs when these are considered. The computation part is often implemented in traditional programming code, and packaged as services, the other concerns might need to be created much later and by other people in separate organisations, or even by end users. In this paper we present the model used by the Palcom middleware where each of the concerns can be implemented separate, in separate representations, by separate people and yet combined and updated afterwards. The Palcom middleware is implemented in Java and in active use in research projects and in commercial products."
      },
      {
        "Title": "Verifying String Replacing Procedures by Supercompilation",
        "Type": "Talk",
        "Key": "vpt-2019-papers-verifying-string-replacing-procedures-by-supercompilation",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/5/Verifying-String-Replacing-Procedures-by-Supercompilation",
        "PersonsString": "Antonina Nepeivoda",
        "Authors": [
          "antoninanepeivoda"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Interconnecting Code in 2019 — Il buono, il brutto, il cattivo",
        "Type": "Talk",
        "Key": "icw-2019-papers-interconnecting-code-il-buono-il-brutto-il-cattivo",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/3/Interconnecting-Code-in-2019-Il-buono-il-brutto-il-cattivo",
        "PersonsString": "Oleks Shturmov",
        "Authors": [
          "oleksshturmov"
        ],
        "Affiliations": [
          "University of Oslo"
        ],
        "AffiliationsString": "University of Oslo",
        "Abstract": "In this introductory talk, I will survey some of the presently popular means to interconnect heterogeneous code components. In-so-doing, I aim to pinpoint some of the good, the bad, and the ugly elements of modern approaches, and kick-start a discussion on how we can progress towards a brighter future. Some of the technologies I will mention are gRPC and Thrift."
      },
      {
        "Title": "Hacking program analysis: a systematic approach to code protection",
        "Type": "Talk",
        "Key": "vpt-2019-papers-hacking-program-analysis-a-systematic-approach-to-code-protection",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/1/Hacking-program-analysis-a-systematic-approach-to-code-protection",
        "PersonsString": "Roberto Giacobazzi",
        "Authors": [
          "robertogiacobazzi"
        ],
        "Affiliations": [
          "University of Verona and IMDEA Software Institute"
        ],
        "AffiliationsString": "University of Verona and IMDEA Software Institute",
        "Abstract": ""
      },
      {
        "Title": "Introductory Discussion",
        "Type": "Other",
        "Key": "icw-2019-papers-post-keynote-discussion",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/7/Introductory-Discussion",
        "PersonsString": "Eric Jul and Oleks Shturmov",
        "Authors": [
          "ericjul",
          "oleksshturmov"
        ],
        "Affiliations": [
          "University of Oslo",
          "University of Oslo"
        ],
        "AffiliationsString": "University of Oslo",
        "Abstract": ""
      },
      {
        "Title": "Region-Based Compilation in the HHVM JIT Compiler",
        "Type": "Talk",
        "Key": "morevms-2019-region-based-compilation-in-the-hhvm-jit-compiler",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/6/Region-Based-Compilation-in-the-HHVM-JIT-Compiler",
        "PersonsString": "Guilherme Ottoni",
        "Authors": [
          "guilhermeottoni"
        ],
        "Affiliations": [
          "Facebook"
        ],
        "AffiliationsString": "Facebook",
        "Abstract": "The HipHop Virtual Machine (HHVM) Just-In-Time (JIT) compiler uses a region-based compilation approach. Although region-based compilation has been employed in prior static and dynamic compilers, this approach has not been widely adopted by existing VMs, which typically use either trace-based or method-based compilation. In this talk, I’ll argue that region-based compilation is superior to both trace-based and method-based compilation in general. Furthermore, I’ll describe the key characteristics that make region-based compilation particularly attractive for dynamic-language VMs. After motivating the case for region-based compilation in VMs, I’ll describe the general architecture of the HHVM JIT compiler and how it integrates region-based compilation with a set of other key mechanisms, including type specialization, profile-guided optimizations, and on-stack replacement."
      },
      {
        "Title": "Iteratively Composing Statically Verified Traits",
        "Type": "Talk",
        "Key": "vpt-2019-papers-iteratively-composing-statically-verified-traits",
        "URL": "https://2019.programming-conference.org/details/vpt-2019-papers/10/Iteratively-Composing-Statically-Verified-Traits",
        "PersonsString": "Isaac Oscar Gariano, Marco Servetto, Alex Potanin and Hrshikesh Arora",
        "Authors": [
          "isaacoscargariano",
          "marcoservetto",
          "alexpotanin",
          "hrshikesharora"
        ],
        "Affiliations": [
          "",
          "Victoria University Wellington, New Zealand",
          "Victoria University of Wellington",
          "Victoria University of Wellington, New Zealand"
        ],
        "AffiliationsString": ", Victoria University Wellington, New Zealand, Victoria University of Wellington, Victoria University of Wellington, New Zealand",
        "Abstract": ""
      },
      {
        "Title": "Welcome",
        "Type": "Day opening",
        "Key": "morevms-2019-welcome",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/9/Welcome",
        "PersonsString": "Edd Barrett and Stefan Marr",
        "Authors": [
          "eddbarrett",
          "stefanmarr"
        ],
        "Affiliations": [
          "King\u0027s College London",
          "University of Kent"
        ],
        "AffiliationsString": "King\u0027s College London, University of Kent",
        "Abstract": ""
      },
      {
        "Title": "Towards Polyglot Adapters for the GraalVM",
        "Type": "Short-paper",
        "Key": "icw-2019-papers-polyglot-adapters",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/10/Towards-Polyglot-Adapters-for-the-GraalVM",
        "PersonsString": "Fabio Niephaus, Tim Felgentreff and Robert Hirschfeld",
        "Authors": [
          "fabioniephaus",
          "timfelgentreff",
          "roberthirschfeld"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, University of Potsdam",
          "Oracle Labs, Potsdam",
          "Hasso-Plattner-Institut (HPI), Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, University of Potsdam, Oracle Labs, Potsdam, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": "Today, there are many different programming languages and even more software libraries and frameworks for various use cases. Polyglot runtime environments such as GraalVM allow developers to build and extend applications using multiple languages, which gives them a much broader choice in terms of frameworks and libraries available for reuse. Nonetheless, some usability problems remain, for example with regard to passing data from one language to another. GraalVM provides language interoperability through its polyglot API and allows objects and messages to be passed across languages. From a developer perspective, however, it is sometimes unclear how to pass non-primitive objects from one language into a library or framework written in another language. Code from that other language may expect these objects to respond to a different set of messages, which they may not understand at all. \nIn this paper, we present polyglot adapters, an early-stage concept that helps to pass objects across different languages. We explain how these adapters can improve the polyglot programming experience and demonstrate this with a prototype for the GraalVM."
      },
      {
        "Title": "Efficient Implementation of Smalltalk Activation Records in Language Implementation Frameworks",
        "Type": "Talk",
        "Key": "morevms-2019-efficient-implementation-of-smalltalk-activation-records-in-language-implementation-frameworks",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/10/Efficient-Implementation-of-Smalltalk-Activation-Records-in-Language-Implementation-F",
        "PersonsString": "Fabio Niephaus, Tim Felgentreff, Tobias Pape and Robert Hirschfeld",
        "Authors": [
          "fabioniephaus",
          "timfelgentreff",
          "tobiaspape",
          "roberthirschfeld"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, University of Potsdam",
          "Oracle Labs, Potsdam",
          "Hasso Plattner Institute, Germany",
          "Hasso-Plattner-Institut (HPI), Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, University of Potsdam, Oracle Labs, Potsdam, Hasso Plattner Institute, Germany, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": "Language implementation frameworks such as RPython or Truffle help to build runtimes for dynamic languages. For this, they make certain design decisions and trade-offs upfront to make common language concepts easy to implement. Because of this, however, some language-specific concepts may be rather tedious to support, especially the modification of activation records. For example, Smalltalk provides reification of activations through context objects. Since they are used to implement other mechanisms such as exception handling on the language level, contexts need to be entirely supported by the underlying runtime. We present an approach for efficiently implementing Smalltalk context objects in frameworks that do not support unrestricted modification of activation records."
      },
      {
        "Title": "Sulong: Executing Low-level Languages on Truffle",
        "Type": "Talk",
        "Key": "icw-2019-papers-keynote-sulong-executing-low-level-languages-on-truffle-by-manuel-rigger",
        "URL": "https://2019.programming-conference.org/details/icw-2019-papers/11/Sulong-Executing-Low-level-Languages-on-Truffle",
        "PersonsString": "Manuel Rigger",
        "Authors": [
          "manuelrigger"
        ],
        "Affiliations": [
          "ETH Zurich"
        ],
        "AffiliationsString": "ETH Zurich",
        "Abstract": "Truffle is a language-implementation framework written in Java, which has been used to implement various languages in the multi-lingual GraalVM. These languages include Ruby and Python, which rely on native extensions in order to execute code written in languages such as C/C++. To execute native extensions, we implemented Sulong, a LLVM IR interpreter that runs on Truffle and which is used in place of a native function interface in the GraalVM. This talk will give an overview of Sulong, how it is used within the GraalVM, and how it interacts with inline assembly code, compiler builtins, and the underlying operating system. \nBio: Manuel Rigger is a postdoctoral researcher, mentored by Hanspeter Mössenböck, at Johannes Kepler University Linz working on system security, software reliability, language implementation, and software-repository mining to uncover knowledge relevant for these areas. As part of his dissertation, he developed Sulong, a Truffle-based execution system for LLVM-based languages, which is used in place of a native function interface within GraalVM. From March 2019, he will work as a postdoctoral researcher, mentored by Zhendong Su, at ETH Zurich."
      },
      {
        "Title": "Language Support for Multiple Privacy Enhancing Technologies",
        "Type": "Talk",
        "Key": "morevms-2019-language-support-for-multiple-privacy-enhancing-technologies",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/5/Language-Support-for-Multiple-Privacy-Enhancing-Technologies",
        "PersonsString": "Aditya Oak, Mira Mezini and Guido Salvaneschi",
        "Authors": [
          "adityaoak",
          "miramezini",
          "guidosalvaneschi"
        ],
        "Affiliations": [
          "Technische Universität Darmstadt",
          "TU Darmstadt, Germany",
          "TU Darmstadt"
        ],
        "AffiliationsString": "Technische Universität Darmstadt, TU Darmstadt, Germany, TU Darmstadt",
        "Abstract": "Privacy is one of the critical aspects in the design of computing systems. Various techniques are being used to enforce privacy, such as information flow control, symmetric/asymmetric cryptography secure computing enclaves, partial homomorphic encryption and differential privacy. These mechanisms should be ideally combined in complex software systems as they offer different properties and performance trade offs. Unfortunately, reasoning about the privacy properties of such combination is still an open research problem. \nIn this paper, we present our vision on a programming language in which we incorporate different privacy preservation techniques in a common programming model."
      },
      {
        "Title": "Toward a Language Design for Energy Prediction",
        "Type": "Talk",
        "Key": "morevms-2019-toward-a-language-design-for-energy-prediction",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/4/Toward-a-Language-Design-for-Energy-Prediction",
        "PersonsString": "Anthony Canino and Yu David Liu",
        "Authors": [
          "anthonycanino",
          "yudavidliu"
        ],
        "Affiliations": [
          "SUNY Binghamton",
          "State University of New York (SUNY) Binghamton"
        ],
        "AffiliationsString": "SUNY Binghamton, State University of New York (SUNY) Binghamton",
        "Abstract": "Energy-aware programming languages and frameworks seek to improve the energy efficiency of computer systems by taking advantage of application-specific information to perform energy optimizations. Effectively predicting an application’s energy behavior enables more powerful energy optimizations and additional energy management techniques. However, application energy consumption is fundamentally dynamic in nature, which limits the amount of effective energy prediction that can be done ahead of time. To address this challenge, we propose FJP, a predication-aware semantics that takes the estimation process online, and serves to partially predict a program’s energy consumption. FJP represents a first step towards improving the expressiveness of energy-aware language and framework techniques in its ability for online adaptive energy prediction."
      },
      {
        "Title": "Optimization Coaching for Fork/Join Applications on the Java Virtual Machine",
        "Type": "Talk",
        "Key": "morevms-2019-optimization-coaching-for-fork-join-applications-on-the-java-virtual-machine",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/7/Optimization-Coaching-for-Fork-Join-Applications-on-the-Java-Virtual-Machine",
        "PersonsString": "Eduardo Rosales, Andrea Rosà and Walter Binder",
        "Authors": [
          "eduardorosales",
          "andrearosa",
          "walterbinder"
        ],
        "Affiliations": [
          "University of Lugano, Switzerland",
          "University of Lugano, Switzerland",
          "University of Lugano, Switzerland"
        ],
        "AffiliationsString": "University of Lugano, Switzerland",
        "Abstract": "Developing parallel applications that exploit the hardware resources remains challenging. We tackle this issue for fork/join applications running on a single Java Virtual Machine (JVM) in a shared-memory multicore. An optimal fork/join application should maximize parallelism while minimizing overheads, and maximize locality while minimizing contention. Unfortunately, achieving these goals is challenging due to the complexity of tuning fork/join applications. As a result, fork/join applications often suffer from several performance issues such as excessive object creation and reclaiming, suboptimal forking, load imbalance, and inappropriate synchronization. In contrast to the extensive manual experimentation commonly required to properly tune fork/join applications, we devise a coaching tool able to automatically point developers to specific parts of such applications where performance problems originate and suggest concrete code modifications to fix them. Given the increasing popularity of fork/join parallelism on the JVM, many applications can benefit from our approach, including applications using standard Java APIs such as Streams and CompletableFuture."
      },
      {
        "Title": "Extending a Meta-Tracing Compiler to Mix Method and Tracing Compilation",
        "Type": "Talk",
        "Key": "morevms-2019-extending-a-meta-tracing-compiler-to-mix-method-and-tracing-compilation",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/8/Extending-a-Meta-Tracing-Compiler-to-Mix-Method-and-Tracing-Compilation",
        "PersonsString": "Yusuke Izawa, Hidehiko Masuhara and Tomoyuki Aotani",
        "Authors": [
          "yusukeizawa",
          "hidehikomasuhara",
          "tomoyukiaotani"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology",
          "Tokyo Institute of Technology",
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology",
        "Abstract": "Meta-interpreter-based just-in-time compiler frameworks provide a convenient way for language designers to implement efficient virtual machines. Those frameworks either employ tracing-based or method- (or partial evaluation) based strategies, which have their own pros and cons. \nThis paper proposes an approach to enable both tracing- and method-based compilation so that the runtime can selectively apply an appropriate strategy to different parts of a program. \nThe proposal basically extends a meta-tracing compiler to method-based compilation by rolling back at conditional branches, trace-splitting at loop entries, and not following at function calls. \nAs a proof-of-concept, we implemented a tiny meta-tracing compiler in MinCaml by following the RPython’s architecture and extended it to support both tracing- and method-based compilation."
      },
      {
        "Title": "A Shell-like Model for General Purpose Programming",
        "Type": "Talk",
        "Key": "morevms-2019-a-shell-like-model-for-general-purpose-programming",
        "URL": "https://2019.programming-conference.org/details/MoreVMs-2019/1/A-Shell-like-Model-for-General-Purpose-Programming",
        "PersonsString": "Jeanine Miller Adkisson, Johannes Westlund and Hidehiko Masuhara",
        "Authors": [
          "jeaninemilleradkisson",
          "johanneswestlund",
          "hidehikomasuhara"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology",
          "Tokyo Institute of Technology, Japan / KTH Royal Institute of Technology, Sweden",
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology, Tokyo Institute of Technology, Japan / KTH Royal Institute of Technology, Sweden",
        "Abstract": "Shell scripting languages such as bash are designed to integrate with an OS, which mainly involves managing processes with implicit input and output streams. They also attempt to do this in a compact way that could be reasonably typed on a command-line interface. \nHowever, existing shell languages are not sufficient to serve as general-purpose languages—values are not observable except in raw streams of bytes, and they lack modern language features such as lexical scope and higher-order functions. \nBy way of a new programming language, Magritte, we propose a general-purpose programming language with semantics similar to bash. In this paper, we discuss the early design of such a system, in which the primary unit of composition, like bash, is processes with input and output channels, which can be read from or written to at any time, and which can be chained together via a pipe operator. We also explore concurrency semantics for such a language."
      },
      {
        "Title": "Why Can’t Programming Be Like Sketching?",
        "Type": "Talk",
        "Key": "sdr-2019-papers-why-can-t-programming-be-like-sketching-",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/9/Why-Can-t-Programming-Be-Like-Sketching-",
        "PersonsString": "Clayton Lewis",
        "Authors": [
          "claytonlewis"
        ],
        "Affiliations": [
          "University of Colorado Boulder"
        ],
        "AffiliationsString": "University of Colorado Boulder",
        "Abstract": ""
      },
      {
        "Title": "Panel Discussion on the Boundaries of Computational Artifacts",
        "Type": "Talk",
        "Key": "sdr-2019-papers-salon-des-refus-s-discussion-panel",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/6/Panel-Discussion-on-the-Boundaries-of-Computational-Artifacts",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Critique presentation - Computing beyond pencils",
        "Type": "Talk",
        "Key": "sdr-2019-papers-critique-presentation-computing-beyond-pencils",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/3/Critique-presentation-Computing-beyond-pencils",
        "PersonsString": "Clayton Lewis",
        "Authors": [
          "claytonlewis"
        ],
        "Affiliations": [
          "University of Colorado Boulder"
        ],
        "AffiliationsString": "University of Colorado Boulder",
        "Abstract": ""
      },
      {
        "Title": "Critique presentation - Let Them Fail",
        "Type": "Talk",
        "Key": "sdr-2019-papers-critique-presentation-let-them-fail",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/5/Critique-presentation-Let-Them-Fail",
        "PersonsString": "Antranig Basman",
        "Authors": [
          "antranigbasman1"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Panel Discussion on Craft Values in Computing",
        "Type": "Day closing",
        "Key": "sdr-2019-papers-salon-des-refus-s-closing-plenary",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/4/Panel-Discussion-on-Craft-Values-in-Computing",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Welcome to Salon des Refusés",
        "Type": "Day opening",
        "Key": "sdr-2019-papers-welcome-to-salon-des-refus-s",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/2/Welcome-to-Salon-des-Refus-s",
        "PersonsString": "Philip Tchernavskij",
        "Authors": [
          "philiptchernavskij"
        ],
        "Affiliations": [
          "Ex Situ | Université Paris-Sud"
        ],
        "AffiliationsString": "Ex Situ | Université Paris-Sud",
        "Abstract": ""
      },
      {
        "Title": "Panel Discussion on How to Use Formalisms in Programming",
        "Type": "Other",
        "Key": "sdr-2019-papers-salon-des-refus-s-warmup-activity",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/1/Panel-Discussion-on-How-to-Use-Formalisms-in-Programming",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Visual Denotative Programming",
        "Type": "Talk",
        "Key": "sdr-2019-papers-the-misunderstood-roots-of-frp-will-save-programming",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/10/Visual-Denotative-Programming",
        "PersonsString": "Steven Krouse",
        "Authors": [
          "stevenkrouse"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Presentation and Panel Discussion - Minimal Viable Revolution",
        "Type": "Talk",
        "Key": "sdr-2019-papers-presentation-and-panel-discussion-minimal-viable-revolution",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/13/Presentation-and-Panel-Discussion-Minimal-Viable-Revolution",
        "PersonsString": "Antranig Basman and Luke Church",
        "Authors": [
          "antranigbasman1",
          "lukechurch"
        ],
        "Affiliations": [
          "",
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Critique presentation - Why Can\u0027t Programming Be Like Sketching?",
        "Type": "Talk",
        "Key": "sdr-2019-papers-critique-presentation-why-can-t-programming-be-like-sketching-",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/12/Critique-presentation-Why-Can-t-Programming-Be-Like-Sketching-",
        "PersonsString": "Luke Church",
        "Authors": [
          "lukechurch"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Let Them Fail: Towards VM built-in behaviour that falls back to the program",
        "Type": "Talk",
        "Key": "sdr-2019-papers-let-them-fail-towards-vm-built-in-behaviour-that-falls-back-to-the-program",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/7/Let-Them-Fail-Towards-VM-built-in-behaviour-that-falls-back-to-the-program",
        "PersonsString": "Tobias Pape, Tim Felgentreff, Fabio Niephaus and Robert Hirschfeld",
        "Authors": [
          "tobiaspape",
          "timfelgentreff",
          "fabioniephaus",
          "roberthirschfeld"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, Germany",
          "Oracle Labs, Potsdam",
          "Hasso Plattner Institute, University of Potsdam",
          "Hasso-Plattner-Institut (HPI), Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, Germany, Oracle Labs, Potsdam, Hasso Plattner Institute, University of Potsdam, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": ""
      },
      {
        "Title": "Critique presentation - Visual Denotative Programming",
        "Type": "Talk",
        "Key": "sdr-2019-papers-critique-presentation-the-misunderstood-roots-of-frp-will-save-programming",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/8/Critique-presentation-Visual-Denotative-Programming",
        "PersonsString": "Tomas Petricek and Philip Tchernavskij",
        "Authors": [
          "tomaspetricek",
          "philiptchernavskij"
        ],
        "Affiliations": [
          "University of Kent",
          "Ex Situ | Université Paris-Sud"
        ],
        "AffiliationsString": "University of Kent, Ex Situ | Université Paris-Sud",
        "Abstract": ""
      },
      {
        "Title": "Computing beyond pencils",
        "Type": "Talk",
        "Key": "sdr-2019-papers-computing-beyond-pencils",
        "URL": "https://2019.programming-conference.org/details/sdr-2019-papers/11/Computing-beyond-pencils",
        "PersonsString": "Mariana Marasoiu and Luke Church",
        "Authors": [
          "marianamarasoiu",
          "lukechurch"
        ],
        "Affiliations": [
          "University of Cambridge",
          ""
        ],
        "AffiliationsString": "University of Cambridge, ",
        "Abstract": ""
      },
      {
        "Title": "Lightning Talks I",
        "Type": "Talk",
        "Key": "els-2019-lightning-talks-i",
        "URL": "https://2019.programming-conference.org/details/els-2019/8/Lightning-Talks-I",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Plagiarism Detection for Common Lisp",
        "Type": "Talk",
        "Key": "els-2019-plagiarism-detection-for-common-lisp",
        "URL": "https://2019.programming-conference.org/details/els-2019/4/Plagiarism-Detection-for-Common-Lisp",
        "PersonsString": "António Menezes Leitão",
        "Authors": [
          "antoniomenezesleitao"
        ],
        "Affiliations": [
          "Technical University of Lisbon, Portugal"
        ],
        "AffiliationsString": "Technical University of Lisbon, Portugal",
        "Abstract": ""
      },
      {
        "Title": "20 more years of bootstrapping ",
        "Type": "Talk",
        "Key": "els-2019-20-more-years-of-bootstrapping",
        "URL": "https://2019.programming-conference.org/details/els-2019/14/20-more-years-of-bootstrapping-",
        "PersonsString": "Christophe Rhodes",
        "Authors": [
          "christopherhodes"
        ],
        "Affiliations": [
          "Goldsmiths, University of London"
        ],
        "AffiliationsString": "Goldsmiths, University of London",
        "Abstract": "Although its history is longer than this, the Steel Bank Common Lisp system was announced to the world in 1999, with its distinguishing characteristic of being written in vanilla ANSI Common Lisp explicitly described in the announcement. We provide a retrospective on 20 years of development, discuss some of the features SBCL provides and the rationale behind them, and offer entirely speculative thoughts about the next 20 years of the project."
      },
      {
        "Title": "MAKE-METHOD-LAMBDA Revisited",
        "Type": "Talk",
        "Key": "els-2019-make-method-lambda-revisited",
        "URL": "https://2019.programming-conference.org/details/els-2019/10/MAKE-METHOD-LAMBDA-Revisited",
        "PersonsString": "Irène Anne Durand and Robert Strandh",
        "Authors": [
          "ireneannedurand1",
          "robertstrandh"
        ],
        "Affiliations": [
          "",
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Lightning Talks II",
        "Type": "Talk",
        "Key": "els-2019-lightning-talks-ii",
        "URL": "https://2019.programming-conference.org/details/els-2019/17/Lightning-Talks-II",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Finite Automata Theory Based Optimization",
        "Type": "Talk",
        "Key": "els-2019-finite-automata-theory-based-optimization",
        "URL": "https://2019.programming-conference.org/details/els-2019/2/Finite-Automata-Theory-Based-Optimization",
        "PersonsString": "Jim Newton and Didier Verna",
        "Authors": [
          "jimnewton",
          "didierverna"
        ],
        "Affiliations": [
          "EPITA / LRDE  https://www.lrde.epita.fr",
          "EPITA / LRDE"
        ],
        "AffiliationsString": "EPITA / LRDE  https://www.lrde.epita.fr, EPITA / LRDE",
        "Abstract": ""
      },
      {
        "Title": "Implementing Baker’s | SUBTYPEP Decision Procedure",
        "Type": "Talk",
        "Key": "els-2019-implementing-baker-s-subtypep-decision-procedure",
        "URL": "https://2019.programming-conference.org/details/els-2019/18/Implementing-Baker-s-SUBTYPEP-Decision-Procedure",
        "PersonsString": "Léo Valais, Jim Newton and Didier Verna",
        "Authors": [
          "leovalais",
          "jimnewton",
          "didierverna"
        ],
        "Affiliations": [
          "",
          "EPITA / LRDE  https://www.lrde.epita.fr",
          "EPITA / LRDE"
        ],
        "AffiliationsString": ", EPITA / LRDE  https://www.lrde.epita.fr, EPITA / LRDE",
        "Abstract": ""
      },
      {
        "Title": "Symbols as Namespaces in Common Lisp",
        "Type": "Talk",
        "Key": "els-2019-symbols-as-namespaces-in-common-lisp",
        "URL": "https://2019.programming-conference.org/details/els-2019/3/Symbols-as-Namespaces-in-Common-Lisp",
        "PersonsString": "Alessio Stalla",
        "Authors": [
          "alessiostalla"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "The Lisp of the prophet for the One True Editor",
        "Type": "Talk",
        "Key": "els-2019-the-lisp-of-the-prophet-for-the-one-true-editor",
        "URL": "https://2019.programming-conference.org/details/els-2019/11/The-Lisp-of-the-prophet-for-the-One-True-Editor",
        "PersonsString": "Stefan Monnier",
        "Authors": [
          "stefanmonnier"
        ],
        "Affiliations": [
          "Université de Montréal"
        ],
        "AffiliationsString": "Université de Montréal",
        "Abstract": "While the editor war is long gone and Emacs’s marketshare has undoubtedly shrunk, it has established itself as an important branch in the Lisp family of languages. In this talk, I will look at what gave Emacs Lisp its shape, including what it took from its siblings and ancestors and what makes it different."
      },
      {
        "Title": "Hierarchical Task Network Planning in Common Lisp",
        "Type": "Talk",
        "Key": "els-2019-hierarchical-task-network-planning-in-common-lisp",
        "URL": "https://2019.programming-conference.org/details/els-2019/6/Hierarchical-Task-Network-Planning-in-Common-Lisp",
        "PersonsString": "Robert Goldman",
        "Authors": [
          "robertgoldman"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Lazy, Parallel Multiple Value Reductions in Common Lisp",
        "Type": "Talk",
        "Key": "els-2019-lazy-parallel-multiple-value-reductions-in-common-lisp",
        "URL": "https://2019.programming-conference.org/details/els-2019/12/Lazy-Parallel-Multiple-Value-Reductions-in-Common-Lisp",
        "PersonsString": "Marco Heisig",
        "Authors": [
          "marcoheisig"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Bootstrapping Common Lisp Using Common Lisp",
        "Type": "Talk",
        "Key": "els-2019-bootstrapping-common-lisp-using-common-lisp",
        "URL": "https://2019.programming-conference.org/details/els-2019/16/Bootstrapping-Common-Lisp-Using-Common-Lisp",
        "PersonsString": "Irène Anne Durand and Robert Strandh",
        "Authors": [
          "ireneannedurand1",
          "robertstrandh"
        ],
        "Affiliations": [
          "",
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Welcome message",
        "Type": "Day opening",
        "Key": "els-2019-welcome-message",
        "URL": "https://2019.programming-conference.org/details/els-2019/5/Welcome-message",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Working with First-Order Proofs and Provers",
        "Type": "Talk",
        "Key": "els-2019-working-with-first-order-proofs-and-provers",
        "URL": "https://2019.programming-conference.org/details/els-2019/13/Working-with-First-Order-Proofs-and-Provers",
        "PersonsString": "Michael Raskin",
        "Authors": [
          "michaelraskin"
        ],
        "Affiliations": [
          "Université de Bordeaux / LaBRI"
        ],
        "AffiliationsString": "Université de Bordeaux / LaBRI",
        "Abstract": ""
      },
      {
        "Title": "Shader Pipeline and Effect Encapsulation using CLOS",
        "Type": "Talk",
        "Key": "els-2019-shader-pipeline-and-effect-encapsulation-using-clos",
        "URL": "https://2019.programming-conference.org/details/els-2019/7/Shader-Pipeline-and-Effect-Encapsulation-using-CLOS",
        "PersonsString": "Nicolas Hafner",
        "Authors": [
          "nicolashafner"
        ],
        "Affiliations": [
          "Shirakumo.org"
        ],
        "AffiliationsString": "Shirakumo.org",
        "Abstract": ""
      },
      {
        "Title": "Parallelizing Quickref",
        "Type": "Talk",
        "Key": "els-2019-parallelizing-quickref",
        "URL": "https://2019.programming-conference.org/details/els-2019/9/Parallelizing-Quickref",
        "PersonsString": "Didier Verna",
        "Authors": [
          "didierverna"
        ],
        "Affiliations": [
          "EPITA / LRDE"
        ],
        "AffiliationsString": "EPITA / LRDE",
        "Abstract": ""
      },
      {
        "Title": "Pattern-Based S-Expression Rewriting in Emacs",
        "Type": "Talk",
        "Key": "els-2019-pattern-based-s-expression-rewriting-in-emacs",
        "URL": "https://2019.programming-conference.org/details/els-2019/1/Pattern-Based-S-Expression-Rewriting-in-Emacs",
        "PersonsString": "Ryan Culpepper",
        "Authors": [
          "ryanculpepper"
        ],
        "Affiliations": [
          "Czech Technical University"
        ],
        "AffiliationsString": "Czech Technical University",
        "Abstract": ""
      },
      {
        "Title": "Rebooting Racket",
        "Type": "Talk",
        "Key": "els-2019-racket-guest-talk",
        "URL": "https://2019.programming-conference.org/details/els-2019/15/Rebooting-Racket",
        "PersonsString": "Matthew Flatt",
        "Authors": [
          "matthewflatt"
        ],
        "Affiliations": [
          "University of Utah"
        ],
        "AffiliationsString": "University of Utah",
        "Abstract": ""
      },
      {
        "Title": "LiveTyping in Action - Automatic Type Annotation for Dynamically Typed Languages",
        "Type": "Talk",
        "Key": "programming-2019-demos-livetyping-in-action-automatic-type-annotation-for-dynamically-typed-languages",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/5/LiveTyping-in-Action-Automatic-Type-Annotation-for-Dynamically-Typed-Languages",
        "PersonsString": "Hernan Wilkinson",
        "Authors": [
          "hernanwilkinson"
        ],
        "Affiliations": [
          "10Pines"
        ],
        "AffiliationsString": "10Pines",
        "Abstract": "LiveTyping is a technique that automatically annotate types in dynamically typed languages greatly improving its development tools. In this demo I’ll show how it is implemented and the impact it has in tools such as autocomplete, automatic refactoring, code navigation and even type checking"
      },
      {
        "Title": "Keynote: Turning IoT Devices into Robust and Safe Computers",
        "Type": "Talk",
        "Key": "programming-2019-keynotes-keynote-turning-iot-devices-into-robust-and-safe-computers",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Keynotes/2/Keynote-Turning-IoT-Devices-into-Robust-and-Safe-Computers",
        "PersonsString": "Lars Bak",
        "Authors": [
          "larsbak"
        ],
        "Affiliations": [
          "Toitware Aps"
        ],
        "AffiliationsString": "Toitware Aps",
        "Abstract": "Small IoT devices are inherently brittle to program due to lack of memory protection, limited resources, and only a thin layer of operating system support. A runtime memory access error will, at best, make your IoT device crash and reboot. We believe this makes them unattractive to programmers and therefore stifles IoT innovation. \nWe have designed Toit, a new software platform that turns IoT devices into ‘real’ robust computers: easy to program, safe execution environment, flexible, upgradable, and recoverable. This talk will first discuss why we had to implement a new programming language and then how Toit makes IoT devices accessible to high-level programmers. Finally, we will demonstrate how Toit can orchestrate a fleet of devices."
      },
      {
        "Title": "Proving Inequational Propositions about Haskell Programs in Coq",
        "Type": "Poster",
        "Key": "programming-2019-posters-proving-inequational-propositions-about-haskell-programs-in-coq",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Posters/4/Proving-Inequational-Propositions-about-Haskell-Programs-in-Coq",
        "PersonsString": "Jan Christiansen and Sandra Dylus",
        "Authors": [
          "janchristiansen",
          "sandradylus"
        ],
        "Affiliations": [
          "Flensburg University of Applied Sciences, Germany",
          "University of Kiel, Germany"
        ],
        "AffiliationsString": "Flensburg University of Applied Sciences, Germany, University of Kiel, Germany",
        "Abstract": "To prove properties about a Haskell function in Coq, we have to translate the Haskell function to Coq. Proofs about Haskell func- tions are performed in various levels of detail. For example, some- times proofs are performed as if Haskell were a total language and sometimes we are interested in explicitly reasoning about effects like partiality, exceptions or tracing. By translating a Haskell func- tion into a Coq function that is parametrised over a monad, we can model all these cases. Moreover, we can reuse function definitions for different kinds of proofs by instantiating the monadic function with a concrete monad instance. In order to model Haskell correctly, all arguments of constructors have to be made monadic as well. Due to technical restrictions in Coq we cannot define data types that are lifted this way. In previous work we have shown that we can use free monads and container representations to model effect-generic programs. That is, we can define a single Coq function that can be used to model no effects as well as effects like partiality, exceptions, and tracing. As an additional benefit by proving a proposition for all containers we can reuse propositions when considering different kinds of effects. While in previous work we have only considered equational propositions, in this work we are considering inequational proposi- tions. More precisely, we consider proofs that relate two Haskell terms with respect to some partial order that models the intuition of being “less or equally defined”. As an example, we consider the default implementation of Peano multiplication and an improved implementation with respect to “strictness”. Our contributions are more examples of using our orig- inal framework and the application to inequational propositions."
      },
      {
        "Title": "A framework for big-step semantics (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-a-framework-for-big-step-semantics-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/1/A-framework-for-big-step-semantics-short-presentation-",
        "PersonsString": "Francesco Dagnino",
        "Authors": [
          "francescodagnino"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova, Italy"
        ],
        "AffiliationsString": "DIBRIS, University of Genova, Italy",
        "Abstract": ""
      },
      {
        "Title": "Event Loops as First-Class Values: A Case Study in Pedagogic Language Design",
        "Type": "Talk",
        "Key": "programming-2019-papers-event-loops-as-first-class-values-a-case-study-in-pedagogic-language-design",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/7/Event-Loops-as-First-Class-Values-A-Case-Study-in-Pedagogic-Language-Design",
        "PersonsString": "Joe Gibbs Politz, Benjamin Lerner, Sorawee Porncharoenwase and Shriram Krishnamurthi",
        "Authors": [
          "joepolitz",
          "benjaminlerner",
          "soraweeporncharoenwase",
          "shriramkrishnamurthi"
        ],
        "Affiliations": [
          "University of California San Diego, United States",
          "Northeastern University, United States",
          "Brown University, United States",
          "Brown University, United States"
        ],
        "AffiliationsString": "University of California San Diego, United States, Northeastern University, United States, Brown University, United States",
        "Abstract": "The World model is an existing functional input-output mechanism for event-driven programming. It is used in numerous popular textbooks and curricular settings. \nThe World model conflates two different tasks–the definition of an event processor and its execution–into one. This conflation imposes a significant (even unacceptable) burden on student users in several educational settings where we have tried to use it, e.g., for teaching physics. \nWhile it was tempting to pile on features to address these issues, we instead used the Scheme language design dictum of removing weaknesses that made them seem necessary. By separating the two tasks above, we arrived at a slightly different primitive, the reactor, as our basis. This only defines the event processor, and a variety of execution operators dictate how it runs. \nThe new design enables programmatic control over event-driven programs. This simplifies reflecting on program behavior, and eliminates many unnecessary curricular dependencies imposed by the old design. This work has been implemented in the Pyret programming language. The separation of concerns has enabled new curricula, such as the Bootstrap:Physics curriculum, to take flight. Thousands of students use this new mechanism every year. We believe that reducing impedance mismatches improves their educational experience."
      },
      {
        "Title": "Banquet",
        "Type": "Social Event",
        "Key": "programming-2019-social-events-banquet",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Social-Events/2/Banquet",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "The conference banquet will take place at the Palazzo Gerolamo Grimaldi, better known as Palazzo della Meridiana on Wednesday (April 3th). \n[More information](Palazzo Gerolamo Grimaldi, better known as Palazzo della Meridiana)"
      },
      {
        "Title": "Cantor pairing in a reversible programming language ",
        "Type": "Poster",
        "Key": "programming-2019-src-cantor-pairing-in-a-reversible-programming-language",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/11/Cantor-pairing-in-a-reversible-programming-language-",
        "PersonsString": "Francesco Rossini",
        "Authors": [
          "francescorossini"
        ],
        "Affiliations": [
          "University of Turin, Italy"
        ],
        "AffiliationsString": "University of Turin, Italy",
        "Abstract": ""
      },
      {
        "Title": "Entombed: An Archaeological Examination of an Atari 2600 Game",
        "Type": "Talk",
        "Key": "programming-2019-papers-entombed-an-archaeological-examination-of-an-atari-2600-game",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/8/Entombed-An-Archaeological-Examination-of-an-Atari-2600-Game",
        "PersonsString": "John Aycock and Tara Copplestone",
        "Authors": [
          "johnaycock",
          "taracopplestone"
        ],
        "Affiliations": [
          "University of Calgary, Canada",
          "University of York, United Kingdom"
        ],
        "AffiliationsString": "University of Calgary, Canada, University of York, United Kingdom",
        "Abstract": "The act and experience of programming is, at its heart, a fundamentally human activity that results in the production of artifacts. When considering programming, therefore, it would be a glaring omission to not involve people who specialize in studying artifacts and the human activity that yields them: archaeologists. Here we consider this with respect to computer games, the focus of archaeology’s nascent subarea of archaeogaming. \nOne type of archaeogaming research is digital excavation, a technical examination of the code and techniques used in old games’ implementation. We apply that in a case study of Entombed, an Atari 2600 game released in 1982 by US Games. The player in this game is, appropriately, an archaeologist who must make their way through a zombie-infested maze. Maze generation is a fruitful area for comparative retrogame archaeology, because a number of early games on different platforms featured mazes, and their variety of approaches can be compared. The maze in Entombed is particularly interesting: it is shaped in part by the extensive real-time constraints of the Atari 2600 platform, and also had to be generated efficiently and use next to no memory. We reverse engineered key areas of the game’s code to uncover its unusual maze-generation algorithm, which we have also built a reconstruction of, and analyzed the mysterious table that drives it. In addition, we discovered what appears to be a 35-year-old bug in the code, as well as direct evidence of code-reuse practices amongst game developers. \nWhat further makes this game’s development interesting is that, in an era where video games were typically solo projects, a total of five people were involved in various ways with Entombed. We piece together some of the backstory of the game’s development and intoxicant-fueled design using interviews to complement our technical work. \nFinally, we contextualize this example in archaeology and lay the groundwork for a broader interdisciplinary discussion about programming, one that includes both computer scientists and archaeologists."
      },
      {
        "Title": "RML: Runtime monitoring language (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-rml-runtime-monitoring-language-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/7/RML-Runtime-monitoring-language-short-presentation-",
        "PersonsString": "Luca Franceschini",
        "Authors": [
          "lucafranceschini"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova, Italy"
        ],
        "AffiliationsString": "DIBRIS, University of Genova, Italy",
        "Abstract": ""
      },
      {
        "Title": "Break",
        "Type": "Coffee break",
        "Key": "programming-2019-catering-break",
        "URL": "https://2019.programming-conference.org/details/programming-2019-catering/3/Break",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "Break"
      },
      {
        "Title": "Dinner",
        "Type": "Dinner",
        "Key": "programming-2019-catering-dinner",
        "URL": "https://2019.programming-conference.org/details/programming-2019-catering/2/Dinner",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "Dinner"
      },
      {
        "Title": "BacCaml: The Meta-Hybrid Just-In-Time Compiler",
        "Type": "Poster",
        "Key": "programming-2019-src-baccaml-the-meta-hybrid-just-in-time-compiler",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/14/BacCaml-The-Meta-Hybrid-Just-In-Time-Compiler",
        "PersonsString": "Yusuke Izawa",
        "Authors": [
          "yusukeizawa"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology",
        "Abstract": ""
      },
      {
        "Title": "Cantor pairing in a reversible programming language (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-cantor-pairing-in-a-reversible-programming-language-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/6/Cantor-pairing-in-a-reversible-programming-language-short-presentation-",
        "PersonsString": "Francesco Rossini",
        "Authors": [
          "francescorossini"
        ],
        "Affiliations": [
          "University of Turin, Italy"
        ],
        "AffiliationsString": "University of Turin, Italy",
        "Abstract": ""
      },
      {
        "Title": "IDVE: an Integrated Development and Verification Environment for JavaScript",
        "Type": "Poster",
        "Key": "programming-2019-posters-idve-an-integrated-development-and-verification-environment-for-javascript",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Posters/1/IDVE-an-Integrated-Development-and-Verification-Environment-for-JavaScript",
        "PersonsString": "Christopher Schuster and Cormac Flanagan",
        "Authors": [
          "christopherschuster",
          "cormacflanagan"
        ],
        "Affiliations": [
          "University of California, Santa Cruz",
          "University of California, Santa Cruz"
        ],
        "AffiliationsString": "University of California, Santa Cruz",
        "Abstract": "There are different ways to check whether a program is “cor- rect”, including dynamic testing and static type checking. Unfortunately, testing only checks a certain (finite) set of inputs and types may be too imprecise to express complex correctness properties. For example, correctness of a sort- ing routine requires that the output is both sorted and con- tains the same elements as the input. Program verification aims to prove such correctness properties for all possible in- puts based on annotations such as pre-, postconditions, as- sertions and invariants. However, the verification process for these annotations can become complex. Therefore, sim- ple error messages may not be sufficient to help the pro- grammer understand and resolve verification issues."
      },
      {
        "Title": "Quickref: Auto-Documenting the Common Lisp Ecosystem",
        "Type": "Talk",
        "Key": "programming-2019-demos-quickref-auto-documenting-the-common-lisp-ecosystem",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/2/Quickref-Auto-Documenting-the-Common-Lisp-Ecosystem",
        "PersonsString": "Didier Verna",
        "Authors": [
          "didierverna"
        ],
        "Affiliations": [
          "EPITA / LRDE"
        ],
        "AffiliationsString": "EPITA / LRDE",
        "Abstract": "This demonstration is intended for people interested in software documentation, and more specifically, in what can be achieved with a reflexive language, fully equipped for introspection. \nQuickref is a global documentation project for the Common Lisp Ecosystem. In a single function call, it builds an entire website containing reference manuals for almost two thousand Common Lisp libraries. The system is unintrusive: library authors do not have anything to do to make their code “Quickref aware”. A public website is maintained with the resulting full documentation, but individuals can also use Quickref to generate a local website, documenting only what is present on their machine. \nEach library is downloaded / updated, compiled, loaded, and introspected. From the collected information, a Texinfo file is generated, which is then processed into HTML. The advantage of Texinfo is that the documentation can be created in other formats than HTML (PDF, for example). \nThe generated documentation for a library contains the description of its structure (components, dependencies, packages etc.) and the provided definitions. Exported and internal definitions are listed separately, allowing the reader to have a quick view on the library’s public API. Definitions include constants, variables, symbol macros, macros, (setf) expanders, compiler macros, functions, generic functions and methods, method combinations, conditions, structures, classes and types. \nThe generated documentation includes every possible bit of information that introspection can provide: documentation strings, lambda lists (including qualifiers and specializers where appropriate), slots (including type, allocation and initialization arguments), definition source file etc. \nEvery documented item provides a full set of cross-references to related items: component dependencies, parents and children, classes direct methods, super and subclasses, slot readers and writers, setf expanders access and update functions etc. \nFinally, the documentation includes exhaustive and multiple-entry indexes for every documented item."
      },
      {
        "Title": "ParaSail: A Pointer-Free Pervasively-Parallel Language for Irregular Computations",
        "Type": "Talk",
        "Key": "programming-2019-papers-parasail-a-pointer-free-pervasively-parallel-language-for-irregular-computations",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/9/ParaSail-A-Pointer-Free-Pervasively-Parallel-Language-for-Irregular-Computations",
        "PersonsString": "Tucker Taft",
        "Authors": [
          "tuckertaft"
        ],
        "Affiliations": [
          "AdaCore, United States"
        ],
        "AffiliationsString": "AdaCore, United States",
        "Abstract": "ParaSail is a language specifically designed to simplify the construction of programs that make full, safe use of parallel hardware even while manipulating potentially irregular data structures. As parallel hardware has proliferated, there has been an urgent need for languages that ease the writing of correct parallel programs. ParaSail achieves these goals largely through simplification of the language, rather than by adding numerous rules. In particular, ParaSail eliminates global variables, parameter aliasing, and most significantly, re-assignable pointers. ParaSail has adopted a pointer-free approach to defining complex data structures. Rather than using pointers, ParaSail supports flexible data structuring using expandable (and shrinkable) objects implemented using region-based storage management, along with generalized indexing. By eliminating global variables, parameter aliasing, and pointers, ParaSail reduces the complexity for the programmer, while still allowing ParaSail to provide flexible, pervasive, safe, parallel programming for irregular computations. Perhaps the most interesting discovery in this language development effort, based on over six years of use by the author and a group of ParaSail users, has been that it is possible to simultaneously simplify the language, support parallel programming with advanced data structures, and maintain flexibility and efficiency."
      },
      {
        "Title": "Static Verification of JavaScript: IDE Support for Debugging Verification Issues",
        "Type": "Talk",
        "Key": "programming-2019-demos-static-verification-of-javascript-ide-support-for-debugging-verification-issues",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/7/Static-Verification-of-JavaScript-IDE-Support-for-Debugging-Verification-Issues",
        "PersonsString": "Christopher Schuster and Cormac Flanagan",
        "Authors": [
          "christopherschuster",
          "cormacflanagan"
        ],
        "Affiliations": [
          "University of California, Santa Cruz",
          "University of California, Santa Cruz"
        ],
        "AffiliationsString": "University of California, Santa Cruz",
        "Abstract": "This demo introduces static program verification for JavaScript and shows how interactive development tools can support the programmer with understanding and resolving verification issues. No prior experience with formal verification is assumed. \nIn general, program verification relies on source code annotations such as pre-, postconditions and invariants in order to check the program for correctness for all possible inputs. By specifying the expected behavior in terms of logical propositions, program verifiers can support dynamically-typed languages such as JavaScript (including dynamic programming idioms and higher-order functions). However, the verification process can become complex, so simple error messages may not be sufficient to explain verification problems. In this demo, I will present an integrated development and verification environment based on the JavaScript program verifier. In particular, I will use a series of small examples to illustrate how counterexamples, an interactive verification inspector and an integrated step-by-step debugger can be used to understand and debug verification issues."
      },
      {
        "Title": "Applications of Multi-view Learning Approaches for Software Comprehension",
        "Type": "Talk",
        "Key": "programming-2019-papers-applications-of-multi-view-learning-approaches-for-software-comprehension",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/5/Applications-of-Multi-view-Learning-Approaches-for-Software-Comprehension",
        "PersonsString": "Amir Saeidi, Jurriaan Hage, Ravi Khadka and Slinger Jansen",
        "Authors": [
          "amirsaeidi",
          "jurriaanhage",
          "ravikhadka",
          "slingerjansen"
        ],
        "Affiliations": [
          "Utrecht University, Netherlands",
          "Utrecht University, Netherlands",
          "Utrecht University, Netherlands",
          "Utrecht University, Netherlands"
        ],
        "AffiliationsString": "Utrecht University, Netherlands",
        "Abstract": "Program comprehension concerns the ability of an individual to make an understanding of an existing software system to extend or transform it. Software systems comprise of data that are noisy and missing, which makes program understanding even more difficult. A software system consists of various views including the module dependency graph, execution logs, evolutionary information and the vocabulary used in the source code, that collectively defines the software system. Each of these views contain unique and complementary information; together which can more accurately describe the data. In this paper, we investigate various techniques for combining different sources of information to improve the performance of a program comprehension task. We employ state-of-the-art techniques from learning to 1) find a suitable similarity function for each view, and 2) compare different multi-view learning techniques to decompose a software system into high-level units and give component-level recommendations for refactoring of the system, as well as cross-view source code search. The experiments conducted on 10 relatively large Java software systems show that by fusing knowledge from different views, we can guarantee a lower bound on the quality of the modularization and even improve upon it. We proceed by integrating different sources of information to give a set of high-level recommendations as to how to refactor the software system. Furthermore, we demonstrate how learning a joint subspace allows for performing cross-modal retrieval across views, yielding results that are more aligned with what the user intends by the query. The multi-view approaches outlined in this paper can be employed for addressing problems in software engineering that can be encoded in terms of a learning problem, such as software bug prediction and feature location."
      },
      {
        "Title": "‹Programming› 2020 Announcement",
        "Type": "Other",
        "Key": "programming-2019-organizational-programming-2020-announcement",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/6/-Programming-2020-Announcement",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Automatic test case generation from UML state machine diagrams",
        "Type": "Poster",
        "Key": "programming-2019-src-automatic-test-case-generation-from-uml-state-machine-diagrams",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/9/Automatic-test-case-generation-from-UML-state-machine-diagrams",
        "PersonsString": "Dario Olianas",
        "Authors": [
          "darioolianas1"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Magritte: A modern shell language",
        "Type": "Poster",
        "Key": "programming-2019-src-magritte-a-modern-shell-language",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/12/Magritte-A-modern-shell-language",
        "PersonsString": "Jeanine Miller Adkisson",
        "Authors": [
          "jeaninemilleradkisson"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology",
        "Abstract": ""
      },
      {
        "Title": "Tooling for live big data applications",
        "Type": "Talk",
        "Key": "programming-2019-demos-tooling-for-live-big-data-applications",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/1/Tooling-for-live-big-data-applications",
        "PersonsString": "Matteo Marra",
        "Authors": [
          "matteomarra"
        ],
        "Affiliations": [
          "Vrije Universiteit Brussel"
        ],
        "AffiliationsString": "Vrije Universiteit Brussel",
        "Abstract": "Testing and debugging Big Data application is often a tedious process, involving changes of setup, restarts and analysis of log files. In this demo I am gonna present Port, a Live Big Data framework in Pharo. Port can be used to write classical Map/Reduce applications, that will be parallelized by the framework and executed in different running environments (i.e. Pharo images). Port can be deployed simply on your local machine (with an automatised system to spawn different running environments), or on a distributed cluster leveraging on Hadoop YARN. \nI will show how developers can write, execute and manage their applications, and the tooling support for testing such applications in different setups. I will also show how the concepts of out-of-place debugging are used to handle failures in the running application."
      },
      {
        "Title": "Conferences Opening",
        "Type": "Other",
        "Key": "programming-2019-organizational-conferences-opening",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/2/Conferences-Opening",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "One Monad to Prove Them All",
        "Type": "Talk",
        "Key": "programming-2019-papers-one-monad-to-prove-them-all",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/14/One-Monad-to-Prove-Them-All",
        "PersonsString": "Sandra Dylus, Jan Christiansen and Finn Teegen",
        "Authors": [
          "sandradylus",
          "janchristiansen",
          "finnteegen"
        ],
        "Affiliations": [
          "University of Kiel, Germany",
          "Flensburg University of Applied Sciences, Germany",
          "University of Kiel, Germany"
        ],
        "AffiliationsString": "University of Kiel, Germany, Flensburg University of Applied Sciences, Germany",
        "Abstract": "One Monad to Prove Them All is a modern fairy tale about curiosity and perseverance, two important properties of a successful PhD student. We follow the PhD student Mona on her adventure of proving properties about Haskell programs in the proof assistant Coq. \nOn the one hand, as a PhD student in computer science Mona observes an increasing demand for correct software products. In particular, because of the large amount of existing software, verifying existing software products becomes more important. Verifying programs in the functional programming language Haskell is no exception. On the other hand, Mona is delighted to see that communities in the area of theorem proving are becoming popular. Thus, Mona sets out to learn more about the interactive theorem prover Coq and verifying Haskell programs in Coq. \nTo prove properties about a Haskell function in Coq, Mona has to translate the function into Coq code. As Coq programs have to be total and Haskell programs are often not, Mona has to model partiality explicitly in Coq. In her quest for a solution Mona finds an ancient manuscript that explains how properties about Haskell functions can be proven in the proof assistant Agda by translating Haskell programs into monadic Agda programs. By instantiating the monadic program with a concrete monad instance the proof can be performed in either a total or a partial setting. Mona discovers that the proposed transformation does not work in Coq due to a restriction in the termination checker. In fact the transformation does not work in Agda anymore as well, as the termination checker in Agda has been improved. \nWe follow Mona on an educational journey through the land of functional programming where she learns about concepts like free monads and containers as well as basics and restrictions of proof assistants like Coq. These concepts are well-known individually, but their interplay gives rise to a solution for Mona’s problem based on the originally proposed monadic tranformation that has not been presented before. When Mona starts to test her approach by proving a statement about simple Haskell functions, she realizes that her approach has an additional advantage over the original idea in Agda. Mona’s final solution not only works for a specific monad instance but even allows her to prove monad-generic properties. Instead of proving properties over and over again for specific monad instances she is able to prove properties that hold for all monads representable by a container-based instance of the free monad. In order to strengthen her confidence in the practicability of her approach, Mona evaluates her approach in a case study that compares two implementations for queues. In order to share the results with other functional programmers the fairy tale is available as a literate Coq file. \nIf you are a citizen of the land of functional programming or are at least familiar with its customs, had a journey that involved reasoning about functional programs of your own, or are just a curious soul looking for the next story about monads and proofs, then this tale is for you."
      },
      {
        "Title": "A framework for big-step semantics",
        "Type": "Poster",
        "Key": "programming-2019-src-a-framework-for-big-step-semantics",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/8/A-framework-for-big-step-semantics",
        "PersonsString": "Francesco Dagnino",
        "Authors": [
          "francescodagnino"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova, Italy"
        ],
        "AffiliationsString": "DIBRIS, University of Genova, Italy",
        "Abstract": ""
      },
      {
        "Title": "Distributed Software on Mobile Robot",
        "Type": "Poster",
        "Key": "programming-2019-posters-distributed-software-on-mobile-robot",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Posters/3/Distributed-Software-on-Mobile-Robot",
        "PersonsString": "Jakub Przygodzki, Konrad Aleksiejuk and Adam Świderski",
        "Authors": [
          "jakubprzygodzki",
          "konradaleksiejuk",
          "adamswiderski"
        ],
        "Affiliations": [
          "",
          "",
          ""
        ],
        "AffiliationsString": "",
        "Abstract": "In a dangerous environment in which human life can be endangered, robots are often used instead. In the upcoming Mars missions such robot, capable of traversing demanding terrain, repairing and operating mission equipment, assisting the astronauts or conducting research, can prove crucial for a successful outcome. Before planning any mission it is important to evaluate various solutions in order to choose the most reliable one. In order to satisfy this requirement, various rover competitions are being organised for students or professionals to participate in. The poster presents our solution for developing software of a rover which we are preparing for one of such competitions. It describes the system’s architecture, means of communication between various modules as well as with the operator and the way the autonomous mode is implemented. Our solutions and concepts may one day become an inspiration for engineers working on real rovers designed to operate on other planets."
      },
      {
        "Title": "Exploring example-driven migration",
        "Type": "Poster",
        "Key": "programming-2019-src-exploring-example-driven-migration",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/10/Exploring-example-driven-migration",
        "PersonsString": "Manuel Leuenberger",
        "Authors": [
          "manuelleuenberger"
        ],
        "Affiliations": [
          ""
        ],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "SRC awards",
        "Type": "Awards",
        "Key": "programming-2019-organizational-src-awards",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/3/SRC-awards",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "Undergraduate students \n \n Cantor pairing in a reversible programming language. Francesco Rossini, University of Turin, Italy \n \nGraduate students \n \n  Reading logic as code or as natural language text. Patrick ReinHasso Plattner Institute, Germany  \n  BacCaml: The Meta-Hybrid Just-In-Time Compiler. Yusuke Izawa, Tokyo Institute of Technology  \n  Magritte: A modern shell language. Jeanine Miller Adkisson, Tokyo Institute of Technology  \n"
      },
      {
        "Title": "Registration",
        "Type": "Registration",
        "Key": "programming-2019-organizational-registration",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/5/Registration",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "Lunch",
        "Type": "Lunch",
        "Key": "programming-2019-catering-lunch",
        "URL": "https://2019.programming-conference.org/details/programming-2019-catering/1/Lunch",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "Lunch"
      },
      {
        "Title": "Magritte: A modern shell language (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-magritte-a-modern-shell-language-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/4/Magritte-A-modern-shell-language-short-presentation-",
        "PersonsString": "Jeanine Miller Adkisson",
        "Authors": [
          "jeaninemilleradkisson"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology",
        "Abstract": ""
      },
      {
        "Title": "Awards",
        "Type": "Awards",
        "Key": "programming-2019-organizational-awards",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/1/Awards",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": " \n The 2019 AOSA Ten Years - Most Influential Paper Award Can we refactor conditional compilation into aspects? Bram Adams, Wolfgang De Meuter, Herman Tromp, and Ahmed Hassan \n Editors’ Choice Award 2019 - The most emblematic paper for the spirit of the journal for the past year  Shallow EDSLs and Object-Oriented Programming Beyond Simple Compositionality. Weixin Zhang and Bruno Oliveira \n Outstanding Reviewer Award 2019 - For excellent reviewing service  Stephen Kell, University of Kent, UK  Christos Dimoulas, Northwestern University, USA \n Reviewers’ Choice Award 2019 - Selected as the best paper of the past year by the Standing Review Committee Entombed An archaeological examination of an Atari 2600 game. John Aycock and Tara Copplestone \n"
      },
      {
        "Title": "Steering Committee Meeting (NOT PUBLIC)",
        "Type": "Meeting",
        "Key": "programming-2019-organizational-steering-committee-meeting-not-public-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Organizational/4/Steering-Committee-Meeting-NOT-PUBLIC-",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": ""
      },
      {
        "Title": "RML: Runtime monitoring language",
        "Type": "Poster",
        "Key": "programming-2019-src-rml-runtime-monitoring-language",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/13/RML-Runtime-monitoring-language",
        "PersonsString": "Luca Franceschini",
        "Authors": [
          "lucafranceschini"
        ],
        "Affiliations": [
          "DIBRIS, University of Genova, Italy"
        ],
        "AffiliationsString": "DIBRIS, University of Genova, Italy",
        "Abstract": ""
      },
      {
        "Title": "BacCaml: The Meta-Hybrid Just-In-Time Compiler (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-baccaml-the-meta-hybrid-just-in-time-compiler-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/5/BacCaml-The-Meta-Hybrid-Just-In-Time-Compiler-short-presentation-",
        "PersonsString": "Yusuke Izawa",
        "Authors": [
          "yusukeizawa"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology"
        ],
        "AffiliationsString": "Tokyo Institute of Technology",
        "Abstract": ""
      },
      {
        "Title": "Reception",
        "Type": "Social Event",
        "Key": "programming-2019-social-events-reception",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Social-Events/1/Reception",
        "PersonsString": "",
        "Authors": [],
        "Affiliations": [],
        "AffiliationsString": "",
        "Abstract": "On Monday (April 1st), we hold the welcome reception at the Aula Magna of the University of Genova. \nMore information"
      },
      {
        "Title": "Shallow EDSLs and Object-Oriented Programming: Beyond Simple Compositionality",
        "Type": "Talk",
        "Key": "programming-2019-papers-shallow-edsls-and-object-oriented-programming-beyond-simple-compositionality",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/2/Shallow-EDSLs-and-Object-Oriented-Programming-Beyond-Simple-Compositionality",
        "PersonsString": "Weixin Zhang and Bruno C. d. S. Oliveira",
        "Authors": [
          "weixinzhang",
          "brunooliveira"
        ],
        "Affiliations": [
          "The University of Hong Kong, Hong Kong",
          "The University of Hong Kong, Hong Kong"
        ],
        "AffiliationsString": "The University of Hong Kong, Hong Kong",
        "Abstract": "Context. Embedded Domain-Specific Languages (EDSLs) are a common and widely used approach to DSLs in various languages, including Haskell and Scala. There are two main implementation techniques for EDSLs: shallow embeddings and deep embeddings. \nInquiry. Shallow embeddings are quite simple, but they have been criticized in the past for being quite limited in terms of modularity and reuse. In particular, it is often argued that supporting multiple DSL interpretations in shallow embeddings is difficult. \nApproach. This paper argues that shallow EDSLs and Object-Oriented Programming (OOP) are closely related. Gibbons and Wu already discussed the relationship between shallow EDSLs and procedural abstraction, while Cook discussed the connection between procedural abstraction and OOP. We make the transitive step in this paper by connecting shallow EDSLs directly to OOP via procedural abstraction. The knowledge about this relationship enables us to improve on implementation techniques for EDSLs. \nKnowledge. This paper argues that common OOP mechanisms (including inheritance, subtyping, and type-refinement) increase the modularity and reuse of shallow EDSLs when compared to classical procedural abstraction by enabling a simple way to express multiple, possibly dependent, interpretations. \nGrounding. We make our arguments by using Gibbons and Wu’s examples, where procedural abstraction is used in Haskell to model a simple shallow EDSL. We recode that EDSL in Scala and with an improved OO-inspired Haskell encoding. We further illustrate our approach with a case study on refactoring a deep external SQL query processor to make it more modular, shallow, and embedded. \nImportance. This work is important for two reasons. Firstly, from an intellectual point of view, this work establishes the connection between shallow embeddings and OOP, which enables a better understanding of both concepts. Secondly, this work illustrates programming techniques that can be used to improve the modularity and reuse of shallow EDSLs."
      },
      {
        "Title": "Semantic Query Integration With Reason",
        "Type": "Talk",
        "Key": "programming-2019-papers-semantic-query-integration-with-reason",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/11/Semantic-Query-Integration-With-Reason",
        "PersonsString": "Philipp Seifer, Martin Leinberger, Ralf Lämmel and Steffen Staab",
        "Authors": [
          "philippseifer",
          "martinleinberger",
          "ralflammel",
          "steffenstaab"
        ],
        "Affiliations": [
          "University of Koblenz-Landau, Germany",
          "University of Koblenz-Landau, Germany",
          "University of Koblenz-Landau, Germany",
          "University of Koblenz-Landau and University of Southampton, Germany"
        ],
        "AffiliationsString": "University of Koblenz-Landau, Germany, University of Koblenz-Landau and University of Southampton, Germany",
        "Abstract": "Graph-based data models allow for flexible data representation. In particular, semantic data based on RDF and OWL fuels use cases ranging from general knowledge graphs to domain specific knowledge in various technological or scientific domains. The flexibility of such approaches, however, makes programming with semantic data tedious and error-prone. In particular the logics-based data descriptions employed by OWL are problematic for existing error-detecting techniques, such as type systems. In this paper, we present DOTSpa, an advanced integration of semantic data into programming. We embed description logics, the logical foundations of OWL, into the type checking process of a statically typed programming language and provide typed data access through an embedding of the query language SPARQL. In addition, we demonstrate a concrete implementation of the approach, by extending the Scala programming language. We qualitatively compare programs using our approach to equivalent programs using a state-of-the-art library, in terms of how both frameworks aid users in the handling of typical failure scenarios."
      },
      {
        "Title": "Clafer: Lightweight Modeling of Structure, Behaviour, and Variability",
        "Type": "Talk",
        "Key": "programming-2019-papers-clafer-lightweight-modeling-of-structure-behaviour-and-variability",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/3/Clafer-Lightweight-Modeling-of-Structure-Behaviour-and-Variability",
        "PersonsString": "Paulius Juodisius, Atrisha Sarkar, Raghava Rao Mukkamala, Michal Antkiewicz, Krzysztof Czarnecki and Andrzej Wąsowski",
        "Authors": [
          "pauliusjuodisius",
          "atrishasarkar",
          "raghavaraomukkamala",
          "michalantkiewicz",
          "krzysztofczarnecki",
          "andrzejwasowski"
        ],
        "Affiliations": [
          "IT University of Copenhagen, Denmark",
          "University of Waterloo, Canada",
          "Department of Technology, Kristiania University College, Norway",
          "University of Waterloo, Canada",
          "University of Waterloo, Canada",
          "IT University of Copenhagen, Denmark"
        ],
        "AffiliationsString": "IT University of Copenhagen, Denmark, University of Waterloo, Canada, Department of Technology, Kristiania University College, Norway",
        "Abstract": "Embedded software is growing fast in size and complexity, leading to intimate mixture of complex architectures and complex control. Consequently, software speci cation requires modeling both structures and behaviour of systems. Unfortunately, existing languages do not integrate these aspects well, usually prioritizing one of them. It is common to develop a separate language for each of these facets \nIn this paper, we contribute Clafer: a small language that attempts to tackle this challenge. It combines rich structural modeling with state of the art behavioural formalisms. We are not aware of any other modeling language that seamlessly combines these facets common to system and software modeling. \nWe show how Clafer, in a single unified syntax and semantics, allows capturing feature models (variability), component models, discrete control models (automata) and variability encompassing all these aspects. The language is built on top of first order logic with quantifiers over basic entities (for modeling structures) combined with linear temporal logic (for modeling behaviour). On top of this semantic foundation we build a simple but expressive syntax, enriched with carefully selected syntactic expansions that cover hierarchical modeling, associations, automata, scenarios, and Dwyer’s property patterns. \nWe evaluate Clafer using a power window case study, and comparing it against other notations that substantially overlap with its scope (SysML, AADL, Temporal OCL and Live Sequence Charts), discussing benefits and perils of using a single notation for the purpose."
      },
      {
        "Title": "Separating Use and Reuse to Improve Both",
        "Type": "Talk",
        "Key": "programming-2019-papers-separating-use-and-reuse-to-improve-both",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/12/Separating-Use-and-Reuse-to-Improve-Both",
        "PersonsString": "Hrshikesh Arora, Marco Servetto and Bruno C. d. S. Oliveira",
        "Authors": [
          "hrshikesharora",
          "marcoservetto",
          "brunooliveira"
        ],
        "Affiliations": [
          "Victoria University of Wellington, New Zealand",
          "Victoria University Wellington, New Zealand",
          "The University of Hong Kong, Hong Kong"
        ],
        "AffiliationsString": "Victoria University of Wellington, New Zealand, Victoria University Wellington, New Zealand, The University of Hong Kong, Hong Kong",
        "Abstract": "Context: Trait composition has inspired new research in the area of code reuse for object oriented (OO) languages. One of the main advantages of this kind of composition is that it makes possible to separate subtyping from subclassing; which is good for code-reuse, design and reasoning. However, handling of state within traits is difficult, verbose or inelegant. \nInquiry: We identify the this-leaking problem as the fundamental limitation that prevents the separation of subtyping from subclassing in conventional OO languages. We explain that the concept of trait composition addresses this problem, by distinguishing code designed for use (as a type) from code designed for reuse (i.e. inherited). We are aware of at least 3 concrete independently designed research languages following this methodology: TraitRecordJ, Package Templates and DeepFJig. \nApproach: In this paper, we design 42µ, a new language, where we improve use and reuse and support the This type and family polymorphism by distinguishing code designed for use from code designed for reuse. In this way 42µ synthesise the 3 approaches above, and improves them with abstract state operations: a new elegant way to handle state composition in trait based languages. \nKnowledge and Grounding: Using case studies, we show that 42µ’s model of traits with abstract state operations is more usable and compact than prior work. We formalise our work and prove that type errors cannot arise from composing well typed code. \nImportance: This work is the logical core of the programming language 42. This shows that the ideas presented in this paper can be applicable to a full general purpose language. This form of composition is very flexible and could be used in many new languages."
      },
      {
        "Title": "Another Decade of SOM Language Implementation: Virtual Machines for Research and Teaching",
        "Type": "Talk",
        "Key": "programming-2019-demos-another-decade-of-som-language-implementation-virtual-machines-for-research-and-teaching",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/4/Another-Decade-of-SOM-Language-Implementation-Virtual-Machines-for-Research-and-Teac",
        "PersonsString": "Stefan Marr",
        "Authors": [
          "stefanmarr"
        ],
        "Affiliations": [
          "University of Kent"
        ],
        "AffiliationsString": "University of Kent",
        "Abstract": "The Simple Object Machine (SOM) can be traced back to Aarhus in 2001. Since then it has been used in various places to teach students about language implementation techniques and to do research on optimizations, tooling, and language features. \nThe Simple in the name was key to enabling much of this work. It allowed experimentation with various implementation languages as well as language implementation frameworks. It also enabled experiments with optimizations such as zero-overhead run-time metaprogramming, powerful metaobject protocols, efficient implementations of various concurrency models, and debuggers that can support all these features seamlessly. Even industry got curious about the Simple, and use SOM to showcase a framework for garbage collection and just-in-time compilation. \nThis talk is therefore a shameless plug for SOM, how it is used for research, and its potential for teaching. I’ll try to convince you that SOM, while being a small object-oriented language, is fully equipped to do cutting edge research. At the same time, I’ll argue that it is a great platform to teach language implementation techniques, good software engineering, and perhaps especially relevant for ‹Programming›: good programming practices."
      },
      {
        "Title": "Comprehensive Multiparty Session Types",
        "Type": "Talk",
        "Key": "programming-2019-papers-comprehensive-multiparty-session-types",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/10/Comprehensive-Multiparty-Session-Types",
        "PersonsString": "Andi Bejleri, Elton Domnori, Malte Viering, Patrick Eugster and Mira Mezini",
        "Authors": [
          "andibejleri",
          "eltondomnori",
          "malteviering",
          "patrickeugster",
          "miramezini"
        ],
        "Affiliations": [
          "IBM GBS, Frankfurt, Germany",
          "Canadian Institute of Technology, Tirana, Albania",
          "TU Darmstadt, Germany",
          "Universita della Svizzera Italiana, Switzerland",
          "TU Darmstadt, Germany"
        ],
        "AffiliationsString": "IBM GBS, Frankfurt, Germany, Canadian Institute of Technology, Tirana, Albania, TU Darmstadt, Germany, Universita della Svizzera Italiana, Switzerland",
        "Abstract": "Multiparty session types (MST) are a well-established type theory that describes the interactive structure of a fixed number of components from a global point of view and type-checks the components through projection of the global type onto the participants of the session. They guarantee communicationsafety for a language of multiparty sessions (LMS), i.e., distributed, parallel components can exchange values without deadlocking and unexpected message types. \nSeveral variants of MST and LMS have been proposed to study key features of distributed and parallel programming. We observe that the population of the considered variants follows from only one ancestor, i.e. the original LMS/MST, and there are overlapping traits between features of the considered variants and the original. These hamper evolution of session types and languages and their adoption in practice. This paper addresses the following question: What are the essential features for MST and LMS, and how can these be modelled with simple constructs? To the best of our knowledge, this is the first time this question has been addressed. \nWe performed a systematic analysis of the features and the constructs in MST, LMS, and the considered variants to identify the essential features. The variants are among the most influential (according to Google Scholar) and well-established systems that cover a wide set of areas in distributed, parallel programming. We used classical techniques of formal models such as BNF, structural congruence, small step operational semantics and typing judgments to build our language and type system. Lastly, the coherence of operational semantics and type system is proven by induction. \nThis paper proposes a set of essential features, a language of structured interactions and a type theory of comprehensive multiparty session types, including global types and type system. The analysis removes overlapping features and captures the shared traits, thereby introducing the essential features. The constructs of the language are simple and fundamental, based on the λ and π calculi. Analogously, our global types reflect what is omitted and introduced in the language. Our system covers all the features of the original and variants, with a better ratio of the number of language and type constructs over the number of covered features. \nThe features of the original, variants, and our system along with the number of constructs in the respective language and global types to model them are presented through a table. The syntax, operational semantics, meta-theory and type system of our system are given. We modelled all the motivating examples of the variants in our model, describing the reduction and typing steps. The work discusses how new features, in particular the non-essential ones (formerly excluded) and advanced ones can be either modelled atop the essential ones or added with minimal efforts, i.e. without modifying the existing ones. The fundamental properties of typed processes such as subject reduction, communication safety, and progress are established."
      },
      {
        "Title": "Exploratory and Live, Programming and Coding: A Literature Study Comparing Perspectives on Liveness",
        "Type": "Talk",
        "Key": "programming-2019-papers-exploratory-and-live-programming-and-coding",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/15/Exploratory-and-Live-Programming-and-Coding-A-Literature-Study-Comparing-Perspectiv",
        "PersonsString": "Patrick Rein, Stefan Ramson, Jens Lincke, Robert Hirschfeld and Tobias Pape",
        "Authors": [
          "patrickrein",
          "stefanramson",
          "jenslincke",
          "roberthirschfeld",
          "tobiaspape"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, Germany",
          "Hasso Plattner Institute, Germany",
          "Hasso Plattner Institute, University of Potsdam, Germany",
          "Hasso-Plattner-Institut (HPI), Germany",
          "Hasso Plattner Institute, Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, Germany, Hasso Plattner Institute, University of Potsdam, Germany, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": "Various programming tools, languages, and environments give programmers the impression of changing a program while it is running. This experience of liveness has been discussed for over two decades and a broad spectrum of research on this topic exists. Amongst others, this work has been carried out in the communities around three major ideas which incorporate liveness as an important aspect: live programming, exploratory programming, and live coding. \nWhile there have been publications on the focus of each particular community, the overall spectrum of liveness across these three communities has not been investigated yet. Thus, we want to delineate the variety of research on liveness. At the same time, we want to investigate overlaps and differences in the values and contributions between the three communities. \nTherefore, we conducted a literature study with a sample of 212 publications on the terms retrieved from three major indexing services. On this sample, we conducted a thematic analysis regarding the following aspects: motivation for liveness, application domains, intended outcomes of running a system, and types of contributions. We also gathered bibliographic information such as related keywords and prominent publications. \nBesides other characteristics the results show that the field of exploratory programming is mostly about technical designs and empirical studies on tools for general-purpose programming. In contrast, publications on live coding have the most variety in their motivations and methodologies with a majority being empirical studies with users. As expected, most publications on live coding are applied to performance art. Finally, research on live programming is mostly motivated by making programming more accessible and easier to understand, evaluating their tool designs through empirical studies with users. \nIn delineating the spectrum of work on liveness, we hope to make the individual communities more aware of the work of the others. Further, by giving an overview of the values and methods of the individual communities, we hope to provide researchers new to the field of liveness with an initial overview."
      },
      {
        "Title": "Babylonian-Style Programming: Design and Implementation of an Integration of Live Examples into General-purpose Source Code",
        "Type": "Talk",
        "Key": "programming-2019-papers-babylonian-style-programming-design-and-implementation-of-an-integration-of-live-examples-into-general-purpose-source-code",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/4/Babylonian-Style-Programming-Design-and-Implementation-of-an-Integration-of-Live-Exa",
        "PersonsString": "David Rauch, Patrick Rein, Stefan Ramson, Jens Lincke and Robert Hirschfeld",
        "Authors": [
          "davidrauch",
          "patrickrein",
          "stefanramson",
          "jenslincke",
          "roberthirschfeld"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, Germany",
          "Hasso Plattner Institute, Germany",
          "Hasso Plattner Institute, Germany",
          "Hasso Plattner Institute, University of Potsdam, Germany",
          "Hasso-Plattner-Institut (HPI), Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, Germany, Hasso Plattner Institute, University of Potsdam, Germany, Hasso-Plattner-Institut (HPI), Germany",
        "Abstract": "When working on a program, developers traditionally have to simulate the behavior of the abstract code in their heads until they can execute the application. Live programming aims to support the development and comprehension of programs by providing more immediate feedback on program behavior, but the divide between code and behavior often remains. The goal of example-based live programming is to remove this gap by allowing programmers to explore the actual behavior of their code during development. This is achieved by defining live examples for parts of the application. \nThe idea of live examples has been already addressed in other tools and environments. However, most of those solutions are limited to specific domains and are suitable only for small programs. Thus, we aim to extend the application of example-based live programming to more complex programs potentially spanning multiple modules. \nWe investigate existing solutions to derive a set of requirements for an integration of live examples into source code. Based on these requirements we propose a new approach to live examples and present a prototype in its support. We reproduce, discuss, and extend scenarios from related work to show the practicality of our approach in the context of larger, more complicated, and with that also more realistic scenarios. Also, we measure and evaluate the system response time of our prototypical implementation. \nOur first results show that example-based live programming can provide more insights into the run-time behavior of parameterized code for non-trivial programs. They also reveal unsolved and new challenges affecting example-based live programming environments. In presenting this more general approach to example-based live programming, we hope to motivate further research into this area and to make practical solutions available."
      },
      {
        "Title": "Reading logic as code or as natural language text",
        "Type": "Poster",
        "Key": "programming-2019-src-reading-logic-as-code-or-as-natural-language-text",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/3/Reading-logic-as-code-or-as-natural-language-text",
        "PersonsString": "Patrick Rein",
        "Authors": [
          "patrickrein"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, Germany",
        "Abstract": ""
      },
      {
        "Title": "Reading logic as code or as natural language text (short presentation)",
        "Type": "Talk",
        "Key": "programming-2019-src-reading-logic-as-code-or-as-natural-language-text-short-presentation-",
        "URL": "https://2019.programming-conference.org/details/programming-2019-SRC/2/Reading-logic-as-code-or-as-natural-language-text-short-presentation-",
        "PersonsString": "Patrick Rein",
        "Authors": [
          "patrickrein"
        ],
        "Affiliations": [
          "Hasso Plattner Institute, Germany"
        ],
        "AffiliationsString": "Hasso Plattner Institute, Germany",
        "Abstract": ""
      },
      {
        "Title": "Developing Distributed Systems with ScalaLoci",
        "Type": "Talk",
        "Key": "programming-2019-demos-developing-distributed-systems-with-scalaloci",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/6/Developing-Distributed-Systems-with-ScalaLoci",
        "PersonsString": "Pascal Weisenburger",
        "Authors": [
          "pascalweisenburger"
        ],
        "Affiliations": [
          "Technische Universität Darmstadt"
        ],
        "AffiliationsString": "Technische Universität Darmstadt",
        "Abstract": "In this demo, we present the programming style for distributed applications using ScalaLoci, which provides mechanisms to abstract over common tedious and error-prone issues of distributed systems development, reaching from low level communication to higher level event-based interaction. \nThe language allows a distributed program to be developed as a single code base generating the code specific to each component of the distributed system – including communication code – automatically during compilation (multitier approach). In ScalaLoci, data flow between the components of the distributed system is specified explicitly (reactive approach). \nFirst, ScalaLoci provides “placement types” to associate data and computations to locations. Developers can control the placement by representing the different components of the distributed system at the type level. In contrast to existing multitier languages, our solution allows to go beyond the Web domain and the client–server model and enables static reasoning about placement. Second, we support “multitier reactives” – placed abstractions for reactive programming – which let developers compose data flows spanning over multiple distributed components."
      },
      {
        "Title": "Distributed Reactive Programming for Reactive Distributed Systems",
        "Type": "Talk",
        "Key": "programming-2019-papers-distributed-reactive-programming-for-reactive-distributed-systems",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/1/Distributed-Reactive-Programming-for-Reactive-Distributed-Systems",
        "PersonsString": "Florian Myter, Christophe Scholliers and Wolfgang De Meuter",
        "Authors": [
          "florianmyter",
          "christophescholliers",
          "wolfgangdemeuter"
        ],
        "Affiliations": [
          "Vrije Universiteit Brussel, Belgium",
          "Universiteit Gent, Belgium",
          "Vrije Universiteit Brussel"
        ],
        "AffiliationsString": "Vrije Universiteit Brussel, Belgium, Universiteit Gent, Belgium, Vrije Universiteit Brussel",
        "Abstract": "Context: The term reactivity is popular in two areas of research: programming languages and distributed systems. On one hand, reactive programming is a paradigm which provides programmers with the means to declaratively write event-driven applications. On the other hand, reactive distributed systems handle client requests in a timely fashion regardless of load or failures. \nInquiry: Reactive programming languages and frameworks tailored to the implementation of distributed systems have previously been proposed. However, we argue that these approaches are ill fit to implement reactive distributed systems. \nApproach: We analyse state of the art runtimes for distributed reactive programming and identify two key issues with regards to reactive distributed systems. They rely on single, central points of coordination and/or assume a lack of partial failures in the systems they support. \nKnowledge: Based on our analysis we propose a novel runtime for distributed reactive programming languages and frameworks. This runtime supports reactive distributed systems by design. \nGrounding: We implement a proof of concept framework for reactive distributed systems in JavaScript which builds atop our runtime. Using this framework we implement a case study application which highlights the applicability of our approach. Moreover, we benchmark our runtime against a similar approach in order to showcase its runtime properties and we prove its correctness. \nImportance: This work aims to bridge the gap between two kinds of reactivity: reactive distributed systems and distributed reactive programming. Current distributed reactive programming approaches do not support reactive distributed systems. Our runtime is the first to bridge this reactivity gap: it allows for reactive distributed systems to be implemented using distributed reactive programming."
      },
      {
        "Title": "Concrete Syntax with Black Box Parsers",
        "Type": "Talk",
        "Key": "programming-2019-papers-concrete-syntax-with-black-box-parsers",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/6/Concrete-Syntax-with-Black-Box-Parsers",
        "PersonsString": "Rodin Aarssen, Jurgen Vinju and Tijs van der Storm",
        "Authors": [
          "rodinaarssen",
          "jurgenvinju",
          "tijsvanderstorm"
        ],
        "Affiliations": [
          "CWI, Netherlands",
          "CWI, Netherlands",
          "CWI, Netherlands"
        ],
        "AffiliationsString": "CWI, Netherlands",
        "Abstract": "Context: Meta programming consists for a large part of matching, analyzing, and transforming syntax trees. Many meta programming systems process abstract syntax trees, but this requires intimate knowledge of the structure of the data type describing the abstract syntax. As a result, meta programming is errorprone, and meta programs are not resilient to evolution of the structure of such ASTs, requiring invasive, fault-prone change to these programs. Inquiry: Concrete syntax patterns alleviate this problem by allowing the meta programmer to match and create syntax trees using the actual syntax of the object language. Systems supporting concrete syntax patterns, however, require a concrete grammar of the object language in their own formalism. Creating such grammars is a costly and error-prone process, especially for realistic languages such as Java and C++. Approach: In this paper we present Concretely, a technique to extend meta programming systems with pluggable concrete syntax patterns, based on external, black box parsers. We illustrate Concretely in the context of Rascal, an open-source meta programming system and language workbench, and show how to reuse existing parsers for Java, JavaScript, and C++. Furthermore, we propose Tympanic, a DSL to declaratively map external AST structures to Rascal’s internal data structures. Tympanic allows implementors of Concretely to solve the impedance mismatch between object-oriented class hierarchies in Java and Rascal’s algebraic data types. Both the algebraic data type and AST marshalling code is automatically generated. Knowledge: The conceptual architecture of Concretely and Tympanic supports the reuse of pre-existing, external parsers, and their AST representation in meta programming systems that feature concrete syntax patterns for matching and constructing syntax trees. As such this opens up concrete syntax pattern matching for a host of realistic languages for which writing a grammar from scratch is time consuming and error-prone, but for which industry-strength parsers exist in the wild. Grounding: We evaluate Concretely in terms of source lines of code (SLOC), relative to the size of the AST data type and marshalling code. We show that for real programming languages such as C++ and Java, adding support for concrete syntax patterns takes an effort only in the order of dozens of SLOC. Similarly, we evaluate Tympanic in terms of SLOC, showing an order of magnitude of reduction in SLOC compared to manual implementation of the AST data types and marshalling code. Importance: Meta programming has applications in reverse engineering, reengineering, source code analysis, static analysis, software renovation, domain-specific language engineering, and many others. Processing of syntax trees is central to all of these tasks. Concrete syntax patterns improve the practice of constructing meta programs. The combination of Concretely and Tympanic has the potential to make concrete syntax patterns available with very little effort, thereby improving and promoting the application of meta programming in the general software engineering context."
      },
      {
        "Title": "Developing Distributed Systems with ScalaLoci",
        "Type": "Talk",
        "Key": "programming-2019-posters-developing-distributed-systems-with-scalaloci",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Posters/2/Developing-Distributed-Systems-with-ScalaLoci",
        "PersonsString": "Pascal Weisenburger and Guido Salvaneschi",
        "Authors": [
          "pascalweisenburger",
          "guidosalvaneschi"
        ],
        "Affiliations": [
          "Technische Universität Darmstadt",
          "TU Darmstadt"
        ],
        "AffiliationsString": "Technische Universität Darmstadt, TU Darmstadt",
        "Abstract": "In this poster, we present the programming style for dis- tributed applications using ScalaLoci1 [16]: The language allows a distributed program to be developed as a single code base generating the code specific to each component of the distributed system ś including communication code ś automatically during compilation (multitier approach). As a result, developers do not need to handle details like data conversion and network communication and can focus on the actual application logic. In ScalaLoci, data flow between the components of the distributed system is specified ex- plicitly (reactive approach). Events, e.g., network messages or user input, transfer data among hosts and trigger state changes or new events."
      },
      {
        "Title": "A Language-Parametric Toolchain for Mining Idiomatic Code Patterns",
        "Type": "Talk",
        "Key": "programming-2019-demos-a-language-parametric-toolchain-for-mining-idiomatic-code-patterns",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/3/A-Language-Parametric-Toolchain-for-Mining-Idiomatic-Code-Patterns",
        "PersonsString": "Johan Fabry, Vadim Zaytsev, Kim Mens, Siegfried Nijssen, Hoang Son Pham, Coen De Roover, Dario Di Nucci and Tim Molderez",
        "Authors": [
          "johanfabry",
          "vadimzaytsev",
          "kimmens",
          "siegfriednijssen",
          "hoangsonpham",
          "coenderoover",
          "dariodinucci",
          "timmolderez"
        ],
        "Affiliations": [
          "Raincode Labs, Belgium",
          "Raincode Labs, Belgium",
          "Université Catholique de Louvain, Belgium",
          " UC Louvain",
          "UC Louvain",
          "Vrije Universiteit Brussel",
          "Vrije Universiteit Brussel",
          "Vrije Universiteit Brussel"
        ],
        "AffiliationsString": "Raincode Labs, Belgium, Université Catholique de Louvain, Belgium,  UC Louvain, UC Louvain, Vrije Universiteit Brussel",
        "Abstract": "This demonstration shows a code pattern mining toolchain being developed as part of the INTiMALS research project. This project’s goal is to research and deploy novel pattern mining algorithms in an industrial prototype of an intelligent modernisation assistant for legacy software systems. Ultimately, the assistant should pro-actively recommend software engineers source code modernisation actions by comparing their current development efforts with insights gained by treating source code repositories as data. The current toolchain allows to mine for previously unknown patterns in the system’s source code to reveal programming idioms, structural code regularities and coding conventions. This is done in a language-independent manner and we have already succesfully mined Java and COBOL code. Discovered patterns and their matches can then be interactively explored in a graphical pattern browser. \nIn the demo, we will first give a brief overview of the toolchain and how it allows for language parametricity. This is followed by diving in to a typical pattern exploration session, applied to the Java language and using JHotdraw as an example system. We will discuss how the pattern miner can be parametrized to reveal different kinds of patterns. Then we will interactively explore the results of mining and show how the pattern browser allows us to get an understanding of the patterns found by the miner. \nThe intended audience is programmers interested in seeing how mining can help them find patterns in their source, as well as pattern mining experts that wish to see a novel application and customization of pattern mining techniques."
      },
      {
        "Title": "Keynote: We\u0027re Building On Hollowed Foundations: Worrying Trends in Open Source and What We Can Do About It",
        "Type": "Talk",
        "Key": "programming-2019-keynotes-keynote-2",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Keynotes/1/Keynote-We-re-Building-On-Hollowed-Foundations-Worrying-Trends-in-Open-Source-and-W",
        "PersonsString": "Heather Miller",
        "Authors": [
          "heathermiller"
        ],
        "Affiliations": [
          "Carnegie Mellon University"
        ],
        "AffiliationsString": "Carnegie Mellon University",
        "Abstract": "Open source has won. As little as 5 years ago, the decision faced by many companies building software was whether or not to go with a proprietary database/language/operating system/etc or to choose the open source one. In 2017 we give this shift little thought; nowadays we simply reach for the open source compiler/database/operating system without even considering the closed source, proprietary choices. This is great! Or is it? \nAs we all happily jump on the open source bandwagon for project after project that we undertake, there are cracks beginning to form in some of the most important open source projects that we’ve all begun to depend on. \nOpen source is in fact in peril in many ways. In this talk, I’ll show you a view of open source that you may be completely unaware of, and I will show you some ways that you can jump in and help begin to build a better future for open source."
      },
      {
        "Title": "Out-Of-Place Debugging: a Debugging Architecture to Reduce Debugging Interference",
        "Type": "Talk",
        "Key": "programming-2019-papers-out-of-place-debugging-a-debugging-architecture-to-reduce-debugging-interference",
        "URL": "https://2019.programming-conference.org/details/programming-2019-papers/13/Out-Of-Place-Debugging-a-Debugging-Architecture-to-Reduce-Debugging-Interference",
        "PersonsString": "Matteo Marra, Guillermo Polito and Elisa Gonzalez Boix",
        "Authors": [
          "matteomarra",
          "guillermopolito",
          "elisagonzalezboix"
        ],
        "Affiliations": [
          "Vrije Universiteit Brussel",
          "Univ. Lille, CNRS, Centrale Lille, Inria, UMR 9189 - CRIStAL - Centre de Recherche en Informatique Signal et Automatique de Lille",
          "Vrije Universiteit Brussel, Belgium"
        ],
        "AffiliationsString": "Vrije Universiteit Brussel, Univ. Lille, CNRS, Centrale Lille, Inria, UMR 9189 - CRIStAL - Centre de Recherche en Informatique Signal et Automatique de Lille, Vrije Universiteit Brussel, Belgium",
        "Abstract": "Context. Recent studies show that developers spend most of their programming time testing, verifying and debugging software. As applications become more and more complex, developers demand more advanced debugging support to ease the software development process. \nInquiry. Since the 70’s many debugging solutions were introduced. Amongst them, online debuggers provide a good insight on the conditions that led to a bug, allowing inspection and interaction with the variables of the program. However, most of the online debugging solutions introduce \\textit{debugging interference} to the execution of the program, i.e. pauses, latency, and evaluation of code containing side-effects. \nApproach This paper investigates a novel debugging technique called \\outofplace debugging. The goal is to minimize the debugging interference characteristic of online debugging while allowing online remote capabilities. An \\outofplace debugger transfers the program execution and application state from the debugged application to the debugger application, both running in different processes. \nKnowledge. On the one hand, \\outofplace debugging allows developers to debug applications remotely, overcoming the need of physical access to the machine where the debugged application is running. On the other hand, debugging happens locally on the remote machine avoiding latency. That makes it suitable to be deployed on a distributed system and handle the debugging of several processes running in parallel. \nGrounding. We implemented a concrete out-of-place debugger for the Pharo Smalltalk programming language. We show that our approach is practical by performing several benchmarks, comparing our approach with a classic remote online debugger. We show that our prototype debugger outperforms by a 1000 times a traditional remote debugger in several scenarios. Moreover, we show that the presence of our debugger does not impact the overall performance of an application. \nImportance. This work combines remote debugging with the debugging experience of a local online debugger. Out-of-place debugging is the first online debugging technique that can minimize debugging interference while debugging a remote application. Yet, it still keeps the benefits of online debugging ( e.g. step-by-step execution). This makes the technique suitable for modern applications which are increasingly parallel, distributed and reactive to streams of data from various sources like sensors, UI, network, etc."
      },
      {
        "Title": "Programming Experiences with a Live Programming Environment for Data Structures",
        "Type": "Talk",
        "Key": "programming-2019-demos-programming-experiences-with-a-live-programming-environment-for-data-structures",
        "URL": "https://2019.programming-conference.org/details/programming-2019-Demos/8/Programming-Experiences-with-a-Live-Programming-Environment-for-Data-Structures",
        "PersonsString": "Hidehiko Masuhara, Akio Oka and Tomoki Ogushi",
        "Authors": [
          "hidehikomasuhara",
          "akiooka",
          "tomokiogushi"
        ],
        "Affiliations": [
          "Tokyo Institute of Technology",
          "Tokyo Institute of Technology",
          "Tokyo Tech"
        ],
        "AffiliationsString": "Tokyo Institute of Technology, Tokyo Tech",
        "Abstract": "This demonstration presents a live programming environment for data structures called Kanon [1,2]. The goal of the environment is to support professional programmers when they develop new data structures and operations thereof. The key feature for data structures is its automatic visualization of objects that are created in a program execution. \nWe first overviews the environment through a coding session of a small data structure. The environment assumes a program is written in a test-driven style, and displays objects as a node-link diagram. We introduce the notion of visualization contexts, which the program state stopped at the cursor position, and used for navigating the visualization. \nWe then discusses the features that support liveness and data-structures. The jump-to-construction mechanism navigates the programmer from a visual element to a code fragment that made the element. Our proposed graph layout algorithm automatically analyzes the object structure and places nodes so as to help the programmers to recognize the relations between objects. An on-the-fly test case generation mechanism enables top-down programming by letting the programmers handcraft an expected result upon a call to an unimplemented function. \nLastly, we discuss several issues for future research. Programming complicated data structures require customized visualization so that the programmer can see the objects at different levels of abstraction. In order not to distract the programmers’ focus, it is crucial to handle errors appropriately especially in an environment where program code can be erroneous in the middle of editing. Our user experiment discovered some programming mistakes that can only be observed with the live programming environment, which might be an effect of live programming on the way of programming. \n \n[1] Oka, Masuhara and Aotani, “Live, synchronized, and mental map preserving visualization for data structure programming”, in Proceedings of Onward! 2018. \n[2] https://prg-titech.github.io/Kanon/"
      }
    ],
    "Sessions": [
      {
        "Title": "Posters: Poster Session",
        "Items": [
          "programming-2019-posters-idve-an-integrated-development-and-verification-environment-for-javascript",
          "programming-2019-posters-developing-distributed-systems-with-scalaloci",
          "programming-2019-posters-distributed-software-on-mobile-robot",
          "programming-2019-posters-proving-inequational-propositions-about-haskell-programs-in-coq"
        ],
        "Abstract": "",
        "Type": "Accepted Papers",
        "Key": "a274fbc2-3bc1-4840-a4f1-b6d488e748c1",
        "Day": "2019-04-03",
        "Time": "12:30 - 14:30",
        "Location": "Hotel Bristol Palace | Second floor hall"
      },
      {
        "Title": "Student Research Competition: Oral Presentation",
        "ChairsString": "Philipp Haller",
        "Chairs": [
          "philipphaller"
        ],
        "Items": [
          "programming-2019-src-cantor-pairing-in-a-reversible-programming-language-short-presentation-",
          "programming-2019-src-reading-logic-as-code-or-as-natural-language-text-short-presentation-",
          "programming-2019-src-a-framework-for-big-step-semantics-short-presentation-",
          "programming-2019-src-rml-runtime-monitoring-language-short-presentation-",
          "programming-2019-src-baccaml-the-meta-hybrid-just-in-time-compiler-short-presentation-",
          "programming-2019-src-magritte-a-modern-shell-language-short-presentation-"
        ],
        "Abstract": "The ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at \u0026lt;Programming\u0026gt; before a panel of judges and conference attendees, and creates opportunities for learning and networking among researchers and practitioners. The SRC gives visibility to not only up-and-coming young researchers, but also to the field of computer science research and its community. \n",
        "Type": "Invited Students",
        "Key": "dc03a3e9-5dbd-4af4-973c-0941b84ef00b",
        "Day": "2019-04-03",
        "Time": "09:30 - 11:00",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Student Research Competition: Poster Session",
        "ChairsString": "Philipp Haller",
        "Chairs": [
          "philipphaller"
        ],
        "Items": [
          "programming-2019-src-reading-logic-as-code-or-as-natural-language-text",
          "programming-2019-src-a-framework-for-big-step-semantics",
          "programming-2019-src-automatic-test-case-generation-from-uml-state-machine-diagrams",
          "programming-2019-src-exploring-example-driven-migration",
          "programming-2019-src-cantor-pairing-in-a-reversible-programming-language",
          "programming-2019-src-magritte-a-modern-shell-language",
          "programming-2019-src-rml-runtime-monitoring-language",
          "programming-2019-src-baccaml-the-meta-hybrid-just-in-time-compiler"
        ],
        "Abstract": "The ACM Student Research Competition (SRC), sponsored by Microsoft Research, offers a unique forum for ACM student members at the undergraduate and graduate levels to present their original research at \u0026lt;Programming\u0026gt; before a panel of judges and conference attendees, and creates opportunities for learning and networking among researchers and practitioners. The SRC gives visibility to not only up-and-coming young researchers, but also to the field of computer science research and its community. \n",
        "Type": "Invited Students",
        "Key": "f683104c-14a7-4bc0-b841-b90b75aa9053",
        "Day": "2019-04-02",
        "Time": "12:30 - 14:00",
        "Location": "Hotel Bristol Palace | Second floor hall"
      },
      {
        "Title": "Social Events: Banquet",
        "Items": [
          "programming-2019-social-events-banquet"
        ],
        "Abstract": "We have exciting social events planned; be sure to take a look: \n \n Monday: Reception in the Aula Magna of the University \n Wednesday: Banquet at Palazzo della Meridiana \n",
        "Type": "Accepted Papers",
        "Key": "a98053e0-dc2e-409f-86b2-17677fa13a0c",
        "Day": "2019-04-03",
        "Time": "20:00 - 23:00",
        "Location": "Palazzo della Meridiana | Palazzo della Meridiana"
      },
      {
        "Title": "Social Events: Reception",
        "Items": [
          "programming-2019-social-events-reception"
        ],
        "Abstract": "We have exciting social events planned; be sure to take a look: \n \n Monday: Reception in the Aula Magna of the University \n Wednesday: Banquet at Palazzo della Meridiana \n",
        "Type": "Accepted Papers",
        "Key": "93d00958-ca96-4456-a203-8a2faed8df04",
        "Day": "2019-04-01",
        "Time": "19:00 - 21:00",
        "Location": "Aula Magna of the Università di Genova | Aula Magna"
      },
      {
        "Title": "ProWeb\u002719 - : ProWeb Session 1",
        "Items": [
          "proweb-2019-papers-how-artificial-intelligence-can-improve-web-development-and-testing",
          "proweb-2019-papers-gui-testing-in-production-challenges-and-opportunities",
          "proweb-2019-papers-orchestrated-crowdsourced-testing-of-a-mobile-web-application-a-case-study"
        ],
        "Abstract": " Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas “responsive” web applications already offered a more desktop-like experience, there is an increasing demand for “rich” web applications (RIAs) that offer collaborative and even off-line functionality —Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today’s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as “client vs. server” and “offline vs. online” are fading.",
        "Type": "Accepted Papers",
        "Key": "9c1c0e28-4f82-4b6b-9cdb-d9afbb612c8c",
        "Day": "2019-04-01",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Keynotes: Keynote",
        "Items": [
          "programming-2019-keynotes-keynote-2"
        ],
        "Abstract": "We are delighted to announce the following keynote speakers: \nLars Bak, Toitware, Denmark \nTurning IoT Devices into Robust and Safe Computers \nAbstract \nSmall IoT devices are inherently brittle to program due to lack of memory protection, limited resources, and only a thin layer of operating system support. A runtime memory access error will, at best, make your IoT device crash and reboot. We believe this makes them unattractive to programmers and therefore stifles IoT innovation. We have designed Toit, a new software platform that turns IoT devices into ‘real’ robust computers: easy to program, safe execution environment, flexible, upgradable, and recoverable. This talk will first discuss why we had to implement a new programming language and then how Toit makes IoT devices accessible to high-level programmers. Finally, we will demonstrate how Toit can orchestrate a fleet of devices. \nHeather Miller, CMU, USA \nTitle to be announced",
        "Type": "Keynotes",
        "Key": "8d60b95c-1be0-4987-8669-d832d8ed9c3a",
        "Day": "2019-04-04",
        "Time": "09:30 - 10:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Keynotes: Keynote",
        "Items": [
          "programming-2019-keynotes-keynote-turning-iot-devices-into-robust-and-safe-computers"
        ],
        "Abstract": "We are delighted to announce the following keynote speakers: \nLars Bak, Toitware, Denmark \nTurning IoT Devices into Robust and Safe Computers \nAbstract \nSmall IoT devices are inherently brittle to program due to lack of memory protection, limited resources, and only a thin layer of operating system support. A runtime memory access error will, at best, make your IoT device crash and reboot. We believe this makes them unattractive to programmers and therefore stifles IoT innovation. We have designed Toit, a new software platform that turns IoT devices into ‘real’ robust computers: easy to program, safe execution environment, flexible, upgradable, and recoverable. This talk will first discuss why we had to implement a new programming language and then how Toit makes IoT devices accessible to high-level programmers. Finally, we will demonstrate how Toit can orchestrate a fleet of devices. \nHeather Miller, CMU, USA \nTitle to be announced",
        "Type": "Keynotes",
        "Key": "ad71243e-6019-427c-804c-7f04fb90cc2a",
        "Day": "2019-04-03",
        "Time": "09:30 - 10:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ProWeb\u002719 - : ProWeb Session 2",
        "Items": [
          "proweb-2019-papers-civic-participation-powered-by-ethereum-a-proposal",
          "proweb-2019-papers-trylinks-an-interactive-tutorial-system-for-a-cross-tier-web-programming-language",
          "proweb-2019-papers-web-security-training-at-unige-an-experience"
        ],
        "Abstract": " Full-fledged web applications have become ubiquitous on desktop and mobile devices alike. Whereas “responsive” web applications already offered a more desktop-like experience, there is an increasing demand for “rich” web applications (RIAs) that offer collaborative and even off-line functionality —Google docs being the prototypical example. Long gone are the days that web servers merely had to answer incoming HTTP request with a block of static HTML. Today’s servers react to a continuous stream of events coming from JavaScript applications that have been pushed to clients. As a result, application logic and data is increasingly distributed. Traditional dichotomies such as “client vs. server” and “offline vs. online” are fading.",
        "Type": "Accepted Papers",
        "Key": "af5c7301-151f-4bf4-8794-d4b73d969f6f",
        "Day": "2019-04-01",
        "Time": "16:00 - 17:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Demos: Demos",
        "Items": [
          "programming-2019-demos-developing-distributed-systems-with-scalaloci",
          "programming-2019-demos-static-verification-of-javascript-ide-support-for-debugging-verification-issues",
          "programming-2019-demos-tooling-for-live-big-data-applications"
        ],
        "Abstract": "\u0026lt;Programming\u0026gt; 2019 solicits proposals for demos related to the topics of the conference. The goal of the demo session is to facilitate exchange and provide a platform for authors to showcase their work in live sessions. Accepted demos will be presented in parallel with the main conference on April 3 and, if needed, on April 4.",
        "Type": "Accepted Demos",
        "Key": "6a455e37-cf69-4293-b715-41984f38e23b",
        "Day": "2019-04-03",
        "Time": "16:00 - 17:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Demos: Demos",
        "Items": [
          "programming-2019-demos-another-decade-of-som-language-implementation-virtual-machines-for-research-and-teaching",
          "programming-2019-demos-livetyping-in-action-automatic-type-annotation-for-dynamically-typed-languages"
        ],
        "Abstract": "\u0026lt;Programming\u0026gt; 2019 solicits proposals for demos related to the topics of the conference. The goal of the demo session is to facilitate exchange and provide a platform for authors to showcase their work in live sessions. Accepted demos will be presented in parallel with the main conference on April 3 and, if needed, on April 4.",
        "Type": "Accepted Demos",
        "Key": "7e27a026-36bf-4c0e-ac38-11f6da0d7fe4",
        "Day": "2019-04-03",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Demos: Demos",
        "Items": [
          "programming-2019-demos-a-language-parametric-toolchain-for-mining-idiomatic-code-patterns",
          "programming-2019-demos-quickref-auto-documenting-the-common-lisp-ecosystem",
          "programming-2019-demos-programming-experiences-with-a-live-programming-environment-for-data-structures"
        ],
        "Abstract": "\u0026lt;Programming\u0026gt; 2019 solicits proposals for demos related to the topics of the conference. The goal of the demo session is to facilitate exchange and provide a platform for authors to showcase their work in live sessions. Accepted demos will be presented in parallel with the main conference on April 3 and, if needed, on April 4.",
        "Type": "Accepted Demos",
        "Key": "268a5ce8-df76-4f24-9e64-9086af99658f",
        "Day": "2019-04-03",
        "Time": "13:45 - 15:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "CoCoDo 2019 - : Hands-on Session",
        "Items": [
          "cocodo-2019-language-engineering-with-rascal"
        ],
        "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts. \nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.",
        "Type": "Accepted Papers",
        "Key": "5ddaa9ed-9bd3-4386-9e56-58315187ef87",
        "Day": "2019-04-02",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Colombo"
      },
      {
        "Title": "Salon des Refusés 2019 - : Salon des Refusés - Morning session",
        "ChairsString": "Luke Church and Philip Tchernavskij",
        "Chairs": [
          "lukechurch",
          "philiptchernavskij"
        ],
        "Items": [
          "sdr-2019-papers-welcome-to-salon-des-refus-s",
          "sdr-2019-papers-let-them-fail-towards-vm-built-in-behaviour-that-falls-back-to-the-program",
          "sdr-2019-papers-critique-presentation-let-them-fail",
          "sdr-2019-papers-salon-des-refus-s-discussion-panel"
        ],
        "Abstract": "Salon des Refusés (“exhibition of rejects”) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop is the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nMany interesting ideas about programming might struggle to find space in the modern programming language research community, often because they are difficult to evaluate using established evaluation methods (be it proofs, measurements or controlled user studies). As a result, they are often seen as “unscientific”. Rather than requiring detailed evaluation, this workshop provides a venue where interesting and thought provoking ideas can be exposed to critical evaluation. Submissions that provoke interesting discussion among the program committee members will be published together with an attributed review that presents an alternative position, develops additional context or summarizes discussion from the workshop. This means of engaging with papers enables explorations of novel programming ideas and new ways of doing computer science. \nTopics of interest \nThe scope of the workshop is determined more by the format of submissions than by the specific area of programming language or computer science research that we are interested in. We welcome submissions in a format that makes it possible to think about programming in a new way, including, but not limited to: \n \n Thought experiments – we believe that thought experiments, analogies and illustrative metaphors can provide novel insights and inspire fruitful programming language ideas. \n Experimentation – we find prejudices in favour of theory, as far back as there is institutionalized science, but programming can often be seen more as experimentation than as theorizing. We welcome interesting experiments even if there is yet no overarching theory that explains why they happened. \n Paradigms – all scientific work is rooted in a scientific paradigm that frame what questions can be asked. We encourage submissions that reflect on existing paradigms or explore alternative scientific paradigms. \n Metaphors, myths and analogies – any description of formal, mathematical, quantitative or even poetical nature still represents just an analogy. We believe that fruitful ideas can be learned from less common forms of analogies as well as from the predominant, formal and mathematical ones. \n From jokes to science fiction – a story or an artistic performance may explore ideas and spark conversations that provide crucial inspiration for development of new computer science thinking. \n (Counter-)Histories – we are inspired by the idea that our field may currently be in its pre-history, and that the practices we have adopted may be completely faulty. A counter-history may report on today’s primitive notions of programming from the far future, or on the unfulfilled promise of programming’s past. \n Ironies of Software Design – the ‘best practices’ of programming are motivated by math and engineering virtues such as consistency, correctness, and efficiency. These virtues may not be apparent to other communities involved with software, or may go directly against their needs. We invite reports on the ironic consequences of virtuous programming, and the ironic successes of ‘improper’ programming. \n Dialogues – the orthodoxies of programming ought to be challenged from outside the field, from the point of view of those that are affected by or excluded from it. We invite both insiders and outsiders to submit critical dialogues on programming. \n \nSubmission format and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission (authors can use the ‹Programming› paper template). We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: January 7 2019 extended to January 21st 2019 \n Notification of authors: January 23 2019 February 6th 2019 \n Early registration deadline: February 25 2019 \n Workshop at  2019: April 2 2019 \n Workshop website here and submission link here. \n \nYou can find additional information about the program committee and papers and critiques from previous editions of the workshop here.",
        "Type": "Accepted Papers",
        "Key": "04d96b05-82dc-4443-8c41-bbf12d7b8585",
        "Day": "2019-04-02",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "MoreVMs\u002719 - : Just-in-Time Compilation",
        "ChairsString": "Stefan Marr and Edd Barrett",
        "Chairs": [
          "stefanmarr",
          "eddbarrett"
        ],
        "Items": [
          "morevms-2019-welcome",
          "morevms-2019-region-based-compilation-in-the-hhvm-jit-compiler",
          "morevms-2019-extending-a-meta-tracing-compiler-to-mix-method-and-tracing-compilation"
        ],
        "Abstract": "Following two previous successful editions, the MoreVMs’19 workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies. By bringing together both researchers and practitioners, the workshop aims to enable a diverse discussion on how languages and runtimes are currently being utilized, and where they need to improve further. \nInvited Talks \nRegion-Based Compilation in the HHVM JIT Compiler Guilherme Ottoni \nVM design in an Ideal World vs. VM design in the Real World Lukas Stadler",
        "Type": "Accepted Papers",
        "Key": "009561e1-423c-4631-b410-8c059f71ee92",
        "Day": "2019-04-02",
        "Time": "08:50 - 10:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "VPT 2019 - : Session 4",
        "Items": [
          "vpt-2019-papers-iteratively-composing-statically-verified-traits",
          "vpt-2019-papers-verifying-string-replacing-procedures-by-supercompilation",
          "vpt-2019-papers-study-of-recursion-elimination-for-a-class-of-semi-interpreted-recursive-program-schemata",
          "vpt-2019-papers-closing"
        ],
        "Abstract": "The aim of the  VPT 2019 workshop is to bring together researchers working in the fields of Program Verification and Program Transformation. There is a great potential for beneficial interactions between these two fields because: On one hand, methods and tools developed in the field of Program Transformation such as partial evaluation, fold/unfold transformations, and supercompilation, have all been applied with success for the verification of infinite state and parameterized systems. On the other hand, model checking, abstract interpretation, SAT and SMT solving and automated theorem proving have been used to enhance program transformation techniques. Moreover, the formal certification of program transformation tools, such as automated refactoring tools and compilers, has recently attracted considerable interest, posed major challenges. The workshop will provide a forum where researchers from these fields may interact and foster new developments.",
        "Type": "Accepted Papers",
        "Key": "ec687a91-2a6a-432b-9ba9-e1185f1d3100",
        "Day": "2019-04-02",
        "Time": "16:00 - 17:10",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "ICW 2019 - : ELS 2019 Keynote Slot",
        "ChairsString": "Oleks Shturmov",
        "Chairs": [
          "oleks"
        ],
        "Items": [
          "icw-2019-papers-els-2019-keynote-slot"
        ],
        "Abstract": "Modern computer systems are often loosely coupled compositions of heterogeneous components. An important part of modern programming is the art, science, and engineering of interconnecting disparate code components to offer larger services in a reliable and scalable manner. The goal of this workshop is to facilitate an ongoing discussion, and advance the state of the art of interconnecting code. See the call for contributions for further information.",
        "Type": "Accepted Papers",
        "Key": "cd3e6446-185a-47ad-a662-e25e95c1ad6a",
        "Day": "2019-04-01",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "ICW 2019 - : ICW Part I",
        "ChairsString": "Eric Jul",
        "Chairs": [
          "ericjul"
        ],
        "Items": [
          "icw-2019-papers-polyglot-adapters",
          "icw-2019-papers-the-issue-of-source-code-repository-management-in-large-enterprises",
          "icw-2019-papers-factoring-out-glue-code-in-systems-of-iot-devices"
        ],
        "Abstract": "Modern computer systems are often loosely coupled compositions of heterogeneous components. An important part of modern programming is the art, science, and engineering of interconnecting disparate code components to offer larger services in a reliable and scalable manner. The goal of this workshop is to facilitate an ongoing discussion, and advance the state of the art of interconnecting code. See the call for contributions for further information.",
        "Type": "Accepted Papers",
        "Key": "30ae4c23-f0ce-401b-9937-50d4d2633b7a",
        "Day": "2019-04-01",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "PX/19 - : Session 1",
        "ChairsString": "Jens Lincke",
        "Chairs": [
          "jenslincke"
        ],
        "Items": [
          "px-2019-papers-idve-an-integrated-development-and-verification-environment-for-javascript",
          "px-2019-papers-draw-this-object-a-study-of-debugging-representations",
          "px-2019-papers-faster-feedback-through-lexical-test-prioritization"
        ],
        "Abstract": " \n \n   \n   \n    \n   Welcome to the 5th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/19 workshop, please note that the workshop will follow the Writers’ Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and perhaps a platform and programming language. A group of developers head into a vast workroom. As they design, debate and program they discover they need learn more about the domain and the nature of potential solutions–they are exploring via programming. \nThe Programming Experience (PX) Workshop is about what happens in that room when programmers sit down in front of computers and produce code, especially in an exploratory way. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (“liveness”); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n experience of programming \n exploratory programming \n liveness \n non-standard tools \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n domain-specific languages \n psychology of programming \n error tolerance \n user studies \n \nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop. In this edition we would like to focus on exploratory, live programming, but we also welcome a wide spectrum of contributions on programming experience. \nPrevious editions \nPX/18 at \u0026lt;Programming\u0026gt; 2018, April 10, 2018, Nice, France \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at \u0026lt;Programming\u0026gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px19/media/PX19CfP.pdf \nhttp://programming-experience.org/px19/",
        "Type": "Accepted Papers",
        "Key": "82274b02-a48c-402b-b09b-c16adabf5f68",
        "Day": "2019-04-01",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "MoreVMs\u002719 - : Programming Across the System Stack",
        "ChairsString": "Shoaib Akram",
        "Chairs": [
          "shoaibakram"
        ],
        "Items": [
          "morevms-2019-a-shell-like-model-for-general-purpose-programming",
          "morevms-2019-toward-a-language-design-for-energy-prediction",
          "morevms-2019-language-support-for-multiple-privacy-enhancing-technologies"
        ],
        "Abstract": "Following two previous successful editions, the MoreVMs’19 workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies. By bringing together both researchers and practitioners, the workshop aims to enable a diverse discussion on how languages and runtimes are currently being utilized, and where they need to improve further. \nInvited Talks \nRegion-Based Compilation in the HHVM JIT Compiler Guilherme Ottoni \nVM design in an Ideal World vs. VM design in the Real World Lukas Stadler",
        "Type": "Accepted Papers",
        "Key": "129e9d2a-08e6-4867-8d62-bfb6c7a65762",
        "Day": "2019-04-02",
        "Time": "16:00 - 17:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "VPT 2019 - : Session 3",
        "Items": [
          "vpt-2019-papers-hacking-program-analysis-a-systematic-approach-to-code-protection",
          "vpt-2019-papers-static-program-analysis-for-string-manipulation-languages"
        ],
        "Abstract": "The aim of the  VPT 2019 workshop is to bring together researchers working in the fields of Program Verification and Program Transformation. There is a great potential for beneficial interactions between these two fields because: On one hand, methods and tools developed in the field of Program Transformation such as partial evaluation, fold/unfold transformations, and supercompilation, have all been applied with success for the verification of infinite state and parameterized systems. On the other hand, model checking, abstract interpretation, SAT and SMT solving and automated theorem proving have been used to enhance program transformation techniques. Moreover, the formal certification of program transformation tools, such as automated refactoring tools and compilers, has recently attracted considerable interest, posed major challenges. The workshop will provide a forum where researchers from these fields may interact and foster new developments.",
        "Type": "Accepted Papers",
        "Key": "7415fb27-d6ec-4cf3-ae89-5b8e3c4ae745",
        "Day": "2019-04-02",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "VPT 2019 - : Session 1",
        "Items": [
          "vpt-2019-papers-welcome",
          "vpt-2019-papers-modelling-and-verifying-bitcoin-contracts-",
          "vpt-2019-papers-polyvariant-program-specialisation-with-property-based-abstraction"
        ],
        "Abstract": "The aim of the  VPT 2019 workshop is to bring together researchers working in the fields of Program Verification and Program Transformation. There is a great potential for beneficial interactions between these two fields because: On one hand, methods and tools developed in the field of Program Transformation such as partial evaluation, fold/unfold transformations, and supercompilation, have all been applied with success for the verification of infinite state and parameterized systems. On the other hand, model checking, abstract interpretation, SAT and SMT solving and automated theorem proving have been used to enhance program transformation techniques. Moreover, the formal certification of program transformation tools, such as automated refactoring tools and compilers, has recently attracted considerable interest, posed major challenges. The workshop will provide a forum where researchers from these fields may interact and foster new developments.",
        "Type": "Accepted Papers",
        "Key": "b80270b4-bf8d-4f01-8e76-764c9e8e5a29",
        "Day": "2019-04-02",
        "Time": "08:55 - 10:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "ICW 2019 - : ICW Intro",
        "ChairsString": "Eric Jul",
        "Chairs": [
          "ericjul"
        ],
        "Items": [
          "icw-2019-papers-introduction-to-the-workshop",
          "icw-2019-papers-interconnecting-code-il-buono-il-brutto-il-cattivo",
          "icw-2019-papers-keynote-sulong-executing-low-level-languages-on-truffle-by-manuel-rigger",
          "icw-2019-papers-post-keynote-discussion"
        ],
        "Abstract": "Modern computer systems are often loosely coupled compositions of heterogeneous components. An important part of modern programming is the art, science, and engineering of interconnecting disparate code components to offer larger services in a reliable and scalable manner. The goal of this workshop is to facilitate an ongoing discussion, and advance the state of the art of interconnecting code. See the call for contributions for further information.",
        "Type": "Accepted Papers",
        "Key": "9731b2d9-5d57-42f7-b42e-0aaf24deb2bb",
        "Day": "2019-04-01",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "CoCoDo 2019 - : Opening Talk",
        "Items": [
          "cocodo-2019-building-a-compiler-fully-in-agda"
        ],
        "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts. \nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.",
        "Type": "Accepted Papers",
        "Key": "1bffeec1-e4db-47ac-9b8f-af3bd30e2fde",
        "Day": "2019-04-02",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Colombo"
      },
      {
        "Title": "VPT 2019 - : Session 2",
        "Items": [
          "vpt-2019-papers-validation-of-internet-of-things-frameworks",
          "vpt-2019-papers-lemma-generation-for-horn-clause-satisfiability-a-preliminary-study"
        ],
        "Abstract": "The aim of the  VPT 2019 workshop is to bring together researchers working in the fields of Program Verification and Program Transformation. There is a great potential for beneficial interactions between these two fields because: On one hand, methods and tools developed in the field of Program Transformation such as partial evaluation, fold/unfold transformations, and supercompilation, have all been applied with success for the verification of infinite state and parameterized systems. On the other hand, model checking, abstract interpretation, SAT and SMT solving and automated theorem proving have been used to enhance program transformation techniques. Moreover, the formal certification of program transformation tools, such as automated refactoring tools and compilers, has recently attracted considerable interest, posed major challenges. The workshop will provide a forum where researchers from these fields may interact and foster new developments.",
        "Type": "Accepted Papers",
        "Key": "44cb7aaa-bab7-4f8c-bf22-8df0b13d0286",
        "Day": "2019-04-02",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "Salon des Refusés 2019 - : Salon des Refusés Fourth session",
        "Items": [
          "sdr-2019-papers-computing-beyond-pencils",
          "sdr-2019-papers-critique-presentation-computing-beyond-pencils",
          "sdr-2019-papers-salon-des-refus-s-closing-plenary"
        ],
        "Abstract": "Salon des Refusés (“exhibition of rejects”) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop is the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nMany interesting ideas about programming might struggle to find space in the modern programming language research community, often because they are difficult to evaluate using established evaluation methods (be it proofs, measurements or controlled user studies). As a result, they are often seen as “unscientific”. Rather than requiring detailed evaluation, this workshop provides a venue where interesting and thought provoking ideas can be exposed to critical evaluation. Submissions that provoke interesting discussion among the program committee members will be published together with an attributed review that presents an alternative position, develops additional context or summarizes discussion from the workshop. This means of engaging with papers enables explorations of novel programming ideas and new ways of doing computer science. \nTopics of interest \nThe scope of the workshop is determined more by the format of submissions than by the specific area of programming language or computer science research that we are interested in. We welcome submissions in a format that makes it possible to think about programming in a new way, including, but not limited to: \n \n Thought experiments – we believe that thought experiments, analogies and illustrative metaphors can provide novel insights and inspire fruitful programming language ideas. \n Experimentation – we find prejudices in favour of theory, as far back as there is institutionalized science, but programming can often be seen more as experimentation than as theorizing. We welcome interesting experiments even if there is yet no overarching theory that explains why they happened. \n Paradigms – all scientific work is rooted in a scientific paradigm that frame what questions can be asked. We encourage submissions that reflect on existing paradigms or explore alternative scientific paradigms. \n Metaphors, myths and analogies – any description of formal, mathematical, quantitative or even poetical nature still represents just an analogy. We believe that fruitful ideas can be learned from less common forms of analogies as well as from the predominant, formal and mathematical ones. \n From jokes to science fiction – a story or an artistic performance may explore ideas and spark conversations that provide crucial inspiration for development of new computer science thinking. \n (Counter-)Histories – we are inspired by the idea that our field may currently be in its pre-history, and that the practices we have adopted may be completely faulty. A counter-history may report on today’s primitive notions of programming from the far future, or on the unfulfilled promise of programming’s past. \n Ironies of Software Design – the ‘best practices’ of programming are motivated by math and engineering virtues such as consistency, correctness, and efficiency. These virtues may not be apparent to other communities involved with software, or may go directly against their needs. We invite reports on the ironic consequences of virtuous programming, and the ironic successes of ‘improper’ programming. \n Dialogues – the orthodoxies of programming ought to be challenged from outside the field, from the point of view of those that are affected by or excluded from it. We invite both insiders and outsiders to submit critical dialogues on programming. \n \nSubmission format and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission (authors can use the ‹Programming› paper template). We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: January 7 2019 extended to January 21st 2019 \n Notification of authors: January 23 2019 February 6th 2019 \n Early registration deadline: February 25 2019 \n Workshop at  2019: April 2 2019 \n Workshop website here and submission link here. \n \nYou can find additional information about the program committee and papers and critiques from previous editions of the workshop here.",
        "Type": "Accepted Papers",
        "Key": "72204196-ffcd-4818-a18c-19dd286963ef",
        "Day": "2019-04-02",
        "Time": "16:00 - 17:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "Salon des Refusés 2019 - : Salon des Refusés - Second session",
        "Items": [
          "sdr-2019-papers-the-misunderstood-roots-of-frp-will-save-programming",
          "sdr-2019-papers-critique-presentation-the-misunderstood-roots-of-frp-will-save-programming",
          "sdr-2019-papers-salon-des-refus-s-warmup-activity"
        ],
        "Abstract": "Salon des Refusés (“exhibition of rejects”) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop is the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nMany interesting ideas about programming might struggle to find space in the modern programming language research community, often because they are difficult to evaluate using established evaluation methods (be it proofs, measurements or controlled user studies). As a result, they are often seen as “unscientific”. Rather than requiring detailed evaluation, this workshop provides a venue where interesting and thought provoking ideas can be exposed to critical evaluation. Submissions that provoke interesting discussion among the program committee members will be published together with an attributed review that presents an alternative position, develops additional context or summarizes discussion from the workshop. This means of engaging with papers enables explorations of novel programming ideas and new ways of doing computer science. \nTopics of interest \nThe scope of the workshop is determined more by the format of submissions than by the specific area of programming language or computer science research that we are interested in. We welcome submissions in a format that makes it possible to think about programming in a new way, including, but not limited to: \n \n Thought experiments – we believe that thought experiments, analogies and illustrative metaphors can provide novel insights and inspire fruitful programming language ideas. \n Experimentation – we find prejudices in favour of theory, as far back as there is institutionalized science, but programming can often be seen more as experimentation than as theorizing. We welcome interesting experiments even if there is yet no overarching theory that explains why they happened. \n Paradigms – all scientific work is rooted in a scientific paradigm that frame what questions can be asked. We encourage submissions that reflect on existing paradigms or explore alternative scientific paradigms. \n Metaphors, myths and analogies – any description of formal, mathematical, quantitative or even poetical nature still represents just an analogy. We believe that fruitful ideas can be learned from less common forms of analogies as well as from the predominant, formal and mathematical ones. \n From jokes to science fiction – a story or an artistic performance may explore ideas and spark conversations that provide crucial inspiration for development of new computer science thinking. \n (Counter-)Histories – we are inspired by the idea that our field may currently be in its pre-history, and that the practices we have adopted may be completely faulty. A counter-history may report on today’s primitive notions of programming from the far future, or on the unfulfilled promise of programming’s past. \n Ironies of Software Design – the ‘best practices’ of programming are motivated by math and engineering virtues such as consistency, correctness, and efficiency. These virtues may not be apparent to other communities involved with software, or may go directly against their needs. We invite reports on the ironic consequences of virtuous programming, and the ironic successes of ‘improper’ programming. \n Dialogues – the orthodoxies of programming ought to be challenged from outside the field, from the point of view of those that are affected by or excluded from it. We invite both insiders and outsiders to submit critical dialogues on programming. \n \nSubmission format and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission (authors can use the ‹Programming› paper template). We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: January 7 2019 extended to January 21st 2019 \n Notification of authors: January 23 2019 February 6th 2019 \n Early registration deadline: February 25 2019 \n Workshop at  2019: April 2 2019 \n Workshop website here and submission link here. \n \nYou can find additional information about the program committee and papers and critiques from previous editions of the workshop here.",
        "Type": "Accepted Papers",
        "Key": "3f680c90-b788-4db6-8c7c-660baafa4c73",
        "Day": "2019-04-02",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "CoCoDo 2019 - : Lightning Talks",
        "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts. \nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.",
        "Type": "Accepted Papers",
        "Key": "63c65991-7f15-4d4d-9416-5e7ab8ab1387",
        "Day": "2019-04-02",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Colombo"
      },
      {
        "Title": "Salon des Refusés 2019 - : Salon des Refusés - Third session",
        "Items": [
          "sdr-2019-papers-presentation-and-panel-discussion-minimal-viable-revolution",
          "sdr-2019-papers-why-can-t-programming-be-like-sketching-",
          "sdr-2019-papers-critique-presentation-why-can-t-programming-be-like-sketching-"
        ],
        "Abstract": "Salon des Refusés (“exhibition of rejects”) was an 1863 exhibition of artworks rejected from the official Paris Salon. The jury of Paris Salon required near-photographic realism and classified works according to a strict genre hierarchy. Paintings by many, later famous, modernists such as Édouard Manet were rejected and appeared in what became known as the Salon des Refusés. This workshop is the programming language research equivalent of Salon des Refusés. We provide venue for exploring new ideas and new ways of doing computer science. \nMany interesting ideas about programming might struggle to find space in the modern programming language research community, often because they are difficult to evaluate using established evaluation methods (be it proofs, measurements or controlled user studies). As a result, they are often seen as “unscientific”. Rather than requiring detailed evaluation, this workshop provides a venue where interesting and thought provoking ideas can be exposed to critical evaluation. Submissions that provoke interesting discussion among the program committee members will be published together with an attributed review that presents an alternative position, develops additional context or summarizes discussion from the workshop. This means of engaging with papers enables explorations of novel programming ideas and new ways of doing computer science. \nTopics of interest \nThe scope of the workshop is determined more by the format of submissions than by the specific area of programming language or computer science research that we are interested in. We welcome submissions in a format that makes it possible to think about programming in a new way, including, but not limited to: \n \n Thought experiments – we believe that thought experiments, analogies and illustrative metaphors can provide novel insights and inspire fruitful programming language ideas. \n Experimentation – we find prejudices in favour of theory, as far back as there is institutionalized science, but programming can often be seen more as experimentation than as theorizing. We welcome interesting experiments even if there is yet no overarching theory that explains why they happened. \n Paradigms – all scientific work is rooted in a scientific paradigm that frame what questions can be asked. We encourage submissions that reflect on existing paradigms or explore alternative scientific paradigms. \n Metaphors, myths and analogies – any description of formal, mathematical, quantitative or even poetical nature still represents just an analogy. We believe that fruitful ideas can be learned from less common forms of analogies as well as from the predominant, formal and mathematical ones. \n From jokes to science fiction – a story or an artistic performance may explore ideas and spark conversations that provide crucial inspiration for development of new computer science thinking. \n (Counter-)Histories – we are inspired by the idea that our field may currently be in its pre-history, and that the practices we have adopted may be completely faulty. A counter-history may report on today’s primitive notions of programming from the far future, or on the unfulfilled promise of programming’s past. \n Ironies of Software Design – the ‘best practices’ of programming are motivated by math and engineering virtues such as consistency, correctness, and efficiency. These virtues may not be apparent to other communities involved with software, or may go directly against their needs. We invite reports on the ironic consequences of virtuous programming, and the ironic successes of ‘improper’ programming. \n Dialogues – the orthodoxies of programming ought to be challenged from outside the field, from the point of view of those that are affected by or excluded from it. We invite both insiders and outsiders to submit critical dialogues on programming. \n \nSubmission format and important dates \nWe welcome short papers (up to 3000 words) and long papers (up to 9000 words) as well as screencasts or interactive essays. We intend to publish accepted paper on the web, but any format is welcome for the submission (authors can use the ‹Programming› paper template). We intend to consider publishing post-proceedings using the ACM SIGPLAN format (acmart format with the sigconf option), so you can use this template for your submission too. \n \n Deadline for submissions: January 7 2019 extended to January 21st 2019 \n Notification of authors: January 23 2019 February 6th 2019 \n Early registration deadline: February 25 2019 \n Workshop at  2019: April 2 2019 \n Workshop website here and submission link here. \n \nYou can find additional information about the program committee and papers and critiques from previous editions of the workshop here.",
        "Type": "Accepted Papers",
        "Key": "a2fdc9ce-f467-4a78-8690-6cdc1dd978eb",
        "Day": "2019-04-02",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Bellini"
      },
      {
        "Title": "MoreVMs\u002719 - : VMs and an Ideal World",
        "ChairsString": "Stefan Marr",
        "Chairs": [
          "stefanmarr"
        ],
        "Items": [
          "morevms-2019-vm-design-in-an-ideal-world-vs-vm-design-in-the-real-world",
          "morevms-2019-vm-support-for-live-typing"
        ],
        "Abstract": "Following two previous successful editions, the MoreVMs’19 workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies. By bringing together both researchers and practitioners, the workshop aims to enable a diverse discussion on how languages and runtimes are currently being utilized, and where they need to improve further. \nInvited Talks \nRegion-Based Compilation in the HHVM JIT Compiler Guilherme Ottoni \nVM design in an Ideal World vs. VM design in the Real World Lukas Stadler",
        "Type": "Accepted Papers",
        "Key": "d84b5f61-d1fd-4a70-b4e7-187f49d5c23e",
        "Day": "2019-04-02",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "PX/19 - : Session 2",
        "ChairsString": "Tobias Pape",
        "Chairs": [
          "tobiaspape"
        ],
        "Items": [
          "px-2019-papers-live-software-development-tightening-the-feedback-loops",
          "px-2019-papers-the-meager-validation-of-live-programming",
          "px-2019-papers-polyjus-a-squeak-smalltalk-based-polyglot-notebook-system-for-the-graalvm"
        ],
        "Abstract": " \n \n   \n   \n    \n   Welcome to the 5th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/19 workshop, please note that the workshop will follow the Writers’ Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and perhaps a platform and programming language. A group of developers head into a vast workroom. As they design, debate and program they discover they need learn more about the domain and the nature of potential solutions–they are exploring via programming. \nThe Programming Experience (PX) Workshop is about what happens in that room when programmers sit down in front of computers and produce code, especially in an exploratory way. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (“liveness”); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n experience of programming \n exploratory programming \n liveness \n non-standard tools \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n domain-specific languages \n psychology of programming \n error tolerance \n user studies \n \nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop. In this edition we would like to focus on exploratory, live programming, but we also welcome a wide spectrum of contributions on programming experience. \nPrevious editions \nPX/18 at \u0026lt;Programming\u0026gt; 2018, April 10, 2018, Nice, France \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at \u0026lt;Programming\u0026gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px19/media/PX19CfP.pdf \nhttp://programming-experience.org/px19/",
        "Type": "Accepted Papers",
        "Key": "49515b1a-2e9c-4dc7-a8be-1068b9bfaba3",
        "Day": "2019-04-01",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "MoreVMs\u002719 - : Implementation Aspects",
        "ChairsString": "Edd Barrett",
        "Chairs": [
          "eddbarrett"
        ],
        "Items": [
          "morevms-2019-efficient-implementation-of-smalltalk-activation-records-in-language-implementation-frameworks",
          "morevms-2019-optimization-coaching-for-fork-join-applications-on-the-java-virtual-machine",
          "morevms-2019-to-expose-or-not-to-expose-hardware-heterogeneity-to-runtimes-"
        ],
        "Abstract": "Following two previous successful editions, the MoreVMs’19 workshop aims to bring together industrial and academic programmers to discuss the design, implementation, and usage of modern languages and runtimes. This includes aspects such as reuse of language runtimes, modular implementation, language design and compilation strategies. By bringing together both researchers and practitioners, the workshop aims to enable a diverse discussion on how languages and runtimes are currently being utilized, and where they need to improve further. \nInvited Talks \nRegion-Based Compilation in the HHVM JIT Compiler Guilherme Ottoni \nVM design in an Ideal World vs. VM design in the Real World Lukas Stadler",
        "Type": "Accepted Papers",
        "Key": "f8324beb-33b2-43ef-953a-6230d808f7e4",
        "Day": "2019-04-02",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "PX/19 - ",
        "Abstract": " \n \n   \n   \n    \n   Welcome to the 5th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/19 workshop, please note that the workshop will follow the Writers’ Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and perhaps a platform and programming language. A group of developers head into a vast workroom. As they design, debate and program they discover they need learn more about the domain and the nature of potential solutions–they are exploring via programming. \nThe Programming Experience (PX) Workshop is about what happens in that room when programmers sit down in front of computers and produce code, especially in an exploratory way. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (“liveness”); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n experience of programming \n exploratory programming \n liveness \n non-standard tools \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n domain-specific languages \n psychology of programming \n error tolerance \n user studies \n \nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop. In this edition we would like to focus on exploratory, live programming, but we also welcome a wide spectrum of contributions on programming experience. \nPrevious editions \nPX/18 at \u0026lt;Programming\u0026gt; 2018, April 10, 2018, Nice, France \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at \u0026lt;Programming\u0026gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px19/media/PX19CfP.pdf \nhttp://programming-experience.org/px19/",
        "Type": "Accepted Papers",
        "Key": "49e6d535-cd11-4696-8c8e-6edabce62208",
        "Day": "2019-04-01",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "PX/19 - : Session 3",
        "ChairsString": "Ademar Aguiar",
        "Chairs": [
          "ademaraguiar"
        ],
        "Items": [
          "px-2019-papers-time-series-analysis-of-programmer-s-eeg-for-debug-state-classifcation",
          "px-2019-papers-projectional-dsls-from-the-ground-up",
          "px-2019-papers-what-can-we-learn-from-systems-"
        ],
        "Abstract": " \n \n   \n   \n    \n   Welcome to the 5th Edition of the Programming Experience Workshop \n   \n \n \nNote: If you intend to participate in the PX/19 workshop, please note that the workshop will follow the Writers’ Workshop format. For that, please download and read all submissions in advance. \nAbstract \nImagine a software development task: some sort of requirements and perhaps a platform and programming language. A group of developers head into a vast workroom. As they design, debate and program they discover they need learn more about the domain and the nature of potential solutions–they are exploring via programming. \nThe Programming Experience (PX) Workshop is about what happens in that room when programmers sit down in front of computers and produce code, especially in an exploratory way. Do they create text that is transformed into running behavior (the old way), or do they operate on behavior directly (“liveness”); are they exploring the live domain to understand the true nature of the requirements; are they like authors creating new worlds; does visualization matter; is the experience immediate, immersive, vivid and continuous; do fluency, literacy, and learning matter; do they build tools, meta-tools; are they creating languages to express new concepts quickly and easily; and curiously, is joy relevant to the experience? \nHere is a list of topic areas to get you thinking: \n \n creating programs \n experience of programming \n exploratory programming \n liveness \n non-standard tools \n visual, auditory, tactile, and other non-textual languages \n text and more than text \n program understanding \n domain-specific languages \n psychology of programming \n error tolerance \n user studies \n \nCorrectness, performance, standard tools, foundations, and text-as-program are important traditional research areas, but the experience of programming and how to improve and evolve it are the focus of this workshop. In this edition we would like to focus on exploratory, live programming, but we also welcome a wide spectrum of contributions on programming experience. \nPrevious editions \nPX/18 at \u0026lt;Programming\u0026gt; 2018, April 10, 2018, Nice, France \nPX/17.2 at SPLASH 2017, October 22, 2017, Vancouver, British Columbia, Canada \nPX/17 at \u0026lt;Programming\u0026gt; 2017, April 4, 2017, Brussels, Belgium \nPX/16 at ECOOP 2016, July 18, 2016, Rome, Italy \nFlyer \nhttp://programming-experience.org/px19/media/PX19CfP.pdf \nhttp://programming-experience.org/px19/",
        "Type": "Accepted Papers",
        "Key": "21ddf3c7-760d-4d02-8963-e0914daef331",
        "Day": "2019-04-01",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Michelangelo"
      },
      {
        "Title": "CoCoDo 2019 - : Tool Battle: 1 Infrastructure, 2 Parser Generators!",
        "ChairsString": "Johan Fabry",
        "Chairs": [
          "johanfabry"
        ],
        "Items": [
          "cocodo-2019-smacc",
          "cocodo-2019-petitparser"
        ],
        "Abstract": "CoCoDo is a coding dojo where you can enjoy an entire day of compiler programming under gentle guidance of field experts. \nCompiler construction comprises, but is not limited to, lexical analysis, syntactic analysis, preprocessing, context handling, code generation, code optimisation, virtual machines, interpreters, smell detection, clone management, portability, migration, refactoring, domain-specific language design, linking and loading, assembling and disassembling, generics and reflection, numerous paradigms and so much more.",
        "Type": "Accepted Papers",
        "Key": "1c82cbce-f652-474c-ba37-20b9f400eca3",
        "Day": "2019-04-02",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Colombo"
      },
      {
        "Title": "ICW 2019 - : ICW Part II",
        "ChairsString": "Eric Jul",
        "Chairs": [
          "ericjul"
        ],
        "Items": [
          "icw-2019-papers-glueing-the-internet-of-things-together",
          "icw-2019-papers-live-gui-development-for-service-based-systems",
          "icw-2019-papers-panel-discussion"
        ],
        "Abstract": "Modern computer systems are often loosely coupled compositions of heterogeneous components. An important part of modern programming is the art, science, and engineering of interconnecting disparate code components to offer larger services in a reliable and scalable manner. The goal of this workshop is to facilitate an ongoing discussion, and advance the state of the art of interconnecting code. See the call for contributions for further information.",
        "Type": "Accepted Papers",
        "Key": "5d9f8df9-f5d9-4a56-9096-b644bcf0ae34",
        "Day": "2019-04-01",
        "Time": "16:00 - 17:30",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": "Research Papers: Language Design and Reactivity",
        "ChairsString": "Guido Salvaneschi",
        "Chairs": [
          "guidosalvaneschi"
        ],
        "Items": [
          "programming-2019-papers-distributed-reactive-programming-for-reactive-distributed-systems",
          "programming-2019-papers-event-loops-as-first-class-values-a-case-study-in-pedagogic-language-design",
          "programming-2019-papers-parasail-a-pointer-free-pervasively-parallel-language-for-irregular-computations"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "bb46cd70-2117-4e49-8dbb-372aaffae70a",
        "Day": "2019-04-04",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Research Papers: Modularity and Modeling",
        "ChairsString": "Walter Cazzola",
        "Chairs": [
          "waltercazzola"
        ],
        "Items": [
          "programming-2019-papers-separating-use-and-reuse-to-improve-both",
          "programming-2019-papers-clafer-lightweight-modeling-of-structure-behaviour-and-variability",
          "programming-2019-papers-shallow-edsls-and-object-oriented-programming-beyond-simple-compositionality"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "b7c8eb82-199f-49eb-a00d-db4be435236d",
        "Day": "2019-04-03",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Research Papers: Examining Programs",
        "Items": [
          "programming-2019-papers-applications-of-multi-view-learning-approaches-for-software-comprehension",
          "programming-2019-papers-entombed-an-archaeological-examination-of-an-atari-2600-game"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "92bb3188-5a6e-4762-b8fd-6730814e65e0",
        "Day": "2019-04-04",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Research Papers: Live Programming",
        "ChairsString": "Manuel Serrano",
        "Chairs": [
          "manuelserrano"
        ],
        "Items": [
          "programming-2019-papers-exploratory-and-live-programming-and-coding",
          "programming-2019-papers-babylonian-style-programming-design-and-implementation-of-an-integration-of-live-examples-into-general-purpose-source-code"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "bea46e67-231b-4a88-8316-d600a428a00f",
        "Day": "2019-04-03",
        "Time": "14:30 - 15:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Research Papers: Language Design, Types, and Monads",
        "ChairsString": "Philipp Haller",
        "Chairs": [
          "philipphaller"
        ],
        "Items": [
          "programming-2019-papers-comprehensive-multiparty-session-types",
          "programming-2019-papers-semantic-query-integration-with-reason",
          "programming-2019-papers-one-monad-to-prove-them-all"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "10e3e6b6-f0c0-4dd9-a4d4-24c1e852a96f",
        "Day": "2019-04-04",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "Research Papers: Tools",
        "ChairsString": "Stefan Marr",
        "Chairs": [
          "stefanmarr"
        ],
        "Items": [
          "programming-2019-papers-out-of-place-debugging-a-debugging-architecture-to-reduce-debugging-interference",
          "programming-2019-papers-concrete-syntax-with-black-box-parsers"
        ],
        "Abstract": "The International Conference on the Art, Science, and Engineering of Programming is a new conference focused on programming topics including the experience of programming. We have named it ‹Programming› for short. ‹Programming› 2019 is the third edition of the conference. ‹Programming› seeks for papers that advance knowledge of programming on any relevant topic, including programming practice and experience. \nIn order to present at ‹Programming› 2019, papers must be submitted to the first, second or third 2019 issue of that journal (timeline).",
        "Type": "Accepted Papers",
        "Key": "4adb7551-a918-4655-b7c1-0d5cc83ab487",
        "Day": "2019-04-03",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Keynote",
        "Items": [
          "els-2019-welcome-message",
          "els-2019-the-lisp-of-the-prophet-for-the-one-true-editor"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "57ded189-4063-4d46-9feb-89639940cdb2",
        "Day": "2019-04-01",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Racket",
        "Items": [
          "els-2019-racket-guest-talk"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "4f02ca44-d296-4667-866e-a6dc5d14921f",
        "Day": "2019-04-02",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Awards",
        "Items": [
          "programming-2019-organizational-awards",
          "programming-2019-organizational-src-awards"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "7d3b2790-3cc8-453b-bf25-b8543922f413",
        "Day": "2019-04-03",
        "Time": "12:30 - 12:40",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Ecosystem",
        "Items": [
          "els-2019-symbols-as-namespaces-in-common-lisp",
          "els-2019-parallelizing-quickref",
          "els-2019-lightning-talks-ii"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "68e8929f-168b-49ef-bf4f-a50bf0ee7799",
        "Day": "2019-04-02",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Registration",
        "Abstract": "",
        "Type": "Events",
        "Key": "786c08d9-d3dd-42e3-bf1e-d4a03da7e8bc",
        "Day": "2019-04-01",
        "Time": "08:30 - 17:00",
        "Location": "Hotel Bristol Palace | ​Registration (Lobby)"
      },
      {
        "Title": " : Steering Committee Meeting",
        "Items": [
          "programming-2019-organizational-steering-committee-meeting-not-public-"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "b881f777-8be3-4eb4-aad8-4007ec25ba6b",
        "Day": "2019-04-02",
        "Time": "18:00 - 22:00",
        "Location": "Hotel Bristol Palace | Verdi"
      },
      {
        "Title": " : ‹Programming› 2020 Announcement",
        "Items": [
          "programming-2019-organizational-programming-2020-announcement"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "09af0492-133b-4c9f-ac43-447bcb3c51a6",
        "Day": "2019-04-03",
        "Time": "17:00 - 17:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Emacs Lisp \u0026 Lisp Implementation",
        "Items": [
          "els-2019-pattern-based-s-expression-rewriting-in-emacs",
          "els-2019-implementing-baker-s-subtypep-decision-procedure",
          "els-2019-make-method-lambda-revisited"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "0d0deb3c-7de9-4b68-a4d3-8a4e09f02e9d",
        "Day": "2019-04-01",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Lisp in Action",
        "Items": [
          "els-2019-shader-pipeline-and-effect-encapsulation-using-clos",
          "els-2019-hierarchical-task-network-planning-in-common-lisp"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "21eb3c86-d658-481a-87df-1cb3aaf3c4fd",
        "Day": "2019-04-02",
        "Time": "11:00 - 12:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": "ELS 2019 - : Meta-Programming",
        "Items": [
          "els-2019-finite-automata-theory-based-optimization",
          "els-2019-lazy-parallel-multiple-value-reductions-in-common-lisp"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "f46e21b4-4dd8-4a36-ac83-1f17528cf27e",
        "Day": "2019-04-01",
        "Time": "14:00 - 15:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Registration",
        "Items": [
          "programming-2019-organizational-registration"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "ed77af53-3822-4dac-9d63-7e11cbc6f3c4",
        "Day": "2019-04-02",
        "Time": "08:30 - 17:00",
        "Location": "Hotel Bristol Palace | ​Registration (Lobby)"
      },
      {
        "Title": "ELS 2019 - : Code as Data",
        "Items": [
          "els-2019-working-with-first-order-proofs-and-provers",
          "els-2019-plagiarism-detection-for-common-lisp",
          "els-2019-lightning-talks-i"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "1446d0e4-44b8-4ece-8287-625b8726d247",
        "Day": "2019-04-01",
        "Time": "16:00 - 17:00",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Conference Opening",
        "Items": [
          "programming-2019-organizational-conferences-opening"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "08f74b5d-f7d9-4224-9a9a-86d94ee33119",
        "Day": "2019-04-03",
        "Time": "09:20 - 09:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Registration",
        "Items": [
          "programming-2019-organizational-registration"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "6ce2842c-67a9-4737-8ad6-718020454d37",
        "Day": "2019-04-03",
        "Time": "08:30 - 17:00",
        "Location": "Hotel Bristol Palace | ​Registration (Lobby)"
      },
      {
        "Title": "ELS 2019 - : Keynote",
        "Items": [
          "els-2019-20-more-years-of-bootstrapping",
          "els-2019-bootstrapping-common-lisp-using-common-lisp"
        ],
        "Abstract": "The purpose of the European Lisp Symposium is to provide a forum for the discussion and dissemination of all aspects of design, implementation and application of any of the Lisp and Lisp-inspired dialects, including Common Lisp, Scheme, Emacs Lisp, AutoLisp, ISLISP, Dylan, Clojure, ACL2, ECMAScript, Racket, SKILL, Hop and so on. We encourage everyone interested in Lisp to participate. \nExternal Website \nAdditional information about the 12th European Lisp Symposium, ELS 2019 can be found on: http://www.european-lisp-symposium.org/ \n",
        "Type": "Talks",
        "Key": "11b04610-13a6-496c-9ad0-403134e15111",
        "Day": "2019-04-02",
        "Time": "09:00 - 10:30",
        "Location": "Hotel Bristol Palace | Paganini"
      },
      {
        "Title": " : Registration",
        "Items": [
          "programming-2019-organizational-registration"
        ],
        "Abstract": "",
        "Type": "Events",
        "Key": "8c280c3d-1568-4780-82c2-3d1192f9a5a9",
        "Day": "2019-04-04",
        "Time": "08:30 - 17:00",
        "Location": "Hotel Bristol Palace | ​Registration (Lobby)"
      },
      {
        "Title": "Catering: Lunch",
        "Items": [
          "programming-2019-catering-lunch"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "70841097-5263-4f48-8da8-135b14823ec4",
        "Day": "2019-04-01",
        "Time": "12:30 - 14:00",
        "Location": "Hotel Bristol Palace | ​Lunch area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "db9252a7-8219-4a1d-b03d-55836f9c24b1",
        "Day": "2019-04-03",
        "Time": "10:30 - 11:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "4c658714-3ae0-464e-9532-ff4fd5d7ffd1",
        "Day": "2019-04-01",
        "Time": "15:30 - 16:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Lunch",
        "Items": [
          "programming-2019-catering-lunch"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "f3dc5937-50c4-48f8-a93b-b739fd7dae01",
        "Day": "2019-04-04",
        "Time": "12:30 - 14:00",
        "Location": "Hotel Bristol Palace | ​Lunch area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "9f031c09-7f24-44f0-8b7c-925bf7a97d63",
        "Day": "2019-04-04",
        "Time": "15:30 - 16:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "f00662c9-43ea-4981-80d9-df25d1ac5943",
        "Day": "2019-04-02",
        "Time": "10:30 - 11:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "1becf2ae-a5d1-46fe-84a9-6fd3665e718f",
        "Day": "2019-04-01",
        "Time": "10:30 - 11:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "1153347c-432e-4482-8a0c-b4557d45da51",
        "Day": "2019-04-02",
        "Time": "15:30 - 16:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Lunch",
        "Items": [
          "programming-2019-catering-lunch"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "04672fc5-f420-4646-919c-f676d84572ba",
        "Day": "2019-04-02",
        "Time": "12:30 - 14:00",
        "Location": "Hotel Bristol Palace | ​Lunch area"
      },
      {
        "Title": "Catering: Lunch",
        "Items": [
          "programming-2019-catering-lunch"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "43f6f166-c2b4-4e25-827b-36b31352c34f",
        "Day": "2019-04-03",
        "Time": "12:40 - 14:30",
        "Location": "Hotel Bristol Palace | ​Lunch area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "be21fe1e-9ede-4d38-a5a5-2661dd851bc7",
        "Day": "2019-04-03",
        "Time": "15:30 - 16:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      },
      {
        "Title": "Catering: Break",
        "Items": [
          "programming-2019-catering-break"
        ],
        "Abstract": "Lunch, Dinner, Coffee-breaks",
        "Type": "Accepted Papers",
        "Key": "fa9f1c56-4f9a-4877-aa15-e1f7f918cdad",
        "Day": "2019-04-04",
        "Time": "10:30 - 11:00",
        "Location": "Hotel Bristol Palace | ​Coffee break area"
      }
    ],
    "People": [
      {
        "Name": "Susan Eisenbach",
        "Affiliation": "Imperial College London",
        "Key": "susaneisenbach",
        "URL": "http://wp.doc.ic.ac.uk/susan/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/susaneisenbach/000bd12b-5ff6-4b19-a009-a21eee0e0f97/small.jpg"
      },
      {
        "Name": "Matthew Flatt",
        "Affiliation": "University of Utah",
        "Key": "matthewflatt",
        "Bio": "Matthew Flatt is a professor in the School of Computing at the University of Utah, where he works on extensible programming languages, runtime systems, and applications of functional programming. He is one of the developers of the Racket programming language. He received his PhD from Rice University in 1999.",
        "URL": "http://www.cs.utah.edu/~mflatt/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/matthewflatt/01508046-0bdb-4eb0-a674-27198f8debd6/small.jpg"
      },
      {
        "Name": "Ryan Culpepper",
        "Affiliation": "Czech Technical University",
        "Key": "ryanculpepper",
        "URL": "http://www.ccs.neu.edu/home/ryanc/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/ryanculpepper/01e29e70-7412-42ec-adfb-468b49207442/small.jpg"
      },
      {
        "Name": "Nolwenn Maudet",
        "Affiliation": "Tokyo Design Lab",
        "Key": "nolwennmaudet"
      },
      {
        "Name": "Konrad Aleksiejuk",
        "Affiliation": "",
        "Key": "konradaleksiejuk"
      },
      {
        "Name": "Oliviero Riganelli",
        "Affiliation": "",
        "Key": "olivieroriganelli"
      },
      {
        "Name": "Stefan Monnier",
        "Affiliation": "Université de Montréal",
        "Key": "stefanmonnier",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/stefanmonnier/040a71b9-2c4a-4889-a840-ab52cccb4ad8/small.jpg"
      },
      {
        "Name": "Friedrich Steimann",
        "Affiliation": "Fernuniversität",
        "Key": "friedrichsteimann",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/friedrichsteimann/048317b0-ab99-4e57-98c8-a3ae791ffd01/small.jpg"
      },
      {
        "Name": "Stephen Oney",
        "Affiliation": "University of Michigan",
        "Key": "stephenoney",
        "URL": "http://from.so",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/stephenoney/062ae839-c833-4001-9ed0-a15cbb267663/small.jpg"
      },
      {
        "Name": "Yu David Liu",
        "Affiliation": "State University of New York (SUNY) Binghamton",
        "Key": "yudavidliu",
        "Bio": "I am an Associate Professor at State University of New York (SUNY) at Binghamton. I am interested in programming languages, software engineering, and systems, with current focuses on energy-aware programming languages, data-intensive software, and type systems. I received my Ph.D. in Computer Science from the Johns Hopkins University, in 2007.",
        "URL": "http://www.cs.binghamton.edu/~davidl",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/yudavidliu/08e9ce3c-d337-47f7-9e32-6977e5caee44/small.jpg"
      },
      {
        "Name": "Andi Bejleri",
        "Affiliation": "IBM GBS, Frankfurt, Germany",
        "Key": "andibejleri",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andibejleri/0a980084-683e-4ad2-9fbd-32dbc3fc23a3/small.jpg"
      },
      {
        "Name": "Alfred Åkesson",
        "Affiliation": "Lund University, Sweden",
        "Key": "alfredakesson"
      },
      {
        "Name": "Eric Jul",
        "Affiliation": "University of Oslo, Norway",
        "Key": "ericjul1"
      },
      {
        "Name": "Dario Olianas",
        "Affiliation": "",
        "Key": "darioolianas1"
      },
      {
        "Name": "Parmit Chilana",
        "Affiliation": "Simon Fraser University",
        "Key": "parmitchilana",
        "URL": "http://hci.cs.sfu.ca",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/parmitchilana/0f4161ee-9be6-4972-9ef3-166a6bac3cae/small.jpg"
      },
      {
        "Name": "Lun Liu",
        "Affiliation": "University of California at Los Angeles, USA",
        "Key": "lunliu",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lunliu/0f88400e-3dc0-4988-b7bf-286ddffbfb94/small.jpg"
      },
      {
        "Name": "Christophe Scholliers",
        "Affiliation": "Universiteit Gent, Belgium",
        "Key": "christophescholliers",
        "URL": "http://soft.vub.ac.be/~cfscholl/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christophescholliers/10122c22-2eb7-4961-b37f-0a57dd504b4f/small.jpg"
      },
      {
        "Name": "Guillermo Polito",
        "Affiliation": "Univ. Lille, CNRS, Centrale Lille, Inria, UMR 9189 - CRIStAL - Centre de Recherche en Informatique Signal et Automatique de Lille",
        "Key": "guillermopolito",
        "Bio": "Guille Polito is research engineer at the CRIStAL laboratory in the university of Lille, working in tight relation with the RMoD team. Guille’s main research interests are programming language development, programming tools, modular systems, and maintenance of large software systems. \nHe currently works on techniques to develop modular systems and languages, and new development tools. Guille works in the development of the open source Pharo programming language and environment since 2010, and he is a member of its technical board since 2018.",
        "URL": "https://guillep.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/guillermopolito/10ce21c9-cba8-4cfa-b8fa-2f7b6736b0e8/small.jpg"
      },
      {
        "Name": "Manuel Serrano",
        "Affiliation": "Inria, France",
        "Key": "manuelserrano",
        "URL": "http://www-sop.inria.fr/members/Manuel.Serrano/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/manuelserrano/11822912-ac15-433d-bb39-9ca3ede0f19f/small.jpg"
      },
      {
        "Name": "Oleg Kiselyov",
        "Affiliation": "",
        "Key": "olegkiselyov",
        "URL": "http://okmij.org/ftp/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/olegkiselyov/11fa2e4f-77fa-4fa9-87ff-77df72522130/small.jpg"
      },
      {
        "Name": "Junao Wu",
        "Affiliation": "",
        "Key": "junaowu",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/junaowu/1266c709-1d56-4ddc-92e1-6b89e7916074/small.jpg"
      },
      {
        "Name": "Johan Fabry",
        "Affiliation": "Raincode Labs, Belgium",
        "Key": "johanfabry",
        "URL": "https://scholar.google.be/citations?hl\u003den\u0026user\u003dKw-9h4AAAAAJ",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/johanfabry/12bdb5f7-6c3b-49bd-a78e-f20ecfd2b70d/small.jpg"
      },
      {
        "Name": "Antranig Basman",
        "Affiliation": "",
        "Key": "antranigbasman1"
      },
      {
        "Name": "Waldemar Hummer",
        "Affiliation": "Vienna University of Technology",
        "Key": "waldemarhummer"
      },
      {
        "Name": "Pierre R. Mai",
        "Affiliation": "PMSF IT Consulting, Germany",
        "Key": "pierrermai",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/pierrermai/15c64664-b06c-41e4-b6e3-3413476e78b1/small.jpg"
      },
      {
        "Name": "Peter Sestoft",
        "Affiliation": "IT University of Copenhagen",
        "Key": "petersestoft",
        "URL": "http://www.itu.dk/people/sestoft/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/petersestoft/1aa24354-29f6-4786-b3b0-6a612725a911/small.jpg"
      },
      {
        "Name": "Robert Goldman",
        "Affiliation": "",
        "Key": "robertgoldman"
      },
      {
        "Name": "R. Matthew Emerson",
        "Affiliation": "",
        "Key": "rmatthewemerson"
      },
      {
        "Name": "Anders Møller",
        "Affiliation": "Aarhus University",
        "Key": "andersmoller",
        "Bio": "Professor at Department of Computer Science, Aarhus University, Denmark",
        "URL": "https://cs.au.dk/~amoeller/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andersmoller/1e49c618-df0a-4840-8cd7-a38c691c13ac/small.jpg"
      },
      {
        "Name": "António Menezes Leitão",
        "Affiliation": "Technical University of Lisbon, Portugal",
        "Key": "antoniomenezesleitao"
      },
      {
        "Name": "David Chisnall",
        "Affiliation": "University of Cambridge",
        "Key": "davidchisnall"
      },
      {
        "Name": "Benjamin Lerner",
        "Affiliation": "Northeastern University, United States",
        "Key": "benjaminlerner",
        "URL": "http://cs.brown.edu/~blerner/"
      },
      {
        "Name": "Luca Franceschini",
        "Affiliation": "DIBRIS, University of Genova, Italy",
        "Key": "lucafranceschini",
        "URL": "http://www.dibris.unige.it/en/franceschini-luca",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lucafranceschini/210e5300-f120-4689-b4b2-af7a0119f910/small.jpg"
      },
      {
        "Name": "Jim Newton",
        "Affiliation": "EPITA / LRDE  https://www.lrde.epita.fr",
        "Key": "jimnewton",
        "Bio": "PhD student at EPITA Research \u0026amp; Development Laboratory (LRDE)",
        "URL": "https://www.lrde.epita.fr/wiki/User:Jnewton",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jimnewton/2146f7ac-1d08-4f94-b46d-06ebd752db5d/small.jpg"
      },
      {
        "Name": "Arek Mikolajczak",
        "Affiliation": "",
        "Key": "arekmikolajczak"
      },
      {
        "Name": "Jun Kato",
        "Affiliation": "National Institute of Advanced Industrial Science and Technology, Japan",
        "Key": "junkato",
        "Bio": "Jun Kato is a Human-Computer Interaction researcher at National Institute of Advanced Industrial Science and Technology (AIST), Japan. He has focused on improving Programming Experience (PX) by creating toolkits and integrated development environments. He has worked for Microsoft and Adobe Research and received a Ph.D. from The University of Tokyo under the supervision of Prof. Takeo Igarashi in 2014.",
        "URL": "https://junkato.jp",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/junkato/23318ea2-e18f-490b-bcee-d4f11fb0de8e/small.jpg"
      },
      {
        "Name": "Amir Saeidi",
        "Affiliation": "Utrecht University, Netherlands",
        "Key": "amirsaeidi"
      },
      {
        "Name": "Slinger Jansen",
        "Affiliation": "Utrecht University, Netherlands",
        "Key": "slingerjansen"
      },
      {
        "Name": "Shriram Krishnamurthi",
        "Affiliation": "Brown University, United States",
        "Key": "shriramkrishnamurthi",
        "Bio": "I am the Vice President for Programming Languages at Brown University in Providence, RI, USA. I’m not, really, but that’s what it says on my business card. \nI believe tropical fruit are superior to all other kinds. I’d probably rather be out riding a bike up a mountain (slowly). I am terrified of success, because I may be forced to buy a suit. You can learn other things about me from my very serious Web site. \nI am also known to interrogate my audiences to ensure they’re paying attention. So, be alert. You can read email later.",
        "URL": "https://cs.brown.edu/~sk/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/shriramkrishnamurthi/25c30a61-cf71-42db-8e82-3b858b76f05f/small.jpg"
      },
      {
        "Name": "Alessandro Warth",
        "Affiliation": "Google",
        "Key": "alessandrowarth",
        "URL": "http://www.alexwarth.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/alessandrowarth/2626b1e0-d21a-41ba-aaa3-6f141db66445/small.jpg"
      },
      {
        "Name": "Konstantinos (Kostis) Sagonas",
        "Affiliation": "Uppsala University",
        "Key": "kostissagonas",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/kostissagonas/265d9063-728a-49a2-a47f-4326ad8c5b35/small.jpg"
      },
      {
        "Name": "Jennifer B. Sartor",
        "Affiliation": "Ghent University and Vrije Universiteit Brussel",
        "Key": "jennifersartor",
        "URL": "http://soft.vub.ac.be/~jsartor/index.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jennifersartor/26b5fc70-9255-481c-83cb-982298557318/small.jpg"
      },
      {
        "Name": "Jurriaan Hage",
        "Affiliation": "Utrecht University, Netherlands",
        "Key": "jurriaanhage",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jurriaanhage/27258157-2376-400c-94b4-85801a705011/small.jpg"
      },
      {
        "Name": "Giovanna Guerrini",
        "Affiliation": "",
        "Key": "giovannaguerrini"
      },
      {
        "Name": "Malte Viering",
        "Affiliation": "TU Darmstadt, Germany",
        "Key": "malteviering"
      },
      {
        "Name": "Isabella Mastroeni",
        "Affiliation": "University of Verona, Italy",
        "Key": "isabellamastroeni",
        "URL": "http://profs.scienze.univr.it/mastroeni/Welcome.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/isabellamastroeni/2982a71a-f61a-4eb5-913a-46f0f1a3d3cf/small.jpg"
      },
      {
        "Name": "Neil Smith",
        "Affiliation": "",
        "Key": "neilsmith"
      },
      {
        "Name": "Stefan Marr",
        "Affiliation": "University of Kent",
        "Key": "stefanmarr",
        "URL": "http://stefan-marr.de/research/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/stefanmarr/2a5ef656-3906-4fb1-9649-2e868f009e33/small.jpg"
      },
      {
        "Name": "Fabio Fioravanti",
        "Affiliation": "University of Chieti-Pescara",
        "Key": "fabiofioravanti",
        "URL": "https://www.sci.unich.it/~fioravan/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/fabiofioravanti/2b1cfbf2-9966-4c59-9590-3ef8a65fec4f/small.jpg"
      },
      {
        "Name": "Matteo Marra",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "matteomarra",
        "Bio": "I am a pre-doctoral researcher at the Vrije Universiteit Brussel (Belgium). After completing my bachelor studies in Italy (Università degli studi di Bologna), I moved to Brussels for a master at the Vrije Universiteit Brussel, in the Software Languages Lab, and decided to start a PhD under the guide of prof. Elisa Gonzalez Boix. I also cooperate with the RMoD research group at INRIA Lille Nord-Europe. \nMy research focuses on debugging concurrent and parallel applications, particularly Big Data (or data intensive) applications. In this edition of Programming, after having participated in the Student Research Competition last year, I will be presenting the work of my Master Thesis and of my first months as a PhD student. This works focus on out-of-place debugging, a debugging architecture for online live debugging of distributed applications.",
        "URL": "https://soft.vub.ac.be/~mmarra",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/matteomarra/71e5312b-940b-4349-afaf-fa0a934b2c49/small.jpg"
      },
      {
        "Name": "Leonardo Mariani",
        "Affiliation": "University of Milano Bicocca",
        "Key": "leonardomariani",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/leonardomariani/2cb204f1-8ead-4391-931d-d50f4fa90425/small.jpg"
      },
      {
        "Name": "Hidehiko Masuhara",
        "Affiliation": "Tokyo Institute of Technology",
        "Key": "hidehikomasuhara",
        "Bio": "Hidehiko Masuhara is a Professor of Mathematical and Computing Science, Tokyo Institute of Technology since April 2013. He received his B.S., M.S., and Ph.D. in Computer Science from Department of Information Science, University of Tokyo in 1992, 1994, and 1999, respectively, and served as an assistant professor, lecturer, and associate professor at Graphics and Computer Science, Graduate School of Arts and Sciences, University of Tokyo from 1995 until 2013.",
        "URL": "http://prg.is.titech.ac.jp/people/masuhara/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/hidehikomasuhara/2d8a5896-cf42-4ff8-a26c-1d74bc9ee1c9/small.jpg"
      },
      {
        "Name": "Marina Ribaudo",
        "Affiliation": "",
        "Key": "marinaribaudo1"
      },
      {
        "Name": "Sudipto Ghosh",
        "Affiliation": "Colorado State University, USA",
        "Key": "sudiptoghosh",
        "Bio": "Dr. Sudipto Ghosh is a Professor of Computer Science at Colorado State University. He received the Ph.D. degree in Computer Science from Purdue University in 2000. His research interests are in the areas of modeling and testing software in the object-oriented, aspect-oriented, and component-based paradigms. Specific topics include data warehouse testing, fault localization, model-based software development, mutation testing and higher order mutation, and regression test selection. \nDr. Ghosh is on the editorial boards of IEEE Transactions on Reliability, Software Quality Journal, Journal of Software Testing, Verification and Reliability, and Information and Software Technology. He was a general co-chair of the ACM/IEEE 12th International Conference on Model Driven Engineering Languages and Systems held in Denver in 2009, and the 16th Modularity Conference in Fort Collins in 2015. He was a program co-chair of the Third International Conference on Software Testing, Verification and Validation held in Paris in 2010, the Fourth International Conference on Dependable Systems and their Applications in Beijing in 2017, and the 29th IEEE International Symposium on Software Reliability Engineering in Memphis in 2018. He is a member of the ACM and a Senior Member of the IEEE.",
        "URL": "http://www.cs.colostate.edu/~ghosh/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/sudiptoghosh/2facb0fc-dad0-44fc-881c-8c6db6912804/small.jpg"
      },
      {
        "Name": "Mariana Marasoiu",
        "Affiliation": "University of Cambridge",
        "Key": "marianamarasoiu"
      },
      {
        "Name": "Elena Zucca",
        "Affiliation": "University of Genova",
        "Key": "elenazucca",
        "URL": "http://www.disi.unige.it/person/ZuccaE/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/elenazucca/311657d2-ddc1-48c3-8eb5-1c1df4256dd4/small.jpg"
      },
      {
        "Name": "Kofi Oduro",
        "Affiliation": "",
        "Key": "kofioduro"
      },
      {
        "Name": "Nicolas Neuß",
        "Affiliation": "",
        "Key": "nicolasneu"
      },
      {
        "Name": "Elisa Gonzalez Boix",
        "Affiliation": "Vrije Universiteit Brussel, Belgium",
        "Key": "elisagonzalezboix",
        "URL": "http://soft.vub.ac.be/~egonzale",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/elisagonzalezboix/33f9f7b2-fa5d-4169-aa4b-ba7f2d89a439/small.jpg"
      },
      {
        "Name": "Filippo Ricca",
        "Affiliation": "DIBRIS, University of Genova, Italy",
        "Key": "filipporicca"
      },
      {
        "Name": "Sam Malek",
        "Affiliation": "University of California, Irvine",
        "Key": "sammalek",
        "URL": "http://www.ics.uci.edu/~malek/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/sammalek/3560c3e9-5c91-4151-b862-5de08efcb0ad/small.jpg"
      },
      {
        "Name": "Luca Gelati",
        "Affiliation": "",
        "Key": "lucagelati"
      },
      {
        "Name": "Walter Cazzola",
        "Affiliation": " Università degli Studi di Milano",
        "Key": "waltercazzola",
        "Bio": "Walter Cazzola is currently an Associate Professor at the Department of Computer Science of the Università degli Studi di Milano, Italy and the Chair of the ADAPT laboratory. Previously, Cazzola was assistant professor at the same institution and researcher assistant at the Department of Informatics and Computer Science of the Università degli Studi di Genova. \nHe is the designer of the mChaRM framework, of the @Java/@AspectJ, [a]C#, Blueprint programming languages and he is currently involved in the designing and development of the Neverlang general purpose compiler generator. He is also actively involved in the software evolution and models@run-time research areas where he co-designed the JavAdaptor DSU, the ReverseЯ model extractor tool. He pioneered the language product line research area with the Neverlang+AiDE framework. \nHis research interests straddle from programming languages to software engineering and they include (but are not limited to) computational reflection, aspect-oriented software development, programming techniques and languages, software product lines and software evolution. He has written more than 100 technical papers. He served on the program committees or editorial boards of the most important conferences and journals about his research topics.",
        "URL": "http://cazzola.di.unimi.it/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/waltercazzola/3754217b-f877-4f84-a3cf-d16b2c389b8b/small.jpg"
      },
      {
        "Name": "Titus Barik",
        "Affiliation": "Microsoft",
        "Key": "titusbarik",
        "URL": "http://www.barik.net",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/titusbarik/37697539-76ea-45b3-8881-7601c7aac674/small.jpg"
      },
      {
        "Name": "Lars Bak",
        "Affiliation": "Toitware Aps",
        "Key": "larsbak",
        "Bio": "Lars Bak spent the last three decades designing and implementing object-oriented programming languages. His passion for this area started in 1986 when implementing a runtime system for BETA. Since then, Lars has left marks on several software systems: Self, Strongtalk, JVM HotSpot, JVM CLDC HI, OOVM Smalltalk, V8, and Dart, and lately Toit. In 2018, he received the Dahl-Nygaard prize for design and implementation of several object-oriented systems. Lars has a master’s degree in computer science at Aarhus University from 1988.",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/larsbak/3783232c-3e92-4863-aaa8-84c64bca22c1/small.jpg"
      },
      {
        "Name": "Oleks Shturmov",
        "Affiliation": "University of Oslo",
        "Key": "oleksshturmov",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/oleksshturmov/389358ab-3ae0-4ccc-868a-9a86ba3fb5c1/small.jpg"
      },
      {
        "Name": "Nicolás Cardozo",
        "Affiliation": "Universidad de los Andes",
        "Key": "nicolascardozo",
        "Bio": "I have been working on adaptive systems for the last couple of years. Currently I am approaching adaptive systems from programming language perspective, working on development (programming language design), verification (partial, and incremental techniques), and application (smart environments, CPS, and IoT) of these systems.",
        "URL": "https://profesores.virtual.uniandes.edu.co/ncardozo/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nicolascardozo/38b48224-9c4a-4730-a28c-f49dcfadd425/small.jpg"
      },
      {
        "Name": "Christos Dimoulas",
        "Affiliation": "Northwestern University",
        "Key": "christosdimoulas1",
        "URL": "https://users.eecs.northwestern.edu/~chrdimo/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christosdimoulas1/38be1990-2615-479b-884d-eb6647434d26/small.jpg"
      },
      {
        "Name": "Tim Molderez",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "timmolderez",
        "URL": "http://timmolderez.be/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/timmolderez/3a80d817-0d6e-49b8-a1ec-6cbad54b2523/small.jpg"
      },
      {
        "Name": "Görel Hedin",
        "Affiliation": "",
        "Key": "gorelhedin1",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/gorelhedin1/3b4252bf-8a8a-4be5-83b2-ee29a9a01b0d/small.jpg"
      },
      {
        "Name": "Manuel Leuenberger",
        "Affiliation": "",
        "Key": "manuelleuenberger"
      },
      {
        "Name": "Mattia Fazzini",
        "Affiliation": "Georgia Institute of Technology",
        "Key": "mattiafazzini",
        "Bio": "Mattia Fazzini is a Ph.D. student in the School of Computer Science at the Georgia Institute of Technology. His research interests are in the areas of software engineering, software testing, program analysis, and software security. During his Ph.D. studies, he worked as a research assistant at the National University of Singapore and as associate specialist at the University of California Berkeley.",
        "URL": "https://www.cc.gatech.edu/~mfazzini/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/mattiafazzini/3e77c2b0-50ef-4d26-8cd0-85e96c538fee/small.jpg"
      },
      {
        "Name": "Juan Pablo Galeotti",
        "Affiliation": "University of Buenos Aires",
        "Key": "juanpablogaleotti",
        "Bio": "I am a professor at University of Buenos Aires (UBA). I am also a researcher at CONICET and a member of LIA-INFINIS laboratory. \nMy main research interests are Automatic Test Generation, Specification Inference and Program Verification. I am also very fond of decision procedures such as SMT and SAT.",
        "URL": "http://lafhis.dc.uba.ar/en/~jgaleotti",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/juanpablogaleotti/3fa6ccf3-ebcc-457c-b35a-2996e92e7484/small.jpg"
      },
      {
        "Name": "Theo D\u0027Hondt",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "theodhondt",
        "URL": "http://soft.vub.ac.be/soft/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/theodhondt/3fd016c6-2cf8-47c9-b9b1-f633a0217ded/small.jpg"
      },
      {
        "Name": "Humberto Ayres Pereira",
        "Affiliation": "founder dashdash",
        "Key": "humbertoayrespereira"
      },
      {
        "Name": "Guido Münster",
        "Affiliation": "TH Köln",
        "Key": "guidomunster"
      },
      {
        "Name": "Geoff Hamilton",
        "Affiliation": "",
        "Key": "geoffhamilton"
      },
      {
        "Name": "Jan Christiansen",
        "Affiliation": "Flensburg University of Applied Sciences, Germany",
        "Key": "janchristiansen",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/janchristiansen/42ce6fdb-8fc8-47f3-bae5-2ee1db44c1d0/small.jpg"
      },
      {
        "Name": "Adam Welc",
        "Affiliation": "Uber Technologies",
        "Key": "adamwelc",
        "Bio": "Adam Welc currently works at Uber Technologies. Previously, he worked at Huawei, focusing on optimizing Java for execution in the cloud. Adam has also worked as a researcher at Intel, Adobe, and Oracle, developing new language implementations as well as novel approaches for concurrent programming. His research interests are in the area of programming languages implementation, design, and tooling, with specific interests in runtime systems, interpreters and compilers, as well as performance analysis and optimization. Adam holds a PhD in Computer Science from Purdue University.",
        "URL": "http://www.adamwelc.org/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/adamwelc/431a7087-5329-4f7d-b848-ae7c1abc8312/small.jpg"
      },
      {
        "Name": "João Pedro Dias",
        "Affiliation": "INESC TEC, Porto",
        "Key": "joaopedrodias",
        "Bio": "Currently working as a researcher. Graduated from the Integrated Masters in Informatics and Computing Engineering by Faculty of Engineering, University of Porto. Passionate about technology in general, with a special focus on security and privacy, web development, data mining \u0026amp; Internet of Things. Furthermore, an amateur photographer, football player, book lover and science addict.",
        "URL": "http://jpdias.me",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/joaopedrodias/43644e92-c7ef-47b0-90b3-5c0bb434b562/small.jpg"
      },
      {
        "Name": "Sacha Chua",
        "Affiliation": "Toronto, Canada",
        "Key": "sachachua"
      },
      {
        "Name": "Philipp Seifer",
        "Affiliation": "University of Koblenz-Landau, Germany",
        "Key": "philippseifer"
      },
      {
        "Name": "Toyomi Ishida",
        "Affiliation": "",
        "Key": "toyomiishida"
      },
      {
        "Name": "Alberto Riva",
        "Affiliation": "University of Florida, USA",
        "Key": "albertoriva",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/albertoriva/46ff7715-ba7f-4523-99a1-f0b03a469562/small.jpg"
      },
      {
        "Name": "Nuno Antunes",
        "Affiliation": "Universidade de Coimbra",
        "Key": "nunoantunes"
      },
      {
        "Name": "Florian Myter",
        "Affiliation": "Vrije Universiteit Brussel, Belgium",
        "Key": "florianmyter",
        "URL": "https://www.myter.be/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/florianmyter/4a03023a-f5e9-4574-bbc8-8522a1bba3c6/small.jpg"
      },
      {
        "Name": "Wolfgang De Meuter",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "wolfgangdemeuter",
        "URL": "https://soft.vub.ac.be/soft/users/wdmeuter"
      },
      {
        "Name": "Jane Cleland-Huang",
        "Affiliation": "University of Notre Dame",
        "Key": "janeclelandhuang",
        "URL": "http://sarec.nd.edu",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/janeclelandhuang/4daf8a17-5cda-4ef6-9ce3-1bf792f75ddb/small.jpg"
      },
      {
        "Name": "Cormac Flanagan",
        "Affiliation": "University of California, Santa Cruz",
        "Key": "cormacflanagan",
        "URL": "http://users.soe.ucsc.edu/~cormac/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/cormacflanagan/50816560-4137-452f-ad37-d1b188332bb2/small.jpg"
      },
      {
        "Name": "Luís Pina",
        "Affiliation": "George Mason University",
        "Key": "luispina",
        "URL": "http://www.luispina.me",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/luispina/50dffeb1-7bad-47a3-b923-d83955a47f90/small.jpg"
      },
      {
        "Name": "Paulius Juodisius",
        "Affiliation": "IT University of Copenhagen, Denmark",
        "Key": "pauliusjuodisius"
      },
      {
        "Name": "Hrshikesh Arora",
        "Affiliation": "Victoria University of Wellington, New Zealand",
        "Key": "hrshikesharora"
      },
      {
        "Name": "David H. Lorenz",
        "Affiliation": "Technion—Israel Institute of Technology",
        "Key": "davidhlorenz",
        "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion—Israel Institute of Technology. \nHis research interests include language-oriented software engineering and programming, particularly involving domain specific languages. He is a steering committee member and the former chair of the AOSA, a non-profit organization whose mission is to be the primary sponsor for the annual conferences: International Conference on Aspect-Oriented Software Development, International Conference on Modularity, and International Conference on the Art, Science, and Engineering of Programming. \nProf. Lorenz received his PhD in computer science from the Technion—Israel Institute of Technology. He’s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
        "URL": "http://www.cs.technion.ac.il/people/dhlorenz/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/davidhlorenz/51b20a4f-b753-4190-b608-7ac17d7f5dd8/small.jpg"
      },
      {
        "Name": "peter Showcross",
        "Affiliation": "",
        "Key": "petershowcross",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/petershowcross/51e01f95-7dd1-47f0-b1a3-92c915fad8e0/small.jpg"
      },
      {
        "Name": "Vincenzo Petito",
        "Affiliation": "",
        "Key": "vincenzopetito"
      },
      {
        "Name": "Walker Paul",
        "Affiliation": "",
        "Key": "walkerpaul"
      },
      {
        "Name": "Anthony Canino",
        "Affiliation": "SUNY Binghamton",
        "Key": "anthonycanino"
      },
      {
        "Name": "Antranig Basman",
        "Affiliation": "",
        "Key": "antranigbasman"
      },
      {
        "Name": "Eduard-Mihai Burtescu",
        "Affiliation": "Lyken Software Solutions",
        "Key": "eduardmihaiburtescu"
      },
      {
        "Name": "Nicolas Brousse",
        "Affiliation": "Adobe",
        "Key": "nicolasbrousse",
        "URL": "https://nicolas.brousse.info",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nicolasbrousse/574b7216-55b2-44b0-8487-294d74d11cef/small.jpg"
      },
      {
        "Name": "Damiano Distante",
        "Affiliation": "Sapienza University of Rome, Italy",
        "Key": "damianodistante"
      },
      {
        "Name": "Hoang Son Pham",
        "Affiliation": "UC Louvain",
        "Key": "hoangsonpham"
      },
      {
        "Name": "Alex Potanin",
        "Affiliation": "Victoria University of Wellington",
        "Key": "alexpotanin",
        "Bio": "I am a Senior Lecturer in the School of Engineering and Computer Science at Victoria University of Wellington, New Zealand. \nI am originally from Moscow, Russia with a background in Mathematics. I have completed my PhD in programming languages in 2006 and took up a job as a Lecturer in Software Engineering at Victoria University of Wellington. During my studies I took short breaks to work as a Visiting Researcher at Purdue University, and Software Engineer at two Wellington start-ups. I spent 2013 on sabbatical at Carnegie Mellon University in Pittsburgh, PA, USA.",
        "URL": "http://homepages.ecs.vuw.ac.nz/~alex/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/alexpotanin/5de80c3b-2f6e-4927-9b19-4abf6d8f5632/small.jpg"
      },
      {
        "Name": "Andrei Chiş",
        "Affiliation": "feenk, Switzerland",
        "Key": "andreichis",
        "Bio": "Andrei Chiș acts as a tool crafter at feenk building moldable tools and techniques for improving the way we develop, comprehend and evolve software. He is a co-author of the Glamorous Toolkit and a core contributor to both the Moose analysis platform and the Pharo programming language. Andrei holds a PhD from the University of Bern. In his PhD work he maintained that integrated development environments have to be moldable, that is, they have to be aware of the application under development and enable rapid customizations to new applications and tasks. To make this vision possible he proposed the Moldable Tools approach, applied it to obtain tools like the Moldable Debugger and Moldable Inspector, and showed how a moldable development environment can significantly improve the development productivity.",
        "URL": "http://www.andreichis.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andreichis/5e0b7fc6-196b-4fe8-8ef8-c8cdc5e5b945/small.jpg"
      },
      {
        "Name": "James Cheney",
        "Affiliation": "University of Edinburgh, UK",
        "Key": "jamescheney",
        "URL": "http://homepages.inf.ed.ac.uk/jcheney/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jamescheney/5e74b4e9-5bfc-416a-a070-f1fcc0adcb03/small.jpg"
      },
      {
        "Name": "Eric Jul",
        "Affiliation": "University of Oslo",
        "Key": "ericjul",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/ericjul/5ee0b244-72e9-48bb-843c-c1bcd6398f14/small.jpg"
      },
      {
        "Name": "Fabio Niephaus",
        "Affiliation": "Hasso Plattner Institute, University of Potsdam",
        "Key": "fabioniephaus",
        "URL": "https://fniephaus.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/fabioniephaus/605259f6-fe1a-4cac-a877-fea29b0313bf/small.jpg"
      },
      {
        "Name": "Mira Mezini",
        "Affiliation": "TU Darmstadt, Germany",
        "Key": "miramezini",
        "Bio": "I am a Professor of Computer Science at the Technical University of Darmstadt, Germany. \nMy research focuses on software development paradigms and tools. \nOn the paradigms side, I develop programming languages to enable the visions of “software as a service (SaaS)” and “software product-lines” by providing large-scale module concepts with built-in support for adaptability and extensibility. \nOn the tools side, I work on intelligent software-development environments that guide developers to increase the development productivity and the software quality. Such environment leverage web-based resources to automatically generate and recommend established programming rules and patterns; they also enable architects to explicitly specify such patterns to be enforced during development. \nI have (co)authored over 100 scientific publications in renowned publication venues in software engineering and programming languages. I regularly serve on steering committees, program committees, and editorial boards of top tier conferences and journals in software engineering and programming languages.",
        "URL": "http://www.stg.tu-darmstadt.de/staff/mira_mezini/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/miramezini/6163acd3-3f73-404d-8c8d-474a4a1f142e/small.jpg"
      },
      {
        "Name": "Walter Binder",
        "Affiliation": "University of Lugano, Switzerland",
        "Key": "walterbinder",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/walterbinder/62617e92-9089-4a02-8c37-20976e015b86/small.jpg"
      },
      {
        "Name": "Tomoki Ogushi",
        "Affiliation": "Tokyo Tech",
        "Key": "tomokiogushi"
      },
      {
        "Name": "Jeremy Gibbons",
        "Affiliation": "Department of Computer Science, University of Oxford",
        "Key": "jeremygibbons",
        "Bio": "I am Professor of Computing in the Department of Computer Science at the University of Oxford. I am currently Director of the Software Engineering Programme, which offers part-time professional Masters’ degrees in Software Engineering and in Software and Systems Security. I also lead the Algebra of Programming research group. I am Editor-in-Chief of the Journal of Functional Programming, Past Vice Chair of ACM SIGPLAN, Past Chair of IFIP WG2.1. Before taking up this post in 1999, I held lectureships at Oxford Brookes University and the University of Auckland, New Zealand.",
        "URL": "http://www.cs.ox.ac.uk/jeremy.gibbons/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jeremygibbons/641a9bd1-773b-4682-81ff-a2e1c91d6eb8/small.jpg"
      },
      {
        "Name": "Maura Cerioli",
        "Affiliation": "",
        "Key": "mauracerioli"
      },
      {
        "Name": "Guillaume Allais",
        "Affiliation": "University of Strathclyde",
        "Key": "guillaumeallais",
        "URL": "http://gallais.github.io"
      },
      {
        "Name": "Carl Friedrich Bolz-Tereick",
        "Affiliation": "",
        "Key": "carlfriedrichbolz",
        "URL": "http://cfbolz.de",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/carlfriedrichbolz/6839b3f1-04f5-4618-b3ff-f9fec071e94f/small.jpg"
      },
      {
        "Name": "Patrick Eugster",
        "Affiliation": "Universita della Svizzera Italiana, Switzerland",
        "Key": "patrickeugster",
        "Bio": "Professor Eugster’s research aims at proposing support for developing distributed systems. Particular topics of interest, in the context of distributed settings, include algorithms, middleware, and programming languages, abstractions, and methodologies. \nProfessor Eugster was educated in Switzerland, and has worked for both Swiss Federal Institutes of Technology in Lausanne (EPFL) and in Zurich (ETHZ), as well as for Sun Microsystems (now Oracle) prior to joining Purdue University. He has authored over 70 refereed articles, and is a member of ACM and IEEE. Among other awards for his research and teaching, Professor Eugster has received an NSF CAREER award (2007) and Experienced Researcher fellowship by the Alexander von Humboldt foundation (2011). He is also a participant of the 2011 DARPA Computer Science Study Panel.",
        "URL": "https://www.cs.purdue.edu/people/faculty/peugster/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/patrickeugster/68a395b6-42f2-43c8-b4e9-95a73404babe/small.jpg"
      },
      {
        "Name": "Edd Barrett",
        "Affiliation": "King\u0027s College London",
        "Key": "eddbarrett",
        "Bio": "Edd is a Research Associate at King’s College London where he works on Just-In-Time compilation techniques for dynamic languages. \nPrior to his current position, Edd studied for a PhD in static analysis of binary code from University of Kent in England.",
        "URL": "http://eddbarrett.co.uk/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/eddbarrett/6a196f25-c655-458e-99e1-949b0d562359/small.jpg"
      },
      {
        "Name": "Andrea Rosà",
        "Affiliation": "University of Lugano, Switzerland",
        "Key": "andrearosa",
        "URL": "http://www.inf.usi.ch/phd/rosaa",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andrearosa/6a45776e-3825-4951-a978-a7486eb96f1d/small.jpg"
      },
      {
        "Name": "Frank Piessens",
        "Affiliation": "KU Leuven",
        "Key": "frankpiessens"
      },
      {
        "Name": "Sorawee Porncharoenwase",
        "Affiliation": "Brown University, United States",
        "Key": "soraweeporncharoenwase"
      },
      {
        "Name": "Krzysztof Czarnecki",
        "Affiliation": "University of Waterloo, Canada",
        "Key": "krzysztofczarnecki",
        "URL": "http://swen.uwaterloo.ca/~kczarnec",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/krzysztofczarnecki/6da02c04-9984-4be7-b417-c517694b82e2/small.jpg"
      },
      {
        "Name": "Dario Di Nucci",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "dariodinucci",
        "Bio": "I am a research fellow at the Software Languages Lab of the Vrije Universiteit Brussel in Belgium. I received the PhD in Management and Information Technology from the University of Salerno in 2018 advised by Prof. Andrea De Lucia with a thesis entitled Methods and Tools for Focusing and Prioritizing the Testing Effort. My research interests are within the Software Engineering topic and include software maintenance and evolution, software testing, search based software engineering, green mining, mining software repositories, and empirical software engineering.",
        "URL": "http://dardin88.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/dariodinucci/6e954823-249a-484f-9dbf-e5462d7fa78e/small.jpg"
      },
      {
        "Name": "Christian Flach",
        "Affiliation": "Hasso Plattner Institute, University of Potsdam, Germany",
        "Key": "christianflach",
        "URL": "http://christianflach.de"
      },
      {
        "Name": "Bruno C. d. S. Oliveira",
        "Affiliation": "The University of Hong Kong, Hong Kong",
        "Key": "brunooliveira",
        "URL": "http://i.cs.hku.hk/~bruno/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/brunooliveira/6f7058b6-bdb5-4d5e-b158-e381c68b24e4/small.jpg"
      },
      {
        "Name": "Sandra Dylus",
        "Affiliation": "University of Kiel, Germany",
        "Key": "sandradylus",
        "Bio": "PhD student in PL",
        "URL": "https://www.ps.informatik.uni-kiel.de/de/team/m.sc.-sandra-dylus",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/sandradylus/70e78c54-e238-4767-815c-627faffb7722/small.jpg"
      },
      {
        "Name": "Danfeng Zhang",
        "Affiliation": "Pennsylvania State University",
        "Key": "danfengzhang",
        "URL": "http://www.cse.psu.edu/~dbz5017/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/danfengzhang/71cab022-9a29-448c-9676-6b1b141ae2fe/small.jpg"
      },
      {
        "Name": "Irène Anne Durand",
        "Affiliation": "",
        "Key": "ireneannedurand1"
      },
      {
        "Name": "Heather Miller",
        "Affiliation": "Carnegie Mellon University",
        "Key": "heathermiller",
        "URL": "http://heather.miller.am/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/heathermiller/7280d8c4-c0a5-4c7b-9f87-b0765afef51f/small.jpg"
      },
      {
        "Name": "Maurizio Leotta",
        "Affiliation": "DIBRIS, University of Genova, Italy",
        "Key": "maurizioleotta",
        "URL": "https://www.disi.unige.it/person/LeottaM/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/maurizioleotta/751aa66b-f971-4c54-8d62-fe821cee6a23/small.jpg"
      },
      {
        "Name": "Michael Greenberg",
        "Affiliation": "Pomona College",
        "Key": "michaelgreenberg",
        "URL": "http://www.cs.pomona.edu/~michael/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/michaelgreenberg/7562ab15-44cc-485b-9612-ab9f4410e94d/small.jpg"
      },
      {
        "Name": "Boris Magnusson",
        "Affiliation": "Lund University, Sweden",
        "Key": "borismagnusson"
      },
      {
        "Name": "Massimiliano Di Penta",
        "Affiliation": "University of Sannio",
        "Key": "massimilianodipenta",
        "URL": "http://www.ing.unisannio.it/mdipenta/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/massimilianodipenta/7653001f-9a9e-42df-9a2b-30837c6a8016/small.jpg"
      },
      {
        "Name": "Shoaib Akram",
        "Affiliation": "Ghent University",
        "Key": "shoaibakram",
        "Bio": "Shoaib Akram is a Ph.D. candidate at Ghent University in Belgium. He has an M.S. in Electrical and Computer Engineering from the University of Illinois at Urbana-Champaign and a B.S. in Electrical Engineering from the University of Engineering and Technology in Pakistan. His research focuses on the intersection of programming languages, system software, and computer architecture. His current research investigates software approaches to ease the adoption of emerging memory technologies. His recent research also explores the potential of language runtimes in abstracting the complexity of heterogeneous hardware.",
        "URL": "http://users.elis.ugent.be/~sakram/index.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/shoaibakram/76bd25af-954d-401c-bcab-4b8636b2146a/small.jpg"
      },
      {
        "Name": "Ademar Aguiar",
        "Affiliation": "FEUP, Universidade do Porto",
        "Key": "ademaraguiar",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/ademaraguiar/777b49d3-dad8-40c9-ba75-955cfd914562/small.jpg"
      },
      {
        "Name": "Eunsuk Kang",
        "Affiliation": "Carnegie Mellon University",
        "Key": "eunsukkang",
        "URL": "https://eskang.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/eunsukkang/778162c2-81f4-4cce-9ff1-b4671799f6b6/small.jpg"
      },
      {
        "Name": "Grigory Fedyukovich",
        "Affiliation": "Princeton University",
        "Key": "grigoryfedyukovich",
        "URL": "http://www.cs.princeton.edu/~grigoryf/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/grigoryfedyukovich/79c00843-2910-4d1e-a1c6-927d2904a2c9/small.jpg"
      },
      {
        "Name": "Denys Poshyvanyk",
        "Affiliation": "William and Mary",
        "Key": "denysposhyvanyk",
        "URL": "http://www.cs.wm.edu/~denys/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/denysposhyvanyk/79d9ef26-4d7f-4bca-8921-7001c45e52af/small.jpg"
      },
      {
        "Name": "Steven Tanimoto",
        "Affiliation": "University of Washington, Seattle",
        "Key": "steventanimoto",
        "URL": "http://www.cs.washington.edu/people/faculty/tanimoto/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/steventanimoto/7a5b668b-9f30-42d8-82a3-3fad0da89617/small.jpg"
      },
      {
        "Name": "Vadim Zaytsev",
        "Affiliation": "Raincode Labs, Belgium",
        "Key": "vadimzaytsev",
        "URL": "http://grammarware.net",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/vadimzaytsev/7b48ed09-5fc9-4cf2-a86c-5541e7909442/small.jpg"
      },
      {
        "Name": "Robert Strandh",
        "Affiliation": "",
        "Key": "robertstrandh"
      },
      {
        "Name": "Leonie Dreschler-Fischer",
        "Affiliation": "",
        "Key": "leoniedreschlerfischer"
      },
      {
        "Name": "Aditya Oak",
        "Affiliation": "Technische Universität Darmstadt",
        "Key": "adityaoak"
      },
      {
        "Name": "Vincenzo Arceri",
        "Affiliation": "University of Verona, Italy",
        "Key": "vincenzoarceri",
        "URL": "http://www.di.univr.it/?ent\u003dpersona\u0026id\u003d21851",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/vincenzoarceri/7fdb2f5c-2f8b-43a6-8454-5095fb757b26/small.jpg"
      },
      {
        "Name": "Crista Lopes",
        "Affiliation": "",
        "Key": "cristalopes",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/cristalopes/80c75788-6bbb-44fa-aba4-70a2150129f2/small.jpg"
      },
      {
        "Name": "Mario Linares-Vasquez",
        "Affiliation": "Universidad de los Andes",
        "Key": "mariolinaresvasquez",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/mariolinaresvasquez/822762d8-b145-4394-b68d-f98b553bf3c3/small.jpg"
      },
      {
        "Name": "Amal Ahmed",
        "Affiliation": "Northeastern University, USA",
        "Key": "amalahmed",
        "URL": "http://www.ccs.neu.edu/home/amal/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/amalahmed/82781685-172a-4fca-938b-93bb01ad0e3d/small.jpg"
      },
      {
        "Name": "Yu David Liu",
        "Affiliation": "",
        "Key": "yudavidliu1"
      },
      {
        "Name": "Weixin Zhang",
        "Affiliation": "The University of Hong Kong, Hong Kong",
        "Key": "weixinzhang",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/weixinzhang/834e51e7-8b3d-420a-b15f-cac14c55cd05/small.jpg"
      },
      {
        "Name": "Tara Copplestone",
        "Affiliation": "University of York, United Kingdom",
        "Key": "taracopplestone"
      },
      {
        "Name": "Nataliia Bielova",
        "Affiliation": "Inria",
        "Key": "nataliiabielova",
        "URL": "http://www-sop.inria.fr/members/Nataliia.Bielova/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nataliiabielova/84a029eb-2235-4e35-85c1-2a32e9a0066c/small.jpg"
      },
      {
        "Name": "Adam Świderski",
        "Affiliation": "",
        "Key": "adamswiderski"
      },
      {
        "Name": "Saba Alimadadi",
        "Affiliation": "Northeastern University",
        "Key": "sabaalimadadi",
        "URL": "http://ece.ubc.ca/~saba/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/sabaalimadadi/87e0dd75-4347-41c9-ad8f-0331bb7691fc/small.jpg"
      },
      {
        "Name": "Raghava Rao Mukkamala",
        "Affiliation": "Department of Technology, Kristiania University College, Norway",
        "Key": "raghavaraomukkamala"
      },
      {
        "Name": "Akio Oka",
        "Affiliation": "Tokyo Institute of Technology",
        "Key": "akiooka",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/akiooka/8a0feba1-479d-4f54-b14a-3c9ce6e3015a/small.jpg"
      },
      {
        "Name": "Perdita Stevens",
        "Affiliation": "University of Edinburgh",
        "Key": "perditastevens",
        "URL": "http://homepages.inf.ed.ac.uk/perdita/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/perditastevens/8a235d35-f36a-44be-98aa-cd61ea052217/small.jpg"
      },
      {
        "Name": "Davide Ancona",
        "Affiliation": "University of Genova",
        "Key": "davideancona",
        "Bio": "Davide Ancona (PhD in Computer Science, University of Pisa, 1998) is Associate Professor at the University of Genova. His main research interests include type systems, object-oriented programming, coinduction methods for programming languages, modules and components, software reuse and maintenance, multi-agent systems, and behavioral types. He is author of more than 70 publications. He is the secretary of the executive board of AITO, Association Internationale pour les Technologies Objets (since Jan 2013, previously Vice-President since Jan 2012), and member of the editorial board of the ACM/SIGAPP Applied Computing Review (ACR), Scientific Programming (Hindawi), and Open Computer Science. He has been guest editor of special issues of Science of Computer Programming and Journal of Object Technology. In 2009 he received, together with G. Lagorio, the best paper prize at ECOOP. He has participated to several national and European projects and has been PC member of several workshops and conferences: WOOD’04, Bytecode 2008, ESOP 2008, DLS 2009, 2010 and 2013, FOOL 2010, RP 2011 and 2012, ECOOP 2013 and 2014, POPL 2015 (ERC), OOPSLA 2016 (ERC), TASE 2016, FTfJP 2016. He has been involved in the organization of several scientific events: organizing chair of ECOOP 2009, program co-chair of FTfJP06 and of OOPS special track at SAC from 2004 through 2017, co-chair of CILC 2015 and VORTEX 2016.",
        "URL": "http://www.disi.unige.it/person/AnconaD/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/davideancona/8c1cbfe0-1078-4cfb-abd2-5e795363de13/small.jpg"
      },
      {
        "Name": "Henrique Cruz",
        "Affiliation": "product owner dashdash",
        "Key": "henriquecruz"
      },
      {
        "Name": "Andrzej Wąsowski",
        "Affiliation": "IT University of Copenhagen, Denmark",
        "Key": "andrzejwasowski",
        "Bio": "MSc Eng from Warsaw University of Technology (2000) PhD from IT University of Copenhagen (2005) \nInterested in developing repeatable software engineering methods, supported by innovative tools and technology, to solve domain specific problems (safety critical systems, industry automation, robotics, legacy systems, and personal data protection).",
        "URL": "http://www.itu.dk/people/wasowski",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andrzejwasowski/8ceed634-d39f-4c9c-89b4-fe07bfaf5a52/small.jpg"
      },
      {
        "Name": "Eva Krebs",
        "Affiliation": "",
        "Key": "evakrebs"
      },
      {
        "Name": "Giorgio Delzanno",
        "Affiliation": "DIBRIS, University of Genova",
        "Key": "giorgiodelzanno",
        "URL": "https://www.disi.unige.it/person/DelzannoG/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/giorgiodelzanno/8dc029e9-2232-482f-ba8e-bd0d748797b7/small.jpg"
      },
      {
        "Name": "Christoph Kirsch",
        "Affiliation": "University of Salzburg",
        "Key": "christophmkirsch",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christophmkirsch/8dc5a1d6-4120-4648-95b5-50674ac6143e/small.jpg"
      },
      {
        "Name": "Mattias Nordahl",
        "Affiliation": "Lund University",
        "Key": "mattiasnordahl"
      },
      {
        "Name": "Ján Juhár",
        "Affiliation": "",
        "Key": "janjuhar",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/janjuhar/8eac8566-c64c-4737-bf28-629dfa935338/small.jpg"
      },
      {
        "Name": "Tim Felgentreff",
        "Affiliation": "Oracle Labs, Potsdam",
        "Key": "timfelgentreff",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/timfelgentreff/8eba0291-6ebd-4680-b4fd-af5b01b7ef37/small.jpg"
      },
      {
        "Name": "Steven Krouse",
        "Affiliation": "",
        "Key": "stevenkrouse"
      },
      {
        "Name": "Kim Mens",
        "Affiliation": "Université Catholique de Louvain, Belgium",
        "Key": "kimmens",
        "Bio": "Kim Mens is full Professor in Computer Science at UCL university in Belgium, where he leads the RELEASeD research laboratory on software evolution and software development technology. He holds the degrees of Licentiate in Mathematics, Licentiate in Computer Science, and PhD in Computer Science. His main research interests include software development, software maintenance, software evolution and context-oriented programming with a particular emphasis on programming languages and tool support.",
        "URL": "http://www.uclouvain.be/kim.mens",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/kimmens/905a02fe-af28-474d-92b1-06853f8642ca/small.jpg"
      },
      {
        "Name": "Luke Church",
        "Affiliation": "",
        "Key": "lukechurch",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lukechurch/92a84a14-4290-4ced-814e-40929dcf265e/small.jpg"
      },
      {
        "Name": "Gorel Hedin",
        "Affiliation": "Lund University",
        "Key": "gorelhedin",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/gorelhedin/939cca22-4fc7-408f-a39a-56e28c9b3c5e/small.jpg"
      },
      {
        "Name": "Luca Guglielmo",
        "Affiliation": "",
        "Key": "lucaguglielmo"
      },
      {
        "Name": "Marco Servetto",
        "Affiliation": "Victoria University Wellington, New Zealand",
        "Key": "marcoservetto",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/marcoservetto/968c0f9a-7231-4853-b86c-18cf3f8fa968/small.jpg"
      },
      {
        "Name": "Alessio Stalla",
        "Affiliation": "",
        "Key": "alessiostalla"
      },
      {
        "Name": "Atrisha Sarkar",
        "Affiliation": "University of Waterloo, Canada",
        "Key": "atrishasarkar"
      },
      {
        "Name": "Philipp Marek",
        "Affiliation": "Austria",
        "Key": "philippmarek"
      },
      {
        "Name": "Lidia Fuentes",
        "Affiliation": "Universidad de Málaga, Spain",
        "Key": "lidiafuentes",
        "Bio": "Prof. Lidia Fuentes received her MSc degree in Computer Science from the University of Málaga (Spain) in 1992 and her PhD in Computer Science in 1998 from the same University. She is Full Professor at the Department of Lenguajes y Ciencias de la Computación of the University of Málaga and she is the head of the CAOSD research group.",
        "URL": "http://www.lcc.uma.es/~lff/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lidiafuentes/98ed9242-3bfa-4d92-a2c2-7ba9bc61d59f/small.jpg"
      },
      {
        "Name": "Anya Helene Bagge",
        "Affiliation": "University of Bergen",
        "Key": "anyahelenebagge",
        "URL": "http://www.ii.uib.no/~anya/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/anyahelenebagge/9967da96-e6e7-4f9d-bb92-52b09e93e156/small.jpg"
      },
      {
        "Name": "Andrey Rybalchenko",
        "Affiliation": "Microsoft Research",
        "Key": "andreyrybalchenko",
        "URL": "http://research.microsoft.com/en-us/people/rybal/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andreyrybalchenko/99d39123-7e7e-4f99-ba16-832e8f1a7076/small.jpg"
      },
      {
        "Name": "Eelco Visser",
        "Affiliation": "Delft University of Technology",
        "Key": "eelcovisser",
        "Bio": "Eelco Visser is Antoni van Leeuwenhoek Professor of Computer Science at Delft University of Technology. He received a master’s and doctorate in computer science from the University of Amsterdam in 1993 and 1997, respectively. Previously he served as postdoc at the Oregon Graduate Institute, as Assistant Professor at Utrecht University, and as Associate Professor at TU Delft. \nHis research interests include programming languages, software language engineering, domain-specific programming languages, program transformation, syntax definition, and parsing. With his students he has designed and implemented the Spoofax language workbench, as well as many domain-specific languages, including DSLs for syntax definition (SDF2, SDF3), program transformation (Stratego), static semantics (NaBL, Statix), dynamic semantics (DynSem), software deployment (Nix), web application development (WebDSL), and mobile phone applications (mobl). In the language designer’s workbench project he is pursuing high-level declarative language definition that serves for language implementation and verification.",
        "URL": "http://eelcovisser.org",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/eelcovisser/99fed9ec-99e2-47b3-9c27-42e3da1353ff/small.jpg"
      },
      {
        "Name": "Philip Tchernavskij",
        "Affiliation": "Ex Situ | Université Paris-Sud",
        "Key": "philiptchernavskij",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/philiptchernavskij/9b4585d1-fbd4-40fd-ade9-0358b6e980aa/small.jpg"
      },
      {
        "Name": "Tamara Rezk",
        "Affiliation": "Inria",
        "Key": "tamararezk",
        "URL": "http://www-sop.inria.fr/members/Tamara.Rezk/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tamararezk/9b7d62d0-cfcb-47b8-8323-c33135f09b05/small.jpg"
      },
      {
        "Name": "François-René Rideau",
        "Affiliation": "LegiCash",
        "Key": "francoisrenerideau1",
        "Bio": "I will study your problem domain and distill its essence in a domain-specific language; around this language I can then design, implement and evolve radically simple solutions that are robust and maintainable, secure and efficient. I enjoy getting my hands dirty, but first I want to understand where we are going. I will pick the low-hanging fruits first, but as part of a plan to pick all marginally affordable fruits. I will use sound theory to achieve massive practical gains — and avoid predictable pitfalls. Many development teams have a narrow horizon that leads them to code bloat and bad quality, with diminishing returns and accumulated technical debt. Our team will keep a broad horizon to maintain a sustainable development environment. Many teams are blinded by focus on hardware devices and software artefacts and end up sacrificing the ends to the means; our team will include user experience and developer experience in our designs, and optimize the interactions that matter.",
        "URL": "http://fare.tunes.org",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/francoisrenerideau1/9bcdc1e2-6df8-4288-be77-6c747af8ff41/small.jpg"
      },
      {
        "Name": "Mehdi Bagherzadeh",
        "Affiliation": "Oakland University",
        "Key": "mehdibagherzadeh",
        "URL": "https://mbagherz.bitbucket.io/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/mehdibagherzadeh/9d386397-8214-48c1-a728-14edc462b3cd/small.jpg"
      },
      {
        "Name": "Rodin Aarssen",
        "Affiliation": "CWI, Netherlands",
        "Key": "rodinaarssen",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/rodinaarssen/9ddf3cd8-d879-4a0d-a30a-a40430632daf/small.jpg"
      },
      {
        "Name": "Andrei Nemytykh",
        "Affiliation": "Program Systems Institute of RAS, Russia",
        "Key": "andreinemytykh"
      },
      {
        "Name": "Roberto Giacobazzi",
        "Affiliation": "University of Verona and IMDEA Software Institute",
        "Key": "robertogiacobazzi",
        "Bio": "Roberto Giacobazzi received the Laurea degree in Computer Science in 1988 from the University of Pisa, and in 1993 he received the Ph.D. in Computer Science from the same university, with a Ph.D. thesis on Semantic aspects of logic program analysis, under the supervision of Prof. Giorgio Levi. From 1993 to 1995 he had a Post Doctoral Research position at Laboratoire d’Informatique (LIX), Ecole Polytechnique (Paris) in the equipe Cousot. From 1995 to 1998 he was (tenured) Assistant Professor in Computer Science at the University of Pisa. From May 2000 until now he is Full Professor in Computer Science at the University of Verona. The research interests of Roberto Giacobazzi include abstract interpretation, static program analysis, semantics of programming languages, program verification, abstract model-checking, program transformation and optimization, digital asset protection, code obfuscation, malware detection, software watermarking, computability and lattice theory. He has been Program Chair of SAS, VMCAI, of workshops in programming languages and language based security, and General Chair of ACM POPL2013. From 2006 to 2012 he has been Dean of the College of Science of the University of Verona. He works at the University of Verona and at IMDEA Software Institute.",
        "URL": "http://profs.sci.univr.it/~giaco/index.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/robertogiacobazzi/9ec39ec0-f825-404e-9491-712925e643f2/small.jpg"
      },
      {
        "Name": "Kerstin Eder",
        "Affiliation": "University of Bristol",
        "Key": "kerstineder"
      },
      {
        "Name": "Francesco Rossini",
        "Affiliation": "University of Turin, Italy",
        "Key": "francescorossini",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/francescorossini/a08d9367-dbe3-4a19-98de-401405e0f765/small.jpg"
      },
      {
        "Name": "Robert Hirschfeld",
        "Affiliation": "Hasso-Plattner-Institut (HPI), Germany",
        "Key": "roberthirschfeld",
        "Bio": "Robert Hirschfeld is a Professor of Computer Science at the Hasso Plattner Institute at the University of Potsdam, Germany. There he founded and leads the Software Architecture Group which is concerned with fundamental elements and structures of software. Methods and tools are developed for improving the comprehension and design of complex and interesting systems. \nRobert is interested in programming experiences and small system kernels. With his group he is working on dynamic programming languages, development tools, and runtime environments to make interactive programming more approachable. His preferred environment for exploring ideas is Squeak/Smalltalk. \nHe served as a visiting professor at the Tokyo Institute of Technology (東京工業大学) and The University of Tokyo (東京大学), Japan. \nRobert was a senior researcher with DoCoMo Euro-Labs, the European research facility of NTT DoCoMo Japan, where he worked on infrastructure components for next generation mobile communication systems with a focus on dynamic service adaptation and context-oriented programming. \nPrior to joining DoCoMo Euro-Labs, he was a principal engineer at Windward Solutions in Sunnyvale, California, where he designed and implemented distributed object systems, consulted in the area of object database technologies, and developed innovative software products and applications. \nRobert received a Ph.D. in Computer Science from the Ilmenau University of Technology, Germany.",
        "URL": "http://www.hirschfeld.org/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/roberthirschfeld/a396b84f-4ff2-4b72-ae7d-6da057fa8ea8/small.jpg"
      },
      {
        "Name": "Tomoyuki Aotani",
        "Affiliation": "Tokyo Institute of Technology",
        "Key": "tomoyukiaotani",
        "URL": "https://taotani.wordpress.com/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tomoyukiaotani/a3fc4be1-f98a-4e13-a5e5-c22cf501bafc/small.jpg"
      },
      {
        "Name": "Guilherme Ottoni",
        "Affiliation": "Facebook",
        "Key": "guilhermeottoni",
        "URL": "http://www.cs.princeton.edu/~ottoni",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/guilhermeottoni/a4d91a1a-edda-4faa-8e40-d3b1c12c925d/small.jpg"
      },
      {
        "Name": "Ravi Chugh",
        "Affiliation": "University of Chicago",
        "Key": "ravichugh",
        "Bio": "I am an Assistant Professor at the University of Chicago. I enjoy developing and deploying programming language technology — type systems, synthesis algorithms, and other program analysis techniques — for applications in software engineering and human-computer interaction.",
        "URL": "http://people.cs.uchicago.edu/~rchugh",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/ravichugh/a4f127d7-6432-4f1f-8884-b94f9d92b7c9/small.jpg"
      },
      {
        "Name": "Oleks Shturmov",
        "Affiliation": "University of Oslo",
        "Key": "oleks",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/oleks/a7702e36-b827-40d5-bf08-1daaf35b778f/small.jpg"
      },
      {
        "Name": "Elton Domnori",
        "Affiliation": "Canadian Institute of Technology, Tirana, Albania",
        "Key": "eltondomnori",
        "URL": "https://sites.google.com/site/eltondomnori/"
      },
      {
        "Name": "Michael Perscheid",
        "Affiliation": "SAP Innovation Center Potsdam",
        "Key": "michaelperscheid",
        "Bio": "I’m a researcher and development manager with the SAP Innovation Center Network and its Chairman Projects team. Before joining SAP in 2014, I was a postdoctoral researcher and Ph.D. student in computer science with the Software Architecture Group, led by Prof. Dr. Robert Hirschfeld, at the Hasso-Plattner-Institute (University of Potsdam). \nMy main research focuses on software engineering, maintenance, and reverse engineering. In particular, I’m interested in debugging, dynamic analysis, and program comprehension. My projects are primarily implemented in JavaScript, Smalltalk for the Squeak development environment, and Python.",
        "URL": "http://www.michaelperscheid.de",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/michaelperscheid/a7df8b8c-7237-48c9-b93b-6481a1e4e2e7/small.jpg"
      },
      {
        "Name": "John P. Gallagher",
        "Affiliation": "Roskilde University",
        "Key": "johnpgallagher"
      },
      {
        "Name": "Björn Johnsson",
        "Affiliation": "Lund University",
        "Key": "bjornjohnsson",
        "Bio": "Björn Johnsson obtained both his MSc and PhD in Computer Science from Lunds University in 2011 and 2017 respectively. He is currently working part-time as a researcher at the Department of Computer Science at the same university. His research interests include Pervasive Systems and Internet of Things with applications in the domain of e-health; methods and practices for development of systems for professional use, including agile and iterative methods, with focus on applications for mobile devices; technologies and tools that speed up and simplify the engineering of applications, targeted but not limited to include application end-users.",
        "URL": "http://cs.lth.se/bjorn-a-johnsson/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/bjornjohnsson/aa07eb34-0b58-461c-a511-cb895ba43821/small.jpg"
      },
      {
        "Name": "Breanndán Ó Nualláin",
        "Affiliation": "University of Amsterdam",
        "Key": "breanndanonuallain",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/breanndanonuallain/abb3f21e-232f-4520-9ff2-6f2533bb13be/small.jpg"
      },
      {
        "Name": "Ian Piumarta",
        "Affiliation": "Viewpoints Research Institute",
        "Key": "ianpiumarta"
      },
      {
        "Name": "Steffen Zschaler",
        "Affiliation": "King\u0027s College London",
        "Key": "steffenzschaler",
        "URL": "http://www.steffen-zschaler.de/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/steffenzschaler/aee3def7-c3b0-4a5b-ab95-b0453b8b7067/small.jpg"
      },
      {
        "Name": "Finn Teegen",
        "Affiliation": "University of Kiel, Germany",
        "Key": "finnteegen",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/finnteegen/b066bf67-31e4-42e8-b4a9-8c6883336a16/small.jpg"
      },
      {
        "Name": "Marco Heisig",
        "Affiliation": "",
        "Key": "marcoheisig"
      },
      {
        "Name": "Andrea Stocco",
        "Affiliation": "Università della Svizzera italiana (USI)",
        "Key": "andreastocco",
        "Bio": "My research mainly targets web testing and empirical software engineering. My current interests involve test breakages prediction and automatic repair using computer vision techniques. Over the years, I focused on solving problems related to different aspects of regression testing, such as test suite minimization, or improving the robustness and maintainability of test suites for web applications.",
        "URL": "https://www.ece.ubc.ca/~astocco/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andreastocco/b0b586ae-cd29-439a-a219-797e54e6c645/small.jpg"
      },
      {
        "Name": "Patrick Rein",
        "Affiliation": "Hasso Plattner Institute, Germany",
        "Key": "patrickrein",
        "URL": "https://www.patrickrein.de",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/patrickrein/b1bd727d-2604-4915-be91-ea2cf8f235fd/small.jpg"
      },
      {
        "Name": "Martin Leinberger",
        "Affiliation": "University of Koblenz-Landau, Germany",
        "Key": "martinleinberger"
      },
      {
        "Name": "Ana Milanova",
        "Affiliation": "Rensselaer Polytechnic Institute",
        "Key": "anamilanova",
        "URL": "http://www.cs.rpi.edu/~milanova/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/anamilanova/b3593bab-e97f-481d-aa4d-1e11879ff549/small.jpg"
      },
      {
        "Name": "Gabriele Bavota",
        "Affiliation": "Università della Svizzera italiana (USI)",
        "Key": "gabrielebavota",
        "URL": "http://www.inf.usi.ch/faculty/bavota/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/gabrielebavota/b3a49642-182a-47e8-8585-8a752a8ea104/small.jpg"
      },
      {
        "Name": "Christoph Bockisch",
        "Affiliation": "Philipps-Universität Marburg",
        "Key": "christophbockisch",
        "URL": "http://www.uni-marburg.de/fb12/arbeitsgruppen/psw/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christophbockisch/b4f8450a-bd23-4b57-9831-88063a93efc0/small.jpg"
      },
      {
        "Name": "Francesco Dagnino",
        "Affiliation": "DIBRIS, University of Genova, Italy",
        "Key": "francescodagnino",
        "URL": "https://www.dibris.unige.it/en/dagnino-francesco"
      },
      {
        "Name": "Ravi Khadka",
        "Affiliation": "Utrecht University, Netherlands",
        "Key": "ravikhadka"
      },
      {
        "Name": "Manuel Rigger",
        "Affiliation": "ETH Zurich",
        "Key": "manuelrigger",
        "Bio": "I am a postdoctoral researcher interested mainly in the secure execution of programs written in low-level languages such as C. I work on source-level and binary-level bug-finding and bug-mitigation approaches, low-level software security in general, the efficient implementation of programming languages, and the mining of software repositories to uncover knowledge related to these topics.",
        "URL": "http://www.manuelrigger.at/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/manuelrigger/b907d0d9-173c-47dd-94f3-feae908144e6/small.jpg"
      },
      {
        "Name": "Jonathan Edwards",
        "Affiliation": "",
        "Key": "jonathanedwards",
        "URL": "http://alarmingdevelopment.org/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jonathanedwards/bad18f41-41fa-474c-a817-731ceda218cb/small.jpg"
      },
      {
        "Name": "Tucker Taft",
        "Affiliation": "AdaCore, United States",
        "Key": "tuckertaft",
        "Bio": " \n Harvard College 1971-1975, AB Summa Cum Laude Chemistry \n Harvard Radcliffe Student Computing Center 1975-1979, Systems Programmer \n Intermetrics/AverStar/AverCom 1980-2002, Chief Scientist \n SofCheck 2002-2011, Founder and CTO \n AdaCore 2011-present, VP, Director of Language Research, Model-Based Toolset Product Architect \n",
        "URL": "http://www.adacore.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tuckertaft/bc51331e-8fbe-4e60-8d19-b6da2ea2bff5/small.jpg"
      },
      {
        "Name": "Steffen Staab",
        "Affiliation": "University of Koblenz-Landau and University of Southampton, Germany",
        "Key": "steffenstaab",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/steffenstaab/bcb20097-30c8-44bd-8a6b-b1b62583edd1/small.jpg"
      },
      {
        "Name": "Jason Lecerf",
        "Affiliation": "CEA LIST, France",
        "Key": "jasonlecerf"
      },
      {
        "Name": "Alexei Lisitsa",
        "Affiliation": "University of Liverpool ",
        "Key": "alexeilisitsa",
        "URL": "http://www.csc.liv.ac.uk/~alexei"
      },
      {
        "Name": "André Restivo",
        "Affiliation": "LIACC, Universidade do Porto, Porto, Portugal",
        "Key": "andrerestivo",
        "URL": "https://www.fe.up.pt/~arestivo/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/andrerestivo/be9b5e1e-0ea6-4641-83fd-e11d78a087f4/small.jpg"
      },
      {
        "Name": "Christos Dimoulas",
        "Affiliation": "Harvard University, USA",
        "Key": "christosdimoulas",
        "URL": "http://people.seas.harvard.edu/~chrdimo/"
      },
      {
        "Name": "John Aycock",
        "Affiliation": "University of Calgary, Canada",
        "Key": "johnaycock"
      },
      {
        "Name": "Michael Raskin",
        "Affiliation": "Université de Bordeaux / LaBRI",
        "Key": "michaelraskin",
        "URL": "http://mccme.ru/~raskin"
      },
      {
        "Name": "Eduardo Rosales",
        "Affiliation": "University of Lugano, Switzerland",
        "Key": "eduardorosales"
      },
      {
        "Name": "Patrick Krusenotto",
        "Affiliation": "Deutsche Welle, Germany",
        "Key": "patrickkrusenotto"
      },
      {
        "Name": "Johannes Westlund",
        "Affiliation": "Tokyo Institute of Technology, Japan / KTH Royal Institute of Technology, Sweden",
        "Key": "johanneswestlund"
      },
      {
        "Name": "Didier Verna",
        "Affiliation": "EPITA / LRDE",
        "Key": "didierverna",
        "Bio": "Dr. Didier Verna has a Ph.D. in Computer Science and is currently working as an assistant professor for EPITA, a private Computer Science university located in Paris. He gives or has given lectures on Operating Systems, Computer Graphics, Object-Oriented, Functional Programming and Typesetting. His main research interests are multi-paradigm approaches to genericity and performance. \nDidier Verna is the president of the European Lisp Symposium steering committee and serves as a program committee member in various conferences (International Lisp Conference, European Lisp Symposium, Dynamic Languages Symposium, ACM Symposium on Applied Computing, Context-Oriented Programming workshop etc. ). \nDidier Verna is also quite involved in free software: he was one of the core maintainers of XEmacs for more than 15 years, a contributor to Gnus and BBDB, and an occasional contributor to other Free Software projects (the GNU Autotools most notably; he was one of the technical reviewers for the “Goat Book”). He is the author of several LaTeX packages and Common Lisp libraries. \nAll of this is in fact half-true: two days a week, Didier Verna drops his scientific hat and wears the semi-professional Jazz musician one instead. He also is a certified Aikido teacher, and gives coaching sessions on the theme “Aikido and Conflict Management” for large companies.",
        "URL": "https://www.lrde.epita.fr/~didier",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/didierverna/c6b4b704-a5ef-4117-9b04-b82d8c07147d/small.jpg"
      },
      {
        "Name": "Ralf Lämmel",
        "Affiliation": "University of Koblenz-Landau, Germany",
        "Key": "ralflammel",
        "URL": "http://softlang.wikidot.com/rlaemmel:home",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/ralflammel/c942fcfb-e0cc-45d0-b10d-3b5ad1629c6a/small.jpg"
      },
      {
        "Name": "Roly Perera",
        "Affiliation": "Alan Turing Institute",
        "Key": "rolyperera",
        "URL": "http://www.dcs.gla.ac.uk/~roly/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/rolyperera/c9b0f0e4-4940-4f19-8529-1a80214ca04d/small.jpg"
      },
      {
        "Name": "Joshua Sunshine",
        "Affiliation": "Carnegie Mellon University",
        "Key": "joshuasunshine",
        "URL": "http://www.cs.cmu.edu/~jssunshi/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/joshuasunshine/ca14b6fd-c83a-4fc7-beea-d11c3c04bfc8/small.jpg"
      },
      {
        "Name": "Nicolas B. Pierron",
        "Affiliation": "Mozilla",
        "Key": "nicolasbpierron",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nicolasbpierron/cac07a99-ccf8-4607-b9e7-4f510ea0c271/small.jpg"
      },
      {
        "Name": "Cesare Pautasso",
        "Affiliation": "Software Institute, Faculty of Informatics, USI Lugano",
        "Key": "cesarepautasso",
        "Bio": "http://www.pautasso.info/ \nFollow him on: https://scholar.social/@pautasso",
        "URL": "http://www.pautasso.info",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/cesarepautasso/cb269376-c319-40f4-8a25-e7cfda146d63/small.jpg"
      },
      {
        "Name": "Andy Wingo",
        "Affiliation": "Igalia, S.L.",
        "Key": "andywingo"
      },
      {
        "Name": "Vyacheslav Egorov",
        "Affiliation": "Google",
        "Key": "vyacheslavegorov",
        "URL": "https://mrale.ph",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/vyacheslavegorov/ccd79e55-ee39-4560-9d72-a2fe52ad76e4/small.jpg"
      },
      {
        "Name": "Nicolas Hafner",
        "Affiliation": "Shirakumo.org",
        "Key": "nicolashafner",
        "URL": "https://everything.shinmera.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nicolashafner/ce250beb-4a99-4413-bd6c-90203d2158cc/small.jpg"
      },
      {
        "Name": "Marco Antoniotti",
        "Affiliation": "Università degli Studi di Milano-Bicocca, Italy",
        "Key": "marcoantoniotti",
        "URL": "http://bimib.disco.unimib.it"
      },
      {
        "Name": "Marcel Taeumel",
        "Affiliation": "Hasso Plattner Institute",
        "Key": "marceltaeumel",
        "Bio": "I am a PhD student at the Hasso Plattner Institute at the University of Potsdam. I am part of the Software Architecture group led by Prof. Dr. Robert Hirschfeld. Since October 2011, I have also been part of the HPI Research School after getting my Master’s degree in Software Engineering at the HPI, too. \nMy research activities include the area of building tools for programmers, especially data-driven ones for program comprehension tasks. For this, direct manipulation concepts, dynamic analysis, and cooperation of distributed teams in agile processes play an important role. Additionally, I investigate modularity concepts with respect to critical software quality metrics such as extensibility and maintainability while reasoning about interdependencies between languages and tools.",
        "URL": "http://www.taeumel.eu",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/marceltaeumel/cf6cc09b-4a2f-4d6f-aaa0-0634744a9a10/small.jpg"
      },
      {
        "Name": "Hugo Sereno Ferreira",
        "Affiliation": "FEUP, Universidade do Porto",
        "Key": "hugoserenoferreira"
      },
      {
        "Name": "Christopher Schuster",
        "Affiliation": "University of California, Santa Cruz",
        "Key": "christopherschuster",
        "Bio": "I am interested in programming languages, photography, music and traveling. I studied at HPI in Germany and completed the PhD program at the University of California, Santa Cruz. I am currently working as a software engineer at Google.",
        "URL": "https://chris-schuster.net/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christopherschuster/cfcc49f6-4369-4eb7-be91-c76c420e27f2/small.jpg"
      },
      {
        "Name": "Kevin Moran",
        "Affiliation": "College of William \u0026 Mary",
        "Key": "kevinmoran",
        "Bio": "Kevin P. Moran has recently defended his Ph.D. Dissertation in the Computer Science Department at the College of William \u0026amp; Mary and will be joining the W\u0026amp;M CS Department in August 2018 as a Post-Doctoral Researcher. He graduated with a B.A. in Physics and Computer Science from the College of the Holy Cross in 2013, and an M.S. in Computer Science from the College of William \u0026amp; Mary in 2015. Kevin is a member of the SEMERU research group and advised by Dr. Denys Poshyvanyk. His main research interests include software engineering, maintenance, and evolution with a focus on mobile platforms. Additionally, he explores applications of data mining and machine learning to software engineering problems.",
        "URL": "https://www.kpmoran.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/kevinmoran/d0225738-0939-404c-b750-563fd750583d/small.jpg"
      },
      {
        "Name": "Christian Kohls",
        "Affiliation": "TH Köln",
        "Key": "christiankohls1",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christiankohls1/d173539f-2edf-445d-a99c-239d5ac6b9ed/small.jpg"
      },
      {
        "Name": "Viviana Mascardi",
        "Affiliation": "DIBRIS, University of Genova, Italy",
        "Key": "vivianamascardi"
      },
      {
        "Name": "Jurgen Vinju",
        "Affiliation": "CWI, Netherlands",
        "Key": "jurgenvinju",
        "Bio": " \n Researcher, see http://jurgen.vinju.org, in \n   \n   Software Language Engineering \n   Programming Languages \n   Empirical Software Engineering \n   Software Evolution \n    \n (Co)-Designer and/or (co-)engineer of (selected): \n   \n   Rascal Metaprogramming Language http://www.rascalmpl.org \n   Vallang http://www.usethesource.io/projects/vallang \n   IMP http://www.eclipse.org/imp, now Impulse http:www.usethesource.io/projects/impulse \n   OSSMETER http://www.ossmeter.org \n   ASF+SDF Meta-Environment http://www.meta-environment.org \n   SDF2 http://www.syntax-definition.org \n    \n Titles \n   \n   Full professor of Automated Software Analysis at TU Eindhoven \n   Group leader Software Analysis and Transformation at Centrum Wiskunde \u0026amp; Informatica https://www.cwi.nl/research/groups/software-analysis-and-transformation \n   Co-owner of SWAT.engineering BV http://www.swat.engineering \n   Chair of the steering committee of SLE http://www.sleconf.org \n    \n",
        "URL": "http://homepages.cwi.nl/~jurgenv",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jurgenvinju/d266250d-9162-4e8a-92ab-38094d38e78c/small.jpg"
      },
      {
        "Name": "Joeri De Koster",
        "Affiliation": "Vrije Universiteit Brussel, Belgium",
        "Key": "joeridekoster",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/joeridekoster/d2e18606-4198-4697-82df-a26c33ea23d6/small.jpg"
      },
      {
        "Name": "Joe Yoder",
        "Affiliation": "The Refactory, Inc.",
        "Key": "joeyoder",
        "Bio": "Joseph Yoder (agilist, computer scientist, and pattern author) is the founder and principle of The Refactory, a company focused on software architecture, design, implementation, consulting and mentoring on all facets of software development. Joe serves as president of the board of The Hillside Group, a group dedicated to improving the quality of life of everyone who uses, builds, and encounters software systems. He is best known as an author of the Big Ball of Mud pattern, which illuminates many fallacies in software architecture. Joe teaches and mentors developers on agile and lean practices, architecture, building flexible systems, clean design, patterns, refactoring, and testing. Joe thinks software is still too hard to change. He wants to do something about this and believes that you can start solving this problem through the use of best practices (patterns) and by putting the ability to change software into the hands of the people with the knowledge to change it. \nJoe has recently been innovating, collecting and writing on the best practices and patterns on Being Agile at Quality. During this time he has given presentations, workshops, and keynotes at various conferences and in industrial settings. He has published (and continues writing and collecting) over two dozen patterns on this topic. Joe have also been working with organizations on the best practices for Agile Quality Assurance, helping them apply these techniques, and has shepherded Agile Experience reports on the topic. Variations of this some of this material has been presented as talks and workshop/tutorials at various conferences (Agile, JDD in Poland, SugarLoaf PLoP, Agile Portugal, AgileBrazil, YOW! in Australia, Saturn, and Israel Conference on Software Architecture) and to some of Joe’s clients. In 2015 Joe won the New Directions award with a colleague at Saturn 2015, given to the presentation that best describes innovative new approaches and thought leadership in the application of architecture-centric practices for his presentation QA to AQ: Shifting from Quality Assurance to Agile Quality (see here).",
        "URL": "http://www.joeyoder.com/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/joeyoder/d3200468-4b66-4494-9d7e-506c58757ff4/small.jpg"
      },
      {
        "Name": "Coen De Roover",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "coenderoover",
        "URL": "http://soft.vub.ac.be/~cderoove/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/coenderoover/d37e510e-421e-453c-a554-5aa2c2e1afc0/small.jpg"
      },
      {
        "Name": "Jens Mönig",
        "Affiliation": "SAP SE",
        "Key": "jensmonig",
        "Bio": "Jens Mönig is a researcher at SAP and makes interactive programming environments. He is fanatical about visual coding blocks. Jens is the architect and lead programmer, together with Brian Harvey, of UC Berkeley’s “Snap! Build Your Own Blocks” programming language, used in the introductory “Beauty and Joy of Computing” curriculum. Previously Jens has worked under Alan Kay on the GP programming language together with John Maloney and Yoshiki Ohshima, helped develop Scratch for the MIT Media Lab and written enterprise software at MioSoft. Jens is a fully qualified lawyer in Germany and has been an attorney, corporate counsel and lecturer for many years before rediscovering his love for programming through Scratch and Squeak. For leisure Jens likes guitar picking and strumming his mandolin.",
        "URL": "https://snap.berkeley.edu",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jensmonig/d559dcec-76f0-4b83-a159-fb757aedecf7/small.jpg"
      },
      {
        "Name": "Marc Battyani",
        "Affiliation": "FractalConcept",
        "Key": "marcbattyani"
      },
      {
        "Name": "Maurizio Proietti",
        "Affiliation": "CNR-IASI",
        "Key": "maurizioproietti",
        "URL": "http://www.iasi.cnr.it/~proietti/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/maurizioproietti/d67e9563-b579-438b-8137-51905f9d96dd/small.jpg"
      },
      {
        "Name": "Stephen Kell",
        "Affiliation": "University of Kent",
        "Key": "stephenkell",
        "URL": "http://www.cs.kent.ac.uk/people/staff/srk21",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/stephenkell/d695dcb7-b544-4136-b4b7-b670a49a62bb/small.jpg"
      },
      {
        "Name": "Pascal Weisenburger",
        "Affiliation": "Technische Universität Darmstadt",
        "Key": "pascalweisenburger",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/pascalweisenburger/d7a84cba-24ad-49be-8476-18c6ac0085a1/small.jpg"
      },
      {
        "Name": "Isaac Oscar Gariano",
        "Affiliation": "",
        "Key": "isaacoscargariano"
      },
      {
        "Name": "Clayton Lewis",
        "Affiliation": "University of Colorado Boulder",
        "Key": "claytonlewis"
      },
      {
        "Name": "Tom Van Cutsem",
        "Affiliation": "Nokia Bell Labs",
        "Key": "tomvancutsem",
        "URL": "https://www.bell-labs.com/usr/tom.van_cutsem",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tomvancutsem/d90930ae-0259-47a9-babd-384d61044794/small.jpg"
      },
      {
        "Name": "Sam Lindley",
        "Affiliation": "University of Edinburgh, UK",
        "Key": "samlindley",
        "URL": "http://homepages.inf.ed.ac.uk/slindley",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/samlindley/d92a62b6-9c47-4935-a9d1-1a2dd2eaffd9/small.jpg"
      },
      {
        "Name": "Midas Nouwens",
        "Affiliation": "Aarhus University",
        "Key": "midasnouwens"
      },
      {
        "Name": "Guido Salvaneschi",
        "Affiliation": "TU Darmstadt",
        "Key": "guidosalvaneschi",
        "URL": "http://www.guidosalvaneschi.com/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/guidosalvaneschi/d94b0885-baae-4e9c-9d18-8bb289a63620/small.jpg"
      },
      {
        "Name": "Tijs van der Storm",
        "Affiliation": "CWI, Netherlands",
        "Key": "tijsvanderstorm",
        "Bio": "Tijs van der Storm is senior researcher in the Software Analysis and Transformation (SWAT) group at Centrum Wiskunde \u0026amp; Informatica (CWI) in Amsterdam, and full professor in Software Engineering at the University of Groningen in Groningen. His research focuses on improving programmer experience through new and better software languages and developing the tools and techniques to engineer them in a modular and interactive fashion.",
        "URL": "http://www.cwi.nl/~storm/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tijsvanderstorm/d9b2817e-f473-42f0-a1dd-641f9e7e6712/small.jpg"
      },
      {
        "Name": "Jakub Przygodzki",
        "Affiliation": "",
        "Key": "jakubprzygodzki"
      },
      {
        "Name": "Stefan Ramson",
        "Affiliation": "Hasso Plattner Institute, Germany",
        "Key": "stefanramson"
      },
      {
        "Name": "Yoshiki Ohshima",
        "Affiliation": "HARC / Y Combinator Research",
        "Key": "yoshikiohshima1",
        "Bio": "Yoshiki Ohshima has research interests in interactive and educational computer systems, software architectures and programming languages. Yoshiki graduated from the Tokyo Institute of Technology in 1994. He was awarded his PhD for the creation of “Kedama”, a massively parallel particle programming system, from the Tokyo Institute of Technology in 2006. Yoshiki worked on theme park related research project at Walt Disney Imagineering R\u0026amp;D from 2000 through 2002. In 2002, he joined Twin Sun, Inc. From 2007 he worked at the Viewpoints Research Institute. At VPRI, Yoshiki worked on projects include bringing the etoys environment to children via the “XO” and the One Laptop Per Child (olpc) initiative, multilingualization of software environments, and the STEPS project.",
        "URL": "http://harc.ycr.org/member/yoshiki_ohshima/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/yoshikiohshima1/dcddd6cb-46fb-4836-aa0e-11191a473978/small.jpg"
      },
      {
        "Name": "Tony Hosking",
        "Affiliation": "Australian National University / Data61",
        "Key": "tonyhosking",
        "Bio": "I am a professor of computer science the Australian National University, contributing also as a researcher with Data61 (formerly NICTA). I previously spent 22 years on the faculty at Purdue University. I studied computer science at the University of Adelaide, the University of Waikato, and the University of Massachusetts at Ahmerst, receiving BSc, MSc, and PhD degrees, respectively. My research interests lie in the area of programming language implementation, and I work on problems arising in object persistence, object databases, distribution, memory management (garbage collection), managed language runtimes, language virtual machines, optimizing compilers, and architectural support for programming languages and applications. \nI am a Life Member of the Association for Computing Machinery and a Member of the IEEE. I was named a Distinguished Scientist of the ACM in 2012.",
        "URL": "https://hosking.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tonyhosking/dd80d442-ba29-419d-9921-85ccd30b7699/small.jpg"
      },
      {
        "Name": "Hernan Wilkinson",
        "Affiliation": "10Pines",
        "Key": "hernanwilkinson",
        "Bio": "Hernán Wilkinson graduated in Computer Science from the Faculty of Exact and Natural Sciences (FCEyN) of the University of Buenos Aires (UBA), Argentina. He has been teaching OO and Agil Software Development techniques since 2001, both in academia and in the industry through 10Pines. He has worked as a programmer at IBM, Software Architect at Banco Galicia and Manager of Development and Technology at Mercap. Currently he works as trainer, coach and software developer at 10Pines and simultaneously he is professor of Software Engineering at FCEyN, UBA. He founded 10Pines with some friends, a software development company based in Buenos Aires, Argentina. He has presented and participated in several national and international conferences such as OOSPLA, ESUG, Agile, XPConf, Agiles, Smalltalks, RubyConf, PHP Conf, Scrum Gathering Bolivia, Ecuador and Peru. He is a founding partner of FAST (Smalltalk Argentina Foundation) and organizer of the Smalltalks conference. He has contributed with several open source projects of the Smalltalk community. Promotes, after applying it in 10Pines, horizontal and agile organizations through talks and presentations. Beyond all his obligations, he remains a passionate programmer. You can contact him at hernan.wilkinson@10pines.com and follow him on twitter @hernanwilkinson",
        "URL": "http://www.10pines.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/hernanwilkinson/ddfcade5-14a7-4927-b535-cf2c16096e8d/small.jpg"
      },
      {
        "Name": "Peter Thiemann",
        "Affiliation": "University of Freiburg, Germany",
        "Key": "peterthiemann",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/peterthiemann/de9d94d8-b652-43ce-9ca2-6cafba05baa5/small.jpg"
      },
      {
        "Name": "Siegfried Nijssen",
        "Affiliation": " UC Louvain",
        "Key": "siegfriednijssen"
      },
      {
        "Name": "Toni Mattis",
        "Affiliation": "Hasso Plattner Institute, University of Potsdam",
        "Key": "tonimattis",
        "URL": "https://www.hpi.uni-potsdam.de/hirschfeld/people/mattis/index.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tonimattis/df0293e5-bc30-45d6-89f3-321c4edf9b25/small.jpg"
      },
      {
        "Name": "Amir Ben-Amram",
        "Affiliation": "",
        "Key": "amirbenamram"
      },
      {
        "Name": "Hidetake Uwano",
        "Affiliation": "National Institute of Technology, Nara College, Japan",
        "Key": "hidetakeuwano",
        "URL": "http://www.info.nara-k.ac.jp/~uwano/"
      },
      {
        "Name": "Joe Gibbs Politz",
        "Affiliation": "University of California San Diego, United States",
        "Key": "joepolitz",
        "URL": "https://jpolitz.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/joepolitz/e3e1e004-95e5-4a12-bfab-b76f6088c538/small.jpg"
      },
      {
        "Name": "Tomas Petricek",
        "Affiliation": "University of Kent",
        "Key": "tomaspetricek",
        "Bio": "Tomas is a Lecturer at University of Kent and a Collaborating Fellow at the Alan Turing Institute in London. He is building programming tools that integrate with modern data sources (open government data, data published by citizen initiatives) and let users easily create analyses and visualizations that are linked to the original data source, making the analyses more transparent, reproducible, but also easy to adapt. His early work on the project can be found at http://thegamma.net. \nTomas’ many other interests include open-source and functional programming (he is an active contributor to the F# ecosystem), programming language theory (his PhD thesis on “coeffects” develops a theory of context-aware programming language language), but also understanding programming through the perspective of philosophy of science.",
        "URL": "http://tomasp.net",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tomaspetricek/e3fe856f-9dc9-4032-b5ca-e9c04a21a084/small.jpg"
      },
      {
        "Name": "Philipp Haller",
        "Affiliation": "KTH Royal Institute of Technology, Sweden",
        "Key": "philipphaller",
        "Bio": "Associate Professor in the School of Electrical Engineering and Computer Science at KTH Royal Institute of Technology in Stockholm, Sweden.",
        "URL": "http://www.csc.kth.se/~phaller/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/philipphaller/e4336dc9-1f38-4143-8820-64b443bb4231/small.jpg"
      },
      {
        "Name": "Michal Antkiewicz",
        "Affiliation": "University of Waterloo, Canada",
        "Key": "michalantkiewicz"
      },
      {
        "Name": "Charlotte Herzeel",
        "Affiliation": "Vrije Universiteit Brussel",
        "Key": "charlotteherzeel"
      },
      {
        "Name": "Matúš Sulír",
        "Affiliation": "Technical University of Košice",
        "Key": "matussulir",
        "URL": "http://sulir.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/matussulir/e675311e-12b2-45ba-9533-0edc8c148dbf/small.jpg"
      },
      {
        "Name": "Jeanine Miller Adkisson",
        "Affiliation": "Tokyo Institute of Technology",
        "Key": "jeaninemilleradkisson",
        "URL": "http://jneen.net/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jeaninemilleradkisson/e6b1654f-4832-467f-9209-f556633d26cb/small.jpg"
      },
      {
        "Name": "Giovanni Denaro",
        "Affiliation": "University of Milano-Bicocca, Italy",
        "Key": "giovannidenaro",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/giovannidenaro/e8035a1f-199d-4bfb-8292-2e0748473071/small.jpg"
      },
      {
        "Name": "Emanuele De Angelis",
        "Affiliation": "University of Chieti-Pescara",
        "Key": "emanueldeangelis",
        "URL": "http://www.sci.unich.it/~deangelis/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/emanueldeangelis/e80d8a14-78a0-47d2-a49a-ed5db1b1add4/small.jpg"
      },
      {
        "Name": "Nikolay Shilov",
        "Affiliation": "Innopolis University",
        "Key": "nikolayshilov",
        "Bio": "Graduated Math Department of Novosibirsk State Uni in 1983, got Ph.D. from Novosibirsk Institute of Computational Math in 1087. Since than had research and teaching positions (visiting, temporal and permanent) in Australia, Kazakhstan, New Zealand, South Korea, and (of course) Russia. From the last years of the university studies I am pretty much interested in applied Logic, program semantics, verification and equivalence.",
        "URL": "http://persons.iis.nsk.su/en/shilov",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/nikolayshilov/e8503caf-11e7-47b6-a918-9970fc894c0c/small.jpg"
      },
      {
        "Name": "Tobias Pape",
        "Affiliation": "Hasso Plattner Institute, Germany",
        "Key": "tobiaspape",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/tobiaspape/ea7cecb4-c914-4226-bb43-32c30b5200bf/small.jpg"
      },
      {
        "Name": "Alberto Pettorossi",
        "Affiliation": "University of Rome Tor Vergata, Italy",
        "Key": "albertopettorossi",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/albertopettorossi/ead2a957-0479-44c2-83f5-bfa1d494745a/small.jpg"
      },
      {
        "Name": "Erik Ernst",
        "Affiliation": "Google Inc.",
        "Key": "erikernst",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/erikernst/ec9571aa-471e-43e3-bfb2-6aceeeb37cf8/small.jpg"
      },
      {
        "Name": "Massimo Bartoletti",
        "Affiliation": "",
        "Key": "massimobartoletti"
      },
      {
        "Name": "Richard P. Gabriel",
        "Affiliation": "Dream Songs, Inc. \u0026 HPI",
        "Key": "richardpgabriel",
        "Bio": "I used to be Dick Gabriel. Those days are long gone. Now I’m just Dick Gabriel.",
        "URL": "https://dreamsongs.com",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/richardpgabriel/ee483c5c-e8b7-4ba3-9f99-25a64a4e576d/small.jpg"
      },
      {
        "Name": "Christophe Rhodes",
        "Affiliation": "Goldsmiths, University of London",
        "Key": "christopherhodes",
        "URL": "http://doc.gold.ac.uk/~mas01cr/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/christopherhodes/f0983ac1-a1cd-454d-9a0b-249d4a73e032/small.jpg"
      },
      {
        "Name": "Lukas Stadler",
        "Affiliation": "Oracle Labs, Austria",
        "Key": "lukasstadler",
        "URL": "https://labs.oracle.com/pls/apex/f?p\u003dlabs:bio:0:1917",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lukasstadler/f201e6d8-1fe9-45f5-bb64-3ed48a602b36/small.jpg"
      },
      {
        "Name": "Filipe Figueiredo Correia",
        "Affiliation": "University of Porto",
        "Key": "filipecorreia",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/filipecorreia/f2535bbb-96c5-4661-9c43-e5547055436b/small.jpg"
      },
      {
        "Name": "Mario Südholt",
        "Affiliation": "IMT Atlantique, Nantes, France",
        "Key": "mariosudholt",
        "URL": "http://www.emn.fr/z-info/sudholt/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/mariosudholt/f4853798-122e-4766-9615-7975c2e100d0/small.jpg"
      },
      {
        "Name": "Elmer van Chastelet",
        "Affiliation": "Delft University of Technology",
        "Key": "elmervanchastelet",
        "Bio": "Dev + support for conf.researchr.org.",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/elmervanchastelet/f5bfd9ff-4352-4a70-ba53-7f5f4a47feb0/small.jpg"
      },
      {
        "Name": "David Rauch",
        "Affiliation": "Hasso Plattner Institute, Germany",
        "Key": "davidrauch",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/davidrauch/f700e44d-3965-4115-9105-1e9ff03a9aa9/small.jpg"
      },
      {
        "Name": "Falco Dürsch",
        "Affiliation": "",
        "Key": "falcodursch"
      },
      {
        "Name": "Winnie Soon",
        "Affiliation": "Aarhus University",
        "Key": "winniesoon",
        "Bio": "Winnie Soon is an artist-researcher-coder-educator whose works intersect art, cultural studies and programming practice. She has a MA from School of Creative Media, City University of Hong Kong and a MSc from Institute of Digital Art and Technology, Plymouth University in UK, and 10 years experience as a programmer, designer, information architect and project manager in both corporate and educational settings. She has recently completed a PhD at the Center for Participatory IT (School of Communication and Culture), Aarhus University with the topic titled “Executing Liveness: An examination of code inter-actions in software (art) practice”. She has awarded the Top-Ranked LABS Abstracts 2017 by Leonardo and the winner of The 2018 Aarhus University Research Foundation PhD award. Currently, she is Assistant Professor at the Department of Digital Design and Information Studies in Aarhus University, teaching Aesthetic Programming and Digital Culture. \nInformed by the cultural, social and political context of technology, Winnie’s work approach spans the fields of artistic practice, media art, software studies, cultural studies and computer science, examining the materiality of computational processes that underwrite our experiences and realities in digital culture via artistic and/or coding practice. Her works explore themes/concepts around digital culture, specifically concerning internet censorship, images politics, data circulation, real-time processing/liveness, the culture of code practice, etc. Her projects and lectures have been presented internationally at museums, art festivals, universities and conferences, including but not limited to ZKM, Transmediale2015/2017 (Berlin), Electronic Literature Festival2018, ISEA2015/2016 (Vancouver, Hong Kong), V\u0026amp;A Museum (London), ARoS Aarhus Art Museum (Aarhus, Denmark), Si Shang Art Museum (Beijing), Pulse Art + Technology Festival (Savannah, USA), FutureEverything Art Exhibition (Manchester), The Wrong – New Digital Art Biennale, Hong Kong Microwave International Media Arts Festival, Taipei National University of Arts, Karlsruhe University of Arts and Design and The University of Hong Kong. \nWinnie’s current research focuses on Exploratory and Aesthetic Programming for arts and humanities, working on two books titled “Aesthetic Programming: A Handbook of Software Studies, or Software Studies for Dummies” (with Geoff Cox) and “Fix My Code” (with Cornelia Sollfrank).",
        "URL": "http://www.siusoon.net",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/winniesoon/f747c850-8fc6-4839-9a4b-903a86c86bbb/small.jpg"
      },
      {
        "Name": "Jens Lincke",
        "Affiliation": "Hasso Plattner Institute, University of Potsdam, Germany",
        "Key": "jenslincke",
        "Bio": "Jens Lincke is a member of the Software Architecture group at the Hasso Plattner Institute, where he is interested in live and explorative programming (Lively Kernel). He was awarded a PhD for a thesis on evolving tools in a collaborative self-supporting development environment.",
        "URL": "https://www.hpi.uni-potsdam.de/hirschfeld/people/lincke/index.html",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/jenslincke/f7778fb0-daaf-4760-998f-3d2055a461e8/small.jpg"
      },
      {
        "Name": "Yusuke Izawa",
        "Affiliation": "Tokyo Institute of Technology",
        "Key": "yusukeizawa",
        "URL": "https://3tty0n.github.io",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/yusukeizawa/f7bf13d6-2a22-41c2-8391-6ecc6ef3c950/small.jpg"
      },
      {
        "Name": "Gary Leavens",
        "Affiliation": "University of Central Florida",
        "Key": "garyleavens",
        "Bio": "The long term goal of my research is to better understand how to solve programming problems: how to specify such problems, methods for thinking about such problems, notations for expressing solutions, and ways to check that the solutions are correct. In pursuing this goal, I have worked in two main areas: formal methods and programming languages. formal methods and programming languages.",
        "URL": "http://www.cs.ucf.edu/~leavens",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/garyleavens/f7c4abbb-3253-4647-8bc7-09a87ec08269/small.jpg"
      },
      {
        "Name": "Lukasz Ziarek",
        "Affiliation": "SUNY Buffalo, USA",
        "Key": "lukaszziarek",
        "URL": "http://www.cse.buffalo.edu/~lziarek/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/lukaszziarek/f8e3d6c5-51be-4b7f-86a6-7961b85f2095/small.jpg"
      },
      {
        "Name": "Andrea Valenza",
        "Affiliation": "",
        "Key": "andreavalenza"
      },
      {
        "Name": "Antonina Nepeivoda",
        "Affiliation": "",
        "Key": "antoninanepeivoda"
      },
      {
        "Name": "Meinte Boersma",
        "Affiliation": "Dutch Tax and Customs Agency",
        "Key": "meinteboersma",
        "Bio": "Meinte Boersma has been doing model-driven software development and software language engineering for over a decade, and in numerous projects. He had a startup around his own language workbench (Más), and has been spreading his experience with and knowledge on the subject through blogs and conference talks. He is currently working at the Dutch Tax and Customs Agency, creating DSLs to bridge the gap between lawpeople and IT. He is also authoring a book about projectional DSLs that’s to be released in 2020 by Manning Publications.",
        "URL": "http://www.dslconsultancy.com/",
        "URLphoto": "https://2019.programming-conference.org/getProfileImage/meinteboersma/fae8a19f-d254-46d6-ab41-c79c6fb323b2/small.jpg"
      },
      {
        "Name": "Léo Valais",
        "Affiliation": "",
        "Key": "leovalais"
      }
    ],
    "VenueInfo": {
      "Name": "Palazzo della Meridiana"
    }
  }